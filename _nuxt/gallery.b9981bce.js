import{a as u0,b as al,e as Zt,F as vv,r as kv,o as il,f as ru,h as au,t as or,i as $v,j as Iv}from"./entry.0a52e418.js";function Cv(s,e){for(var t=0;t<e.length;t++){const n=e[t];if(typeof n!="string"&&!Array.isArray(n)){for(const o in n)if(o!=="default"&&!(o in s)){const r=Object.getOwnPropertyDescriptor(n,o);r&&Object.defineProperty(s,o,r.get?r:{enumerable:!0,get:()=>n[o]})}}}return Object.freeze(Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nv=1e-7,Sv=1e-4;class h0{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class fh{refCount(e){return Yt("refCount")}incRef(e){return Yt("incRef")}timerAvailable(){return!0}time(e){return Yt("time")}read(e){return Yt("read")}readSync(e){return Yt("readSync")}readToGPU(e,t){return Yt("readToGPU")}numDataIds(){return Yt("numDataIds")}disposeData(e,t){return Yt("disposeData")}write(e,t,n){return Yt("write")}move(e,t,n,o,r){return Yt("move")}createTensorFromGPUData(e,t,n){return Yt("createTensorFromGPUData")}memory(){return Yt("memory")}floatPrecision(){return Yt("floatPrecision")}epsilon(){return this.floatPrecision()===32?Nv:Sv}dispose(){return Yt("dispose")}}function Yt(s){throw new Error(`'${s}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tv(s){let e=s.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,rr(s,e,t)}function To(s,e,t){return Math.max(s,Math.min(e,t))}function gh(s){return s%2===0?s:s+1}function rr(s,e,t){const n=s[e];s[e]=s[t],s[t]=n}function Ev(s){let e=0;for(let t=0;t<s.length;t++)e+=s[t];return e}function $(s,e){if(!s)throw new Error(typeof e=="string"?e:e())}function cs(s,e,t=""){$(Se(s,e),()=>t+` Shapes ${s} and ${e} must match`)}function _r(s){$(s!=null,()=>"The input to the tensor constructor must be a non-null value.")}function W(s){if(s.length===0)return 1;let e=s[0];for(let t=1;t<s.length;t++)e*=s[t];return e}function Av(s,e){if(s===e)return!0;if(s==null||e==null||s.length!==e.length)return!1;for(let t=0;t<s.length;t++)if(s[t]!==null&&e[t]!==null&&s[t]!==e[t])return!1;return!0}function Se(s,e){if(s===e)return!0;if(s==null||e==null||s.length!==e.length)return!1;for(let t=0;t<s.length;t++)if(s[t]!==e[t])return!1;return!0}function xr(s){return s%1===0}function iu(s){const e=Math.ceil(Math.sqrt(s));return[e,Math.ceil(s/e)]}function pr(s,e){return e<=s.length?s:s+" ".repeat(e-s.length)}function Cf(s,e=o=>0,t,n){return new Promise((o,r)=>{let a=0;const i=()=>{if(s()){o();return}a++;const l=e(a);if(t!=null&&a>=t){r();return}n!=null?n(i,l):setTimeout(i,l)};i()})}function d0(s,e){let t=1,n=-1;for(let r=0;r<s.length;++r)if(s[r]>=0)t*=s[r];else if(s[r]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${r}`);n=r}else if(s[r]<0)throw Error(`Shapes can not be < 0. Found ${s[r]} at dim ${r}`);if(n===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${s}`);return s}if(t===0)throw Error(`Cannot infer the missing size in [${s}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const o=s.slice();return o[n]=e/t,o}function Ie(s,e){const t=e.length;return s=s==null?e.map((n,o)=>o):[].concat(s),$(s.every(n=>n>=-t&&n<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${s}`),$(s.every(n=>xr(n)),()=>`All values in axis param must be integers but got axis ${s}`),s.map(n=>n<0?t+n:n)}function to(s,e){const t=[],n=[],o=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||o?null:Ie(e,s).sort();let a=0;for(let i=0;i<s.length;++i){if(r!=null){if(r[a]===i&&s[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${s[i]}' is not 1`);(r[a]==null||r[a]>i)&&s[i]===1&&(t.push(s[i]),n.push(i)),r[a]<=i&&a++}s[i]!==1&&(t.push(s[i]),n.push(i))}return{newShape:t,keptDims:n}}function St(s,e){return ot(s,e)}function ot(s,e){let t=null;if(s==null||s==="float32")t=new Float32Array(e);else if(s==="int32")t=new Int32Array(e);else if(s==="bool")t=new Uint8Array(e);else if(s==="string")t=new Array(e);else throw new Error(`Unknown data type ${s}`);return t}function _v(s,e){for(let t=0;t<s.length;t++){const n=s[t];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${e} being uploaded contains ${n}.`)}}function Dv(s){return s==="bool"||s==="complex64"||s==="float32"||s==="int32"||s==="string"}function m0(s,e){return!(e==="complex64"||e==="float32"&&s!=="complex64"||e==="int32"&&s!=="float32"&&s!=="complex64"||e==="bool"&&s==="bool")}function hl(s){if(s==="float32"||s==="int32")return 4;if(s==="complex64")return 8;if(s==="bool")return 1;throw new Error(`Unknown dtype ${s}`)}function Rv(s){if(s==null)return 0;let e=0;return s.forEach(t=>e+=t.length),e}function $a(s){return typeof s=="string"||s instanceof String}function Ov(s){return typeof s=="boolean"}function lu(s){return typeof s=="number"}function Dr(s){return Array.isArray(s)?Dr(s[0]):s instanceof Float32Array?"float32":s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray?"int32":lu(s)?"float32":$a(s)?"string":Ov(s)?"bool":"float32"}function cu(s){return!!(s&&s.constructor&&s.call&&s.apply)}function pu(s,e){for(let t=e;t<s;++t)if(s%t===0)return t;return s}function de(s){const e=s.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=s[e-1];for(let n=e-3;n>=0;--n)t[n]=t[n+1]*s[n+1];return t}function f0(s,e,t,n=!1){const o=new Array;if(e.length===1){const r=e[0]*(n?2:1);for(let a=0;a<r;a++)o[a]=t[s+a]}else{const r=e[0],a=e.slice(1),i=a.reduce((l,c)=>l*c)*(n?2:1);for(let l=0;l<r;l++)o[l]=f0(s+l*i,a,t,n)}return o}function _s(s,e,t=!1){if(s.length===0)return e[0];const n=s.reduce((o,r)=>o*r)*(t?2:1);if(n===0)return[];if(n!==e.length)throw new Error(`[${s}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return f0(0,s,e,t)}function Fv(s,e){if(Array.isArray(s))return s;if(e==="float32")return s instanceof Float32Array?s:new Float32Array(s);if(e==="int32")return s instanceof Int32Array?s:new Int32Array(s);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(s));throw new Error(`Unknown dtype ${e}`)}function xh(s,e){const t=Rt(s,e);for(let n=0;n<t.length;n++)t[n]=1;return t}function Rt(s,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(s);if(e==="int32")return new Int32Array(s);if(e==="bool")return new Uint8Array(s);throw new Error(`Unknown data type ${e}`)}function g0(s,e){const t=s.reduce((n,o)=>n*o,1);if(e==null||e==="float32")return _s(s,new Float32Array(t));if(e==="int32")return _s(s,new Int32Array(t));if(e==="bool")return _s(s,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function xs(s){s.forEach(e=>{$(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${s}].`)})}function rn(s,e,t){if(e===0)return 0;if(e===1)return s[0];let n=s[s.length-1];for(let o=0;o<s.length-1;++o)n+=t[o]*s[o];return n}function Rr(s,e,t){if(e===0)return[];if(e===1)return[s];const n=new Array(e);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(s/t[o]),s-=n[o]*t[o];return n[n.length-1]=s,n}function Eo(s){return s&&s.then&&typeof s.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nf="tfjsflags";class Pv{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Lv,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(L().getBool("IS_TEST")||L().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){const o=this.urlFlags[e];L().getBool("IS_TEST")||L().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Eo(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);Nf in e&&e[Nf].split(",").forEach(n=>{const[o,r]=n.split(":");this.urlFlags[o]=jv(o,r)})}}function Lv(s){const e={};return s.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...n)=>(zv(e,n[0],n[1]),n.join("="))),e}function zv(s,e,t){s[decodeURIComponent(e)]=decodeURIComponent(t||"")}function jv(s,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function L(){return x0}let x0=null;function Bv(s){x0=s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jp;function y0(){if(jp==null){let s;if(typeof window<"u")s=window;else if(typeof global<"u")s=global;else if(typeof process<"u")s=process;else if(typeof self<"u")s=self;else throw new Error("Could not find a global object");jp=s}return jp}function Mv(){const s=y0();return s._tfGlobals==null&&(s._tfGlobals=new Map),s._tfGlobals}function yh(s,e){const t=Mv();if(t.has(s))return t.get(s);{const n=e();return t.set(s,n),t.get(s)}}const Ul="Abs",Ia="Acos",Ca="Acosh",Or="Add",Gl="AddN",bh="All",wh="Any",Hl="ArgMax",ql="ArgMin",Na="Asin",Sa="Asinh",Ta="Atan",Ea="Atanh",Aa="Atan2",Kl="AvgPool",vh="AvgPoolGrad",Xl="AvgPool3D",kh="AvgPool3DGrad",Yl="BatchMatMul",Zl="BatchToSpaceND",$h="Bincount",Jl="BitwiseAnd",Vv="BroadcastTo",Ih="BroadcastArgs",_a="Cast",Da="Ceil",Ra="ClipByValue",Ch="Complex",Ql="ComplexAbs",ec="Concat",tc="Conv2D",Nh="Conv2DBackpropFilter",sc="Conv2DBackpropInput",nc="Conv3D",Sh="Conv3DBackpropFilterV2",Th="Conv3DBackpropInputV2",Oa="Cos",Fa="Cosh",Eh="Cumprod",oc="Cumsum",Ah="CropAndResize",_h="DenseBincount",Dh="DepthToSpace",rc="DepthwiseConv2dNative",Rh="DepthwiseConv2dNativeBackpropFilter",Oh="DepthwiseConv2dNativeBackpropInput",Fh="Diag",ac="Dilation2D",uu="Dilation2DBackpropInput",hu="Dilation2DBackpropFilter",Wv="Draw",Pa="RealDiv",Ph="Einsum",La="Elu",Lh="EluGrad",za="Erf",ic="Equal",ja="Exp",lc="ExpandDims",Ba="Expm1",zh="FFT",jh="Fill",Bh="FlipLeftRight",Ma="Floor",Va="FloorDiv",cc="FusedBatchNorm",pc="GatherV2",Mh="GatherNd",uc="Greater",Wa="GreaterEqual",Ua="Identity",Vh="IFFT",Wh="Imag",Ga="IsFinite",Ha="IsInf",qa="IsNan",hc="LeakyRelu",dc="Less",mc="LessEqual",Uh="LinSpace",Ka="Log",Xa="Log1p",fc="LogicalAnd",gc="LogicalNot",xc="LogicalOr",Uv="LogSoftmax",yc="LRN",Gh="LRNGrad",bc="Max",Ya="Maximum",wc="MaxPool",Hh="MaxPoolGrad",vc="MaxPool3D",qh="MaxPool3DGrad",Kh="MaxPoolWithArgmax",kc="Mean",$c="Min",Za="Minimum",Ic="MirrorPad",Ja="Mod",Xh="Multinomial",Qa="Multiply",Cc="Neg",Nc="NotEqual",Yh="NonMaxSuppressionV3",Zh="NonMaxSuppressionV4",Jh="NonMaxSuppressionV5",Sc="OnesLike",Tc="OneHot",Ec="Pack",Ac="PadV2",ei="Pow",_c="Prelu",Dc="Prod",Qh="RaggedGather",ed="RaggedRange",td="RaggedTensorToTensor",sd="Range",nd="Real",ti="Reciprocal",si="Relu",Rc="Reshape",Oc="ResizeNearestNeighbor",od="ResizeNearestNeighborGrad",Fc="ResizeBilinear",rd="ResizeBilinearGrad",ni="Relu6",Pc="Reverse",oi="Round",ri="Rsqrt",ad="ScatterNd",id="TensorScatterUpdate",ld="SearchSorted",Lc="Select",ai="Selu",zc="Slice",ii="Sin",li="Sinh",ci="Sign",pi="Sigmoid",ui="Softplus",hi="Sqrt",jc="Sum",Bc="SpaceToBatchND",Mc="SplitV",Vc="Softmax",cd="SparseFillEmptyRows",pd="SparseReshape",ud="SparseSegmentMean",hd="SparseSegmentSum",dd="SparseToDense",di="SquaredDifference",md="Square",Wc="StaticRegexReplace",fd="StridedSlice",gd="StringNGrams",xd="StringSplit",yd="StringToHashBucketFast",mi="Sub",fi="Tan",gi="Tanh",xi="Tile",bd="TopK",wd="Transform",ur="Transpose",vd="Unique",Uc="Unpack",Gc="UnsortedSegmentSum",Hc="ZerosLike",yi="Step",du="FromPixels",kd="RotateWithOffset",dl="_FusedMatMul",ml="FusedConv2D",fl="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ds(...s){L().getBool("IS_TEST")||L().getBool("PROD")||console.warn(...s)}function Gv(...s){L().getBool("IS_TEST")||L().getBool("PROD")||console.log(...s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gl=yh("kernelRegistry",()=>new Map),mu=yh("gradRegistry",()=>new Map);function fu(s,e){const t=w0(s,e);return gl.get(t)}function Sf(s){return mu.get(s)}function Tf(s){const e=gl.entries(),t=[];for(;;){const{done:n,value:o}=e.next();if(n)break;const[r,a]=o,[i]=r.split("_");i===s&&t.push(a)}return t}function b0(s){const{kernelName:e,backendName:t}=s,n=w0(e,t);gl.has(n)&&ds(`The kernel '${e}' for backend '${t}' is already registered`),gl.set(n,s)}function Hv(s){const{kernelName:e}=s;mu.has(e)&&L().getBool("DEBUG")&&ds(`Overriding the gradient for '${e}'`),mu.set(e,s)}function w0(s,e){return`${e}_${s}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v0(s){return s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array||s instanceof Uint8ClampedArray}var Mo=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function qv(s){if(s.__esModule)return s;var e=s.default;if(typeof e=="function"){var t=function n(){if(this instanceof n){var o=[null];o.push.apply(o,arguments);var r=Function.bind.apply(e,o);return new r}return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(s).forEach(function(n){var o=Object.getOwnPropertyDescriptor(s,n);Object.defineProperty(t,n,o.get?o:{enumerable:!0,get:function(){return s[n]}})}),t}var gu=Ue,Cs=null;try{Cs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ue(s,e,t){this.low=s|0,this.high=e|0,this.unsigned=!!t}Ue.prototype.__isLong__;Object.defineProperty(Ue.prototype,"__isLong__",{value:!0});function ps(s){return(s&&s.__isLong__)===!0}Ue.isLong=ps;var Ef={},Af={};function Vo(s,e){var t,n,o;return e?(s>>>=0,(o=0<=s&&s<256)&&(n=Af[s],n)?n:(t=Ge(s,(s|0)<0?-1:0,!0),o&&(Af[s]=t),t)):(s|=0,(o=-128<=s&&s<128)&&(n=Ef[s],n)?n:(t=Ge(s,s<0?-1:0,!1),o&&(Ef[s]=t),t))}Ue.fromInt=Vo;function Ns(s,e){if(isNaN(s))return e?$o:Ss;if(e){if(s<0)return $o;if(s>=k0)return C0}else{if(s<=-Df)return es;if(s+1>=Df)return I0}return s<0?Ns(-s,e).neg():Ge(s%yr|0,s/yr|0,e)}Ue.fromNumber=Ns;function Ge(s,e,t){return new Ue(s,e,t)}Ue.fromBits=Ge;var xl=Math.pow;function $d(s,e,t){if(s.length===0)throw Error("empty string");if(s==="NaN"||s==="Infinity"||s==="+Infinity"||s==="-Infinity")return Ss;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var n;if((n=s.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return $d(s.substring(1),e,t).neg();for(var o=Ns(xl(t,8)),r=Ss,a=0;a<s.length;a+=8){var i=Math.min(8,s.length-a),l=parseInt(s.substring(a,a+i),t);if(i<8){var c=Ns(xl(t,i));r=r.mul(c).add(Ns(l))}else r=r.mul(o),r=r.add(Ns(l))}return r.unsigned=e,r}Ue.fromString=$d;function Zs(s,e){return typeof s=="number"?Ns(s,e):typeof s=="string"?$d(s,e):Ge(s.low,s.high,typeof e=="boolean"?e:s.unsigned)}Ue.fromValue=Zs;var _f=1<<16,Kv=1<<24,yr=_f*_f,k0=yr*yr,Df=k0/2,Rf=Vo(Kv),Ss=Vo(0);Ue.ZERO=Ss;var $o=Vo(0,!0);Ue.UZERO=$o;var cr=Vo(1);Ue.ONE=cr;var $0=Vo(1,!0);Ue.UONE=$0;var xu=Vo(-1);Ue.NEG_ONE=xu;var I0=Ge(-1,2147483647,!1);Ue.MAX_VALUE=I0;var C0=Ge(-1,-1,!0);Ue.MAX_UNSIGNED_VALUE=C0;var es=Ge(0,-2147483648,!1);Ue.MIN_VALUE=es;var se=Ue.prototype;se.toInt=function(){return this.unsigned?this.low>>>0:this.low};se.toNumber=function(){return this.unsigned?(this.high>>>0)*yr+(this.low>>>0):this.high*yr+(this.low>>>0)};se.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(es)){var t=Ns(e),n=this.div(t),o=n.mul(t).sub(this);return n.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var r=Ns(xl(e,6),this.unsigned),a=this,i="";;){var l=a.div(r),c=a.sub(l.mul(r)).toInt()>>>0,p=c.toString(e);if(a=l,a.isZero())return p+i;for(;p.length<6;)p="0"+p;i=""+p+i}};se.getHighBits=function(){return this.high};se.getHighBitsUnsigned=function(){return this.high>>>0};se.getLowBits=function(){return this.low};se.getLowBitsUnsigned=function(){return this.low>>>0};se.getNumBitsAbs=function(){if(this.isNegative())return this.eq(es)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};se.isZero=function(){return this.high===0&&this.low===0};se.eqz=se.isZero;se.isNegative=function(){return!this.unsigned&&this.high<0};se.isPositive=function(){return this.unsigned||this.high>=0};se.isOdd=function(){return(this.low&1)===1};se.isEven=function(){return(this.low&1)===0};se.equals=function(e){return ps(e)||(e=Zs(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};se.eq=se.equals;se.notEquals=function(e){return!this.eq(e)};se.neq=se.notEquals;se.ne=se.notEquals;se.lessThan=function(e){return this.comp(e)<0};se.lt=se.lessThan;se.lessThanOrEqual=function(e){return this.comp(e)<=0};se.lte=se.lessThanOrEqual;se.le=se.lessThanOrEqual;se.greaterThan=function(e){return this.comp(e)>0};se.gt=se.greaterThan;se.greaterThanOrEqual=function(e){return this.comp(e)>=0};se.gte=se.greaterThanOrEqual;se.ge=se.greaterThanOrEqual;se.compare=function(e){if(ps(e)||(e=Zs(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};se.comp=se.compare;se.negate=function(){return!this.unsigned&&this.eq(es)?es:this.not().add(cr)};se.neg=se.negate;se.add=function(e){ps(e)||(e=Zs(e));var t=this.high>>>16,n=this.high&65535,o=this.low>>>16,r=this.low&65535,a=e.high>>>16,i=e.high&65535,l=e.low>>>16,c=e.low&65535,p=0,u=0,h=0,d=0;return d+=r+c,h+=d>>>16,d&=65535,h+=o+l,u+=h>>>16,h&=65535,u+=n+i,p+=u>>>16,u&=65535,p+=t+a,p&=65535,Ge(h<<16|d,p<<16|u,this.unsigned)};se.subtract=function(e){return ps(e)||(e=Zs(e)),this.add(e.neg())};se.sub=se.subtract;se.multiply=function(e){if(this.isZero())return Ss;if(ps(e)||(e=Zs(e)),Cs){var t=Cs.mul(this.low,this.high,e.low,e.high);return Ge(t,Cs.get_high(),this.unsigned)}if(e.isZero())return Ss;if(this.eq(es))return e.isOdd()?es:Ss;if(e.eq(es))return this.isOdd()?es:Ss;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Rf)&&e.lt(Rf))return Ns(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,r=this.low>>>16,a=this.low&65535,i=e.high>>>16,l=e.high&65535,c=e.low>>>16,p=e.low&65535,u=0,h=0,d=0,m=0;return m+=a*p,d+=m>>>16,m&=65535,d+=r*p,h+=d>>>16,d&=65535,d+=a*c,h+=d>>>16,d&=65535,h+=o*p,u+=h>>>16,h&=65535,h+=r*c,u+=h>>>16,h&=65535,h+=a*l,u+=h>>>16,h&=65535,u+=n*p+o*c+r*l+a*i,u&=65535,Ge(d<<16|m,u<<16|h,this.unsigned)};se.mul=se.multiply;se.divide=function(e){if(ps(e)||(e=Zs(e)),e.isZero())throw Error("division by zero");if(Cs){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?Cs.div_u:Cs.div_s)(this.low,this.high,e.low,e.high);return Ge(t,Cs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?$o:Ss;var n,o,r;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return $o;if(e.gt(this.shru(1)))return $0;r=$o}else{if(this.eq(es)){if(e.eq(cr)||e.eq(xu))return es;if(e.eq(es))return cr;var a=this.shr(1);return n=a.div(e).shl(1),n.eq(Ss)?e.isNegative()?cr:xu:(o=this.sub(e.mul(n)),r=n.add(o.div(e)),r)}else if(e.eq(es))return this.unsigned?$o:Ss;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=Ss}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),l=i<=48?1:xl(2,i-48),c=Ns(n),p=c.mul(e);p.isNegative()||p.gt(o);)n-=l,c=Ns(n,this.unsigned),p=c.mul(e);c.isZero()&&(c=cr),r=r.add(c),o=o.sub(p)}return r};se.div=se.divide;se.modulo=function(e){if(ps(e)||(e=Zs(e)),Cs){var t=(this.unsigned?Cs.rem_u:Cs.rem_s)(this.low,this.high,e.low,e.high);return Ge(t,Cs.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};se.mod=se.modulo;se.rem=se.modulo;se.not=function(){return Ge(~this.low,~this.high,this.unsigned)};se.and=function(e){return ps(e)||(e=Zs(e)),Ge(this.low&e.low,this.high&e.high,this.unsigned)};se.or=function(e){return ps(e)||(e=Zs(e)),Ge(this.low|e.low,this.high|e.high,this.unsigned)};se.xor=function(e){return ps(e)||(e=Zs(e)),Ge(this.low^e.low,this.high^e.high,this.unsigned)};se.shiftLeft=function(e){return ps(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ge(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ge(0,this.low<<e-32,this.unsigned)};se.shl=se.shiftLeft;se.shiftRight=function(e){return ps(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ge(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ge(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};se.shr=se.shiftRight;se.shiftRightUnsigned=function(e){if(ps(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var n=this.low;return Ge(n>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Ge(t,0,this.unsigned):Ge(t>>>e-32,0,this.unsigned)};se.shru=se.shiftRightUnsigned;se.shr_u=se.shiftRightUnsigned;se.toSigned=function(){return this.unsigned?Ge(this.low,this.high,!1):this};se.toUnsigned=function(){return this.unsigned?this:Ge(this.low,this.high,!0)};se.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};se.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};se.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Ue.fromBytes=function(e,t,n){return n?Ue.fromBytesLE(e,t):Ue.fromBytesBE(e,t)};Ue.fromBytesLE=function(e,t){return new Ue(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Ue.fromBytesBE=function(e,t){return new Ue(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const Xv=Cv({__proto__:null,default:gu},[gu]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bo=gu||Xv;function qc(s){return bo.fromString(s,!0,16)}const N0=qc("c3a5c85c97cb3127"),yo=qc("b492b66fbe98f273"),Lt=qc("9ae16a3b2f90404f");function yu(s){return s.xor(s.shru(47))}function S0(s,e,t){const n=s.slice(e,e+t);return bo.fromBytes(Array.from(n),!0,!0)}function Ve(s,e){return S0(s,e,8)}function Of(s,e){return S0(s,e,4)}function bt(s,e){return e===0?s:s.shru(e).or(s.shl(64-e))}function Mn(s,e,t=qc("9ddfea08eb382d69")){let n=s.xor(e).mul(t);n=n.xor(n.shru(47));let o=e.xor(n).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function Yv(s,e,t,n,o,r){o=o.add(s),r=bt(r.add(o).add(n),21);const a=o;return o=o.add(e),o=o.add(t),r=r.add(bt(o,44)),[o.add(n),r.add(a)]}function Gi(s,e,t,n){return Yv(Ve(s,e),Ve(s,e+8),Ve(s,e+16),Ve(s,e+24),t,n)}function Zv(s,e=s.length){if(e>=8){const t=Lt.add(e*2),n=Ve(s,0).add(Lt),o=Ve(s,e-8),r=bt(o,37).mul(t).add(n),a=bt(n,25).add(o).mul(t);return Mn(r,a,t)}if(e>=4){const t=Lt.add(e*2),n=Of(s,0);return Mn(n.shl(3).add(e),Of(s,e-4),t)}if(e>0){const t=s[0],n=s[e>>1],o=s[e-1],r=t+(n<<8),a=e+(o<<2);return yu(Lt.mul(r).xor(N0.mul(a))).mul(Lt)}return Lt}function Jv(s,e=s.length){const t=Lt.add(e*2),n=Ve(s,0).mul(yo),o=Ve(s,8),r=Ve(s,e-8).mul(t),a=Ve(s,e-16).mul(Lt);return Mn(bt(n.add(o),43).add(bt(r,30)).add(a),n.add(bt(o.add(Lt),18)).add(r),t)}function Qv(s,e=s.length){const t=Lt.add(e*2),n=Ve(s,0).mul(Lt),o=Ve(s,8),r=Ve(s,e-8).mul(t),a=Ve(s,e-16).mul(Lt),i=bt(n.add(o),43).add(bt(r,30)).add(a),l=Mn(i,n.add(bt(o.add(Lt),18)).add(r),t),c=Ve(s,16).mul(t),p=Ve(s,24),u=i.add(Ve(s,e-32)).mul(t),h=l.add(Ve(s,e-24)).mul(t);return Mn(bt(c.add(p),43).add(bt(u,30)).add(h),c.add(bt(p.add(n),18)).add(u),t)}function ek(s,e=s.length){const t=bo.fromNumber(81,!0);if(e<=32)return e<=16?Zv(s,e):Jv(s,e);if(e<=64)return Qv(s,e);let n=t,o=t.mul(yo).add(113),r=yu(o.mul(Lt).add(113)).mul(Lt),a=[bo.UZERO,bo.UZERO],i=[bo.UZERO,bo.UZERO];n=n.mul(Lt).add(Ve(s,0));let l=0;const c=(e-1>>6)*64,p=c+(e-1&63)-63;do n=bt(n.add(o).add(a[0]).add(Ve(s,l+8)),37).mul(yo),o=bt(o.add(a[1]).add(Ve(s,l+48)),42).mul(yo),n=n.xor(i[1]),o=o.add(a[0]).add(Ve(s,l+40)),r=bt(r.add(i[0]),33).mul(yo),a=Gi(s,l,a[1].mul(yo),n.add(i[0])),i=Gi(s,l+32,r.add(i[1]),o.add(Ve(s,l+16))),[r,n]=[n,r],l+=64;while(l!==c);const u=yo.add(r.and(255).shl(1));return l=p,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),n=bt(n.add(o).add(a[0]).add(Ve(s,l+8)),37).mul(u),o=bt(o.add(a[1]).add(Ve(s,l+48)),42).mul(u),n=n.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(Ve(s,l+40))),r=bt(r.add(i[0]),33).mul(u),a=Gi(s,l,a[1].mul(u),n.add(i[0])),i=Gi(s,l+32,r.add(i[1]),o.add(Ve(s,l+16))),[r,n]=[n,r],Mn(Mn(a[0],i[0],u).add(yu(o).mul(N0)).add(r),Mn(a[1],i[1],u).add(n),u)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function so(s,e){return e==="string"?Vn(s):Wo([s],e)}function tk(s,e){return s instanceof Float32Array&&e==="float32"||s instanceof Int32Array&&e==="int32"||s instanceof Uint8Array&&e==="bool"}function Wo(s,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(s)&&(s=Ao(s)),L().getBool("DEBUG")&&_v(s,e),tk(s,e))return s;if(e==null||e==="float32"||e==="complex64")return new Float32Array(s);if(e==="int32")return new Int32Array(s);if(e==="bool"){const t=new Uint8Array(s.length);for(let n=0;n<t.length;++n)Math.round(s[n])!==0&&(t[n]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Ut(){return L().platform.now()}function Vn(s,e="utf-8"){return e=e||"utf-8",L().platform.encode(s,e)}function Gn(s,e="utf-8"){return e=e||"utf-8",L().platform.decode(s,e)}function Rs(s){return L().platform.isTypedArray!=null?L().platform.isTypedArray(s):v0(s)}function Ao(s,e=[],t=!1){if(e==null&&(e=[]),typeof s=="boolean"||typeof s=="number"||typeof s=="string"||Eo(s)||s==null||Rs(s)&&t)e.push(s);else if(Array.isArray(s)||Rs(s))for(let n=0;n<s.length;++n)Ao(s[n],e,t);else{let n=-1;for(const o of Object.keys(s))/^([1-9]+[0-9]*|0)$/.test(o)&&(n=Math.max(n,Number(o)));for(let o=0;o<=n;o++)Ao(s[o],e,t)}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sk{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new ok)}profileKernel(e,t,n){let o;const r=()=>{o=n()};let a;const i=Ut();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const c of o)c.dataSync();a=Promise.resolve({kernelMs:Ut()-i})}if(L().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<o.length;c++){const p=o[c];p.data().then(u=>{nk(u,p.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(c=>c.kernelMs),extraInfo:a.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:o,inputs:r,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),o,a]).then(l=>{this.logger.logKernelProfile(t,i,l[0],l[1],r,l[2])})})}}function nk(s,e,t){if(e!=="float32")return!1;for(let n=0;n<s.length;n++){const o=s[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}class ok{logKernelProfile(e,t,n,o,r,a){const i=typeof o=="number"?pr(`${o}ms`,9):o.error,l=pr(e,25),c=t.rank,p=t.size,u=pr(t.shape.toString(),14);let h="";for(const d in r){const m=r[d];if(m!=null){const g=m.shape||t.shape,f=g.length;h+=`${d}: ${f}D ${f>0?g:""} `}}console.log(`%c${l}	%c${i}	%c${c}D ${u}	%c${p}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(s,e,t){const n={},o={};for(let l=0;l<e.length;l++)n[e[l].id]=!0;for(let l=0;l<s.length;l++){const c=s[l],p=c.inputs;for(const u in p){const h=p[u];let d=!1;for(let m=0;m<e.length;m++)if(n[h.id]){c.outputs.forEach(g=>n[g.id]=!0),d=!0,o[c.id]=!0;break}if(d)break}}const r={};r[t.id]=!0;const a={};for(let l=s.length-1;l>=0;l--){const c=s[l],p=c.inputs;for(let u=0;u<c.outputs.length;u++)if(r[c.outputs[u].id]){for(const h in p)r[p[h].id]=!0,a[c.id]=!0;break}}const i=[];for(let l=0;l<s.length;l++){const c=s[l];if(o[c.id]&&a[c.id]){const p={};for(const h in c.inputs){const d=c.inputs[h];n[d.id]&&(p[h]=d)}const u=Object.assign({},c);u.inputs=p,u.outputs=c.outputs,i.push(u)}}return i}function ak(s,e,t,n){for(let o=e.length-1;o>=0;o--){const r=e[o],a=[];if(r.outputs.forEach(l=>{const c=s[l.id];c!=null?a.push(c):a.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const i=r.gradient(a);for(const l in r.inputs){if(!(l in i))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(i)}.`);const c=t(()=>i[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const p=r.inputs[l];if(!Se(c.shape,p.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${p.shape}'`);if(s[p.id]==null)s[p.id]=c;else{const u=s[p.id];s[p.id]=n(u,c),u.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ff=20,Yr=3,Bp=7;function ik(s,e,t,n){const o=de(e),r=lk(s,e,t,o),a=e.length,i=ll(s,e,t,o,r),l=["Tensor"];return n&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(i.map(c=>"    "+c).join(`
`)),l.join(`
`)}function lk(s,e,t,n){const o=W(e),r=n[n.length-1],a=new Array(r).fill(0),i=e.length,l=t==="complex64"?ta(s):s;if(i>1)for(let c=0;c<o/r;c++){const p=c*r;for(let u=0;u<r;u++)a[u]=Math.max(a[u],ea(l[p+u],0,t).length)}return a}function ea(s,e,t){let n;return Array.isArray(s)?n=`${parseFloat(s[0].toFixed(Bp))} + ${parseFloat(s[1].toFixed(Bp))}j`:$a(s)?n=`'${s}'`:t==="bool"?n=T0(s):n=parseFloat(s.toFixed(Bp)).toString(),pr(n,e)}function T0(s){return s===0?"false":"true"}function ll(s,e,t,n,o,r=!0){const a=t==="complex64"?2:1,i=e[0],l=e.length;if(l===0){if(t==="complex64"){const g=ta(s);return[ea(g[0],0,t)]}return t==="bool"?[T0(s[0])]:[s[0].toString()]}if(l===1){if(i>Ff){const f=Yr*a;let x=Array.from(s.slice(0,f)),y=Array.from(s.slice((i-Yr)*a,i*a));return t==="complex64"&&(x=ta(x),y=ta(y)),["["+x.map((w,b)=>ea(w,o[b],t)).join(", ")+", ..., "+y.map((w,b)=>ea(w,o[i-Yr+b],t)).join(", ")+"]"]}return["["+(t==="complex64"?ta(s):Array.from(s)).map((f,x)=>ea(f,o[x],t)).join(", ")+"]"]}const c=e.slice(1),p=n.slice(1),u=n[0]*a,h=[];if(i>Ff){for(let g=0;g<Yr;g++){const f=g*u,x=f+u;h.push(...ll(s.slice(f,x),c,t,p,o,!1))}h.push("...");for(let g=i-Yr;g<i;g++){const f=g*u,x=f+u;h.push(...ll(s.slice(f,x),c,t,p,o,g===i-1))}}else for(let g=0;g<i;g++){const f=g*u,x=f+u;h.push(...ll(s.slice(f,x),c,t,p,o,g===i-1))}const d=l===2?",":"";h[0]="["+(i>0?h[0]+d:"");for(let g=1;g<h.length-1;g++)h[g]=" "+h[g]+d;let m=`,
`;for(let g=2;g<l;g++)m+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(r?"":m),h}function ta(s){const e=[];for(let t=0;t<s.length;t+=2)e.push([s[t],s[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mt{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=W(e),n!=null){const o=n.length;$(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ot(t,this.size),this.strides=de(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const o of e){if(o<0||o>=this.shape[t]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let o=0;o<e.length-1;++o)n+=this.strides[o]*e[o];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Vs().makeTensor(this.values,this.shape,this.dtype)}}let Vs=null,ar=null;function ck(s){Vs=s}function pk(s){ar=s}class Ke{constructor(e,t,n,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=W(e),this.strides=de(e),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ar.buffer(this.shape,this.dtype,e)}bufferSync(){return ar.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return _s(this.shape,e,this.dtype==="complex64")}arraySync(){return _s(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Vs().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(n=>Gn(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Vs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Vs().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Gn(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Vs().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Vs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ar.print(this,e)}clone(){return this.throwIfDisposed(),ar.clone(this)}toString(e=!1){const t=this.dataSync();return ik(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ar.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Vs().makeVariable(this,e,t,n)}}Object.defineProperty(Ke,Symbol.hasInstance,{value:s=>!!s&&s.data!=null&&s.dataSync!=null&&s.throwIfDisposed!=null});function U(){return yh("Tensor",()=>Ke)}U();class yl extends Ke{constructor(e,t,n,o){super(e.shape,e.dtype,e.dataId,o),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Se(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Vs().disposeTensor(this),this.dataId=e.dataId,Vs().incRef(this,null)}dispose(){Vs().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(yl,Symbol.hasInstance,{value:s=>s instanceof Ke&&s.assign!=null&&s.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Pf;(function(s){s.R0="R0",s.R1="R1",s.R2="R2",s.R3="R3",s.R4="R4",s.R5="R5",s.R6="R6"})(Pf||(Pf={}));var bu;(function(s){s.float32="float32",s.int32="int32",s.bool="int32",s.complex64="complex64"})(bu||(bu={}));var wu;(function(s){s.float32="float32",s.int32="int32",s.bool="bool",s.complex64="complex64"})(wu||(wu={}));var vu;(function(s){s.float32="float32",s.int32="float32",s.bool="float32",s.complex64="complex64"})(vu||(vu={}));var ku;(function(s){s.float32="complex64",s.int32="complex64",s.bool="complex64",s.complex64="complex64"})(ku||(ku={}));const uk={float32:vu,int32:bu,bool:wu,complex64:ku};function ns(s,e){if(s==="string"||e==="string"){if(s==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${s} with ${e}`)}return uk[s][e]}function Id(s){return ns(s,"int32")}function E0(s){return s!=null&&typeof s=="object"&&"texture"in s&&s.texture instanceof WebGLTexture}function A0(s){return typeof GPUBuffer<"u"&&s!=null&&typeof s=="object"&&"buffer"in s&&s.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nt(s,e){if(s.dtype===e.dtype)return[s,e];const t=ns(s.dtype,e.dtype);return[s.cast(t),e.cast(t)]}function hk(s,e){$(s.dtype===e.dtype,()=>`The dtypes of the first(${s.dtype}) and second(${e.dtype}) input must match`)}function _0(s){const e=[];return D0(s,e,new Set),e}function D0(s,e,t){if(s==null)return;if(s instanceof Ke){e.push(s);return}if(!dk(s))return;const n=s;for(const o in n){const r=n[o];t.has(r)||(t.add(r),D0(r,e,t))}}function dk(s){return Array.isArray(s)||typeof s=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mp(s){return s.kernelName!=null}class Lf{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class br{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Lf}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ds(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new sk(this.backendInstance),!0}setupRegisteredKernels(){Tf(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Tf(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(n&&!(n instanceof fh)&&typeof n.then=="function"){const o=++this.pendingBackendInitId,r=n.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,ds(`Initialization of backend ${e} failed`),ds(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return ds(`Initialization of backend ${e} failed`),ds(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:o,asyncInit:r}=this.initializeBackend(n);if(r||o)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),o=n.backend,r=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let o;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,n){e();try{const o=n();return t(),o}catch(o){throw t(),o}}nextTensorId(){return br.nextTensorId++}nextVariableId(){return br.nextVariableId++}clone(e){const t=_.runKernel(Ua,{x:e}),n={x:e},o=a=>({x:()=>{const i="float32",l={x:a},c={dtype:i};return _.runKernel(_a,l,c)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],o,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(fu(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const o=this.backend.numDataIds();let r=0;n.forEach(l=>{r+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const o=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let l;const c=Mp(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Mp(e)){const{kernelName:m,inputs:g,attrs:f}=e;this.backendName==null&&this.backend;const x=fu(m,this.backendName);$(x!=null,()=>`Cannot find registered kernel '${m}' for backend '${this.backendName}'`),i=()=>{const y=this.backend.numDataIds();l=x.kernelFunc({inputs:g,attrs:f,backend:this.backend});const w=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(m,y,w);const b=w.map(k=>k.rank!=null?k:this.makeTensorFromTensorInfo(k));if(o){const k=this.getTensorsForGradient(m,g,b);n=this.saveTensorsForBackwardMode(k)}return b}}else{const{forwardFunc:m}=e,g=f=>{o&&(n=f.map(x=>this.keep(this.clone(x))))};i=()=>{const f=this.backend.numDataIds();l=this.tidy(()=>m(this.backend,g));const x=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,f,x),x}}const{inputs:p,attrs:u}=e,h=Mp(e)?null:e.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(c,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),o&&this.addTapeNode(c,p,t,h,n,u),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(m=>p[m]!=null?p[m].shape:null),outputShapes:t.map(m=>m.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){const o=Sf(e);if(o!=null){const r=o.inputsToSave||[],a=o.outputsToSave||[];let i;o.saveAllInputs?($(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(c=>t[c])):i=r.map(c=>t[c]);const l=n.filter((c,p)=>a[p]);return i.concat(l)}return[]}makeTensor(e,t,n,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",o=o||this.backend;let r=e;n==="string"&&$a(e[0])&&(r=e.map(l=>Vn(l)));const a=o.write(r,t,n),i=new Ke(t,n,a,this.nextTensorId());if(this.trackTensor(i,o),n==="string"){const l=this.state.tensorInfo.get(a),c=Rv(r);this.state.numBytes+=c-l.bytes,l.bytes=c}return i}makeTensorFromDataId(e,t,n,o){n=n||"float32";const r={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(r,o)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:o,dtype:r}=e,a=new Ke(o,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,o){n=n||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));const r=new yl(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*hl(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof yl||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const n=e.size*hl(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,o,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},l=Sf(e);l!=null&&(o=l.gradFunc),o!=null&&(i.gradient=c=>(c=c.map((p,u)=>{if(p==null){const h=n[u],d=Rt(h.size,h.dtype);return this.makeTensor(d,h.shape,h.dtype)}return p}),o(c.length>1?c:c[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=_0(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===o.id&&this.track(r)})}gradients(e,t,n,o=!1){if($(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));$(r instanceof Ke,()=>"The result y returned by f() must be a tensor.");const a=rk(this.state.activeTape,t,r);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[r.id]=n??mk(r.shape),ak(i,a,c=>this.tidy(c),fk);const l=t.map(c=>i[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const p of c.saved)p.dispose()}),this.state.activeTape=null),{value:r,grads:l}})}customGrad(e){return $(cu(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{$(t.every(i=>i instanceof Ke),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n;const o={};t.forEach((i,l)=>{o[l]=i});const r=(i,l)=>(n=e(...t,l),$(n.value instanceof Ke,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(cu(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,l)=>{const c=n.gradFunc(i,l),p=Array.isArray(c)?c:[c];$(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(p.every(h=>h instanceof Ke),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const u={};return p.forEach((h,d)=>{u[d]=()=>h}),u};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Ut(),n=await this.backend.time(e);return n.wallMs=Ut()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Lf;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}br.nextTensorId=0;br.nextVariableId=0;function mk(s){const e=xh(W(s),"float32");return _.makeTensor(e,s,"float32")}function R0(){const s=y0();if(s._tfengine==null){const e=new Pv(s);s._tfengine=new br(e)}return Bv(s._tfengine.ENV),ck(()=>s._tfengine),s._tfengine}const _=R0();function fk(s,e){const t={a:s,b:e};return _.runKernel(Or,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(){return typeof navigator<"u"&&navigator!=null}function O0(s){if(s||gk()){if(s||(s=navigator),s.product==="ReactNative")return!0;const e=s.userAgent||s.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=s;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function F0(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qt=L();qt.registerFlag("DEBUG",()=>!1,s=>{s&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});qt.registerFlag("IS_BROWSER",()=>F0());qt.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");qt.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));qt.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));qt.registerFlag("PROD",()=>!1);qt.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>qt.getBool("DEBUG"));qt.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);qt.registerFlag("IS_TEST",()=>!1);qt.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>qt.getBool("DEBUG"));qt.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);qt.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);qt.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function no(s,e){let t=s;if(Rs(s))return e==="string"?[]:[s.length];if(E0(s)){const o=s.channels||"RGBA";return[s.height,s.width*o.length]}else if(A0(s))return[s.buffer.size/(e==null?4:hl(e))];if(!Array.isArray(s))return[];const n=[];for(;Array.isArray(t)||Rs(t)&&e!=="string";)n.push(t.length),t=t[0];return Array.isArray(s)&&L().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&P0(s,n,[]),n}function P0(s,e,t){if(t=t||[],!Array.isArray(s)&&!Rs(s)){$(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}$(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${s.length} elements`),$(s.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${s.length} elements`);const n=e.slice(1);for(let o=0;o<s.length;++o)P0(s[o],n,t.concat(o))}function zf(s,e,t,n){if(s!=="string_or_numeric"){if(s==null)throw new Error("Expected dtype cannot be null.");if(s!=="numeric"&&s!==e||s==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${n}' must be ${s} tensor, but got ${e} tensor`)}}function C(s,e,t,n="numeric"){if(s instanceof Ke)return zf(n,s.dtype,e,t),s;let o=Dr(s);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),zf(n,o,e,t),s==null||!Rs(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string"){const l=s==null?"null":s.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const r=no(s,o);!Rs(s)&&!Array.isArray(s)&&(s=[s]);const i=o!=="string"?Wo(s,o):Ao(s,[],!0);return _.makeTensor(i,r,o)}function bl(s,e,t,n="numeric"){if(!Array.isArray(s))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return s.map((r,a)=>C(r,`${e}[${a}]`,t,n))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L0="__op";function A(s){const e=Object.keys(s);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const n=s[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+L0;const o=(...r)=>{_.startScope(t);try{const a=n(...r);return Eo(a)&&console.error("Cannot return a Promise inside of tidy."),_.endScope(a),a}catch(a){throw _.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xk(s,e){const t=C(s,"real","complex"),n=C(e,"imag","complex");cs(t.shape,n.shape,`real and imag shapes, ${t.shape} and ${n.shape}, must match in call to tf.complex().`);const o={real:t,imag:n};return _.runKernel(Ch,o)}const Hn=A({complex_:xk});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oo(s,e,t,n){if(n==null)n=Dr(s);else if(n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(A0(s)||E0(s)){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return _.backend.createTensorFromGPUData(s,e||t,n)}if(!Rs(s)&&!Array.isArray(s)&&typeof s!="number"&&typeof s!="boolean"&&typeof s!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){xs(e);const o=W(e),r=W(t);$(o===r,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${r}`);for(let a=0;a<t.length;++a){const i=t[a],l=a===t.length-1?i!==W(e.slice(a)):!0;$(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Rs(s)&&!Array.isArray(s)&&(s=[s]),e=e||t,s=n!=="string"?Wo(s,n):Ao(s,[],!0),_.makeTensor(s,e,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(s,e,t){const n=no(s,t);return oo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $u={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Js{static join(e){return new Js(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(n=>Rs(n)?n.buffer:n),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const o=e[n];n!==e.length-1&&o.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+o.byteLength;this.shards.push({buffer:o,start:t,end:r}),t=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(n===-1)throw new Error(`Could not find start shard for byte ${e}`);const o=t-e,r=new ArrayBuffer(o),a=new Uint8Array(r);let i=0;for(let l=n;l<this.shards.length;l++){const c=this.shards[l],u=e+i-c.start,h=i,m=Math.min(t,c.end)-c.start,g=new Uint8Array(c.buffer,u,m-u);if(a.set(g,h),i+=g.length,t<c.end)break}return r}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(o){return e<o.start?-1:e>=o.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const n=yk(this.shards,t);return n===-1?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function yk(s,e){let t=0,n=s.length;for(;t<=n;){const o=Math.floor((n-t)/2)+t,r=e(s[o]);if(r===0)return o;r<0?n=o:t=o+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wl=4;async function Iu(s,e){const t=[],n=[],o=Array.isArray(s)?s.map(a=>a.name):Object.keys(s);for(let a=0;a<o.length;++a){const i=o[a],l=Array.isArray(s)?s[a].tensor:s[i];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${l.dtype}`);const c={name:i,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const p=new Promise(async u=>{const h=await l.bytes(),d=h.reduce((f,x)=>f+x.length,0)+wl*h.length,m=new Uint8Array(d);let g=0;for(let f=0;f<h.length;f++){const x=h[f],y=new Uint8Array(new Uint32Array([x.length]).buffer);m.set(y,g),g+=wl,m.set(x,g),g+=x.length}u(m)});n.push(p)}else n.push(l.data());e!=null&&(c.group=e),t.push(c)}const r=await Promise.all(n);return{data:bk(r),specs:t}}function z0(s,e){const t=new Js(s),n={};let o,r=0;for(const a of e){const i=a.name,l=a.dtype,c=a.shape,p=W(c);let u;if("quantization"in a){const h=a.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${a.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(l!=="float32")throw new Error(`Weight ${a.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${l}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=$u[h.dtype],m=t.slice(r,r+p*d),g=h.dtype==="uint8"?new Uint8Array(m):new Uint16Array(m);if(l==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){u=new Float32Array(g.length);for(let f=0;f<g.length;f++){const x=g[f];u[f]=x*h.scale+h.min}}else if(h.dtype==="float16")o===void 0&&(o=Ck()),u=o(g);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(l==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);u=new Int32Array(g.length);for(let f=0;f<g.length;f++){const x=g[f];u[f]=Math.round(x*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${l}`);r+=p*d}else if(l==="string"){const h=W(a.shape);u=[];for(let d=0;d<h;d++){const m=new Uint32Array(t.slice(r,r+wl))[0];r+=wl;const g=new Uint8Array(t.slice(r,r+m));u.push(g),r+=m}}else{const h=$u[l],d=t.slice(r,r+p*h);if(l==="float32")u=new Float32Array(d);else if(l==="int32")u=new Int32Array(d);else if(l==="bool")u=new Uint8Array(d);else if(l==="complex64"){u=new Float32Array(d);const m=new Float32Array(u.length/2),g=new Float32Array(u.length/2);for(let y=0;y<m.length;y++)m[y]=u[y*2],g[y]=u[y*2+1];const f=Gs(m,c,"float32"),x=Gs(g,c,"float32");n[i]=Hn(f,x),f.dispose(),x.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${l}`);r+=p*h}l!=="complex64"&&(n[i]=Gs(u,c,l))}return n}function bk(s){if(s===null)throw new Error(`Invalid input value: ${JSON.stringify(s)}`);let e=0;const t=[];s.forEach(r=>{if(e+=r.byteLength,t.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const n=new Uint8Array(e);let o=0;return t.forEach(r=>{n.set(new Uint8Array(r.buffer),o),o+=r.byteLength}),n.buffer}const Cd=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function jf(s){return Cd?Buffer.byteLength(s,"utf8"):new Blob([s]).size}function wk(s){if(Cd)return Buffer.from(s).toString("base64");const e=new Uint8Array(s);let t="";for(let n=0,o=e.length;n<o;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function vk(s){if(Cd){const n=Buffer.from(s,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const e=atob(s),t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)t.set([e.charCodeAt(n)],n);return t.buffer}function j0(s){return Js.join(s)}function Bf(s){const e="/";for(s=s.trim();s.endsWith(e);)s=s.slice(0,s.length-1);const t=s.split(e);return t[t.length-1]}function B0(s,e){const t={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy,weightsManifest:e};return s.signature!=null&&(t.signature=s.signature),s.userDefinedMetadata!=null&&(t.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(t.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(t.initializerSignature=s.initializerSignature),s.trainingConfig!=null&&(t.trainingConfig=s.trainingConfig),t}function M0(s,e,t){const n={modelTopology:s.modelTopology,format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};if(s.trainingConfig!=null&&(n.trainingConfig=s.trainingConfig),s.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=e,n.weightData=t}return s.signature!=null&&(n.signature=s.signature),s.userDefinedMetadata!=null&&(n.userDefinedMetadata=s.userDefinedMetadata),s.modelInitializer!=null&&(n.modelInitializer=s.modelInitializer),s.initializerSignature!=null&&(n.initializerSignature=s.initializerSignature),n}async function Nd(s,e){let t,n;return s.weightsManifest!=null&&([t,n]=await e(s.weightsManifest)),M0(s,t,n)}function bi(s){if(s.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:s.modelTopology==null?0:jf(JSON.stringify(s.modelTopology)),weightSpecsBytes:s.weightSpecs==null?0:jf(JSON.stringify(s.weightSpecs)),weightDataBytes:s.weightData==null?0:new Js(s.weightData).byteLength}}function V0(s){const e=[];for(const t of s)e.push(...t.weights);return e}function kk(){const s=t=>{let n=t<<13,o=0;for(;!(n&8388608);)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=s(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function $k(){const s=new Uint32Array(64);s[0]=0,s[31]=1199570944,s[32]=2147483648,s[63]=3347054592;for(let e=1;e<31;e++)s[e]=e<<23;for(let e=33;e<63;e++)s[e]=2147483648+(e-32<<23);return s}function Ik(){const s=new Uint32Array(64);for(let e=0;e<64;e++)s[e]=1024;return s[0]=s[32]=0,s}function Ck(){const s=kk(),e=$k(),t=Ik();return n=>{const o=new ArrayBuffer(4*n.length),r=new Uint32Array(o);for(let a=0;a<n.length;a++){const i=n[a],l=s[t[i>>10]+(i&1023)]+e[i>>10];r[a]=l}return new Float32Array(o)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Je{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Je.instance==null&&(Je.instance=new Je),Je.instance}static registerSaveRouter(e){Je.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Je.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Je.getHandlers(e,"save")}static getLoadHandlers(e,t){return Je.getHandlers(e,"load",t)}static getHandlers(e,t,n){const o=[];return(t==="load"?Je.getInstance().loadRouters:Je.getInstance().saveRouters).forEach(a=>{const i=a(e,n);i!==null&&o.push(i)}),o}}const Nk=s=>Je.registerSaveRouter(s),Sk=s=>Je.registerLoadRouter(s),W0=s=>Je.getSaveHandlers(s),Tk=(s,e)=>Je.getLoadHandlers(s,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cu="tensorflowjs",Nu=1,Io="models_store",Ln="model_info_store";function U0(){if(!L().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const s=typeof window>"u"?self:window,e=s.indexedDB||s.mozIndexedDB||s.webkitIndexedDB||s.msIndexedDB||s.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Su(s){const e=s.result;e.createObjectStore(Io,{keyPath:"modelPath"}),e.createObjectStore(Ln,{keyPath:"modelPath"})}class _o{constructor(e){if(this.indexedDB=U0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,o)=>{const r=this.indexedDB.open(Cu,Nu);r.onupgradeneeded=()=>Su(r),r.onsuccess=()=>{const a=r.result;if(t==null){const i=a.transaction(Io,"readonly"),c=i.objectStore(Io).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(c.result.modelArtifacts)},c.onerror=p=>(a.close(),o(c.error)),i.oncomplete=()=>a.close()}else{t.weightData=Js.join(t.weightData);const i=bi(t),l=a.transaction(Ln,"readwrite");let c=l.objectStore(Ln),p;try{p=c.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(h){return o(h)}let u;p.onsuccess=()=>{u=a.transaction(Io,"readwrite");const h=u.objectStore(Io);let d;try{d=h.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(m){return o(m)}d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=m=>{c=l.objectStore(Ln);const g=c.delete(this.modelPath);g.onsuccess=()=>(a.close(),o(d.error)),g.onerror=f=>(a.close(),o(d.error))}},p.onerror=h=>(a.close(),o(p.error)),l.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}}},r.onerror=a=>o(r.error)})}}_o.URL_SCHEME="indexeddb://";const G0=s=>L().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(_o.URL_SCHEME)?Ek(s.slice(_o.URL_SCHEME.length)):null;Je.registerSaveRouter(G0);Je.registerLoadRouter(G0);function Ek(s){return new _o(s)}function Ak(s){return s.startsWith(_o.URL_SCHEME)?s.slice(_o.URL_SCHEME.length):s}class _k{constructor(){this.indexedDB=U0()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(Cu,Nu);n.onupgradeneeded=()=>Su(n),n.onsuccess=()=>{const o=n.result,r=o.transaction(Ln,"readonly"),i=r.objectStore(Ln).getAll();i.onsuccess=()=>{const l={};for(const c of i.result)l[c.modelPath]=c.modelArtifactsInfo;e(l)},i.onerror=l=>(o.close(),t(i.error)),r.oncomplete=()=>o.close()},n.onerror=o=>t(n.error)})}async removeModel(e){return e=Ak(e),new Promise((t,n)=>{const o=this.indexedDB.open(Cu,Nu);o.onupgradeneeded=()=>Su(o),o.onsuccess=()=>{const r=o.result,a=r.transaction(Ln,"readwrite"),i=a.objectStore(Ln),l=i.get(e);let c;l.onsuccess=()=>{if(l.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const p=i.delete(e),u=()=>{c=r.transaction(Io,"readwrite");const d=c.objectStore(Io).delete(e);d.onsuccess=()=>t(l.result.modelArtifactsInfo),d.onerror=m=>n(l.error)};p.onsuccess=u,p.onerror=h=>(u(),r.close(),n(l.error))}},l.onerror=p=>(r.close(),n(l.error)),a.oncomplete=()=>{c==null?r.close():c.oncomplete=()=>r.close()}},o.onerror=r=>n(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vn="/",ir="tensorflowjs_models",H0="info",Dk="model_topology",Rk="weight_specs",Ok="weight_data",Fk="model_metadata";function q0(s){return{info:[ir,s,H0].join(vn),topology:[ir,s,Dk].join(vn),weightSpecs:[ir,s,Rk].join(vn),weightData:[ir,s,Ok].join(vn),modelMetadata:[ir,s,Fk].join(vn)}}function K0(s){for(const e of Object.values(s))window.localStorage.removeItem(e)}function Pk(s){const e=s.split(vn);if(e.length<3)throw new Error(`Invalid key format: ${s}`);return e.slice(1,e.length-1).join(vn)}function Lk(s){return s.startsWith(Do.URL_SCHEME)?s.slice(Do.URL_SCHEME.length):s}class Do{constructor(e){if(!L().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=q0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),o=bi(e),r=Js.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,wk(r));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:o}}catch{throw K0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=vk(a),t}}Do.URL_SCHEME="localstorage://";const X0=s=>L().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Do.URL_SCHEME)?zk(s.slice(Do.URL_SCHEME.length)):null;Je.registerSaveRouter(X0);Je.registerLoadRouter(X0);function zk(s){return new Do(s)}class jk{constructor(){$(L().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=ir+vn,n=vn+H0;for(let o=0;o<this.LS.length;++o){const r=this.LS.key(o);if(r.startsWith(t)&&r.endsWith(n)){const a=Pk(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=Lk(e);const t=q0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return K0(t),n}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hr="://";class Pt{constructor(){this.managers={}}static getInstance(){return Pt.instance==null&&(Pt.instance=new Pt),Pt.instance}static registerManager(e,t){$(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(hr)&&(e=e.slice(0,e.indexOf(hr))),$(e.length>0,()=>"scheme must not be an empty string.");const n=Pt.getInstance();$(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=Pt.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Pt.getInstance().managers)}}function cl(s){if(s.indexOf(hr)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Pt.getSchemes().join(",")}`);return{scheme:s.split(hr)[0],path:s.split(hr)[1]}}async function Y0(s,e,t=!1){$(s!==e,()=>`Old path and new path are the same: '${s}'`);const n=Je.getLoadHandlers(s);$(n.length>0,()=>`Copying failed because no load handler is found for source URL ${s}.`),$(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${s}.`);const o=n[0],r=Je.getSaveHandlers(e);$(r.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),$(r.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${e}.`);const a=r[0],i=cl(s).scheme,l=cl(s).path,c=i===cl(s).scheme,p=await o.load();t&&c&&await Pt.getManager(i).removeModel(l);const u=await a.save(p);return t&&!c&&await Pt.getManager(i).removeModel(l),u.modelArtifactsInfo}async function Bk(){const s=Pt.getSchemes(),e={};for(const t of s){const n=await Pt.getManager(t).listModels();for(const o in n){const r=t+hr+o;e[r]=n[o]}}return e}async function Mk(s){const e=cl(s);return Pt.getManager(e.scheme).removeModel(e.path)}async function Vk(s,e){return Y0(s,e,!1)}async function Wk(s,e){return Y0(s,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uk{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!L().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();const o=this.functionRefs[n.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return v0(e)}}if(L().get("IS_BROWSER")){L().setPlatform("browser",new Uk);try{Pt.registerManager(Do.URL_SCHEME,new jk)}catch{}try{Pt.registerManager(_o.URL_SCHEME,new _k)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gk={importFetch:()=>require("node-fetch")};let Vp;class Hk{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return L().global.fetch!=null?L().global.fetch(e,t):(Vp==null&&(Vp=Gk.importFetch()),Vp(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}L().get("IS_NODE")&&!L().get("IS_BROWSER")&&L().setPlatform("node",new Hk);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ke(s,e="float32",t){return e=e||"float32",xs(s),new mt(s,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qk(s,e){const t=C(s,"x","cast");if(!Dv(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const n={x:t},o={dtype:e};return _.runKernel(_a,n,o)}const ne=A({cast_:qk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(s){const t={x:C(s,"x","clone","string_or_numeric")};return _.runKernel(Ua,t)}const kn=A({clone_:Kk});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z0(s,e=!1){console.log(s.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */R0();const Xk={buffer:ke,cast:ne,clone:kn,print:Z0};pk(Xk);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(){return _}function Tu(){return _.memory()}function P(s,e){return _.tidy(s,e)}function we(s){_0(s).forEach(t=>t.dispose())}function wt(s){return _.keep(s)}function J0(s,e,t=1){return _.registerBackend(s,e,t)}function Yk(){return _.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(s,e){let t=C(s,"a","add"),n=C(e,"b","add");[t,n]=nt(t,n);const o={a:t,b:n};return _.runKernel(Or,o)}const K=A({add_:Zk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(s,e){let t=C(s,"a","floorDiv"),n=C(e,"b","floorDiv");[t,n]=nt(t,n);const o={a:t,b:n};return _.runKernel(Va,o)}const Sd=A({floorDiv_:Jk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(s,e){let t=C(s,"a","div"),n=C(e,"b","div");if([t,n]=nt(t,n),t.dtype==="int32"&&n.dtype==="int32")return Sd(t,n);const o={a:t,b:n},r={};return _.runKernel(Pa,o,r)}const ue=A({div_:Qk});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(s,e){let t=C(s,"a","mul"),n=C(e,"b","mul");[t,n]=nt(t,n);const o={a:t,b:n};return _.runKernel(Qa,o)}const D=A({mul_:e$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(s){const e=C(s,"x","abs");if(e.dtype==="complex64"){const t={x:e};return _.runKernel(Ql,t)}else{const t={x:e};return _.runKernel(Ul,t)}}const ut=A({abs_:t$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(s){const t={x:C(s,"x","acos")};return _.runKernel(Ia,t)}const Q0=A({acos_:s$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(s){const t={x:C(s,"x","acosh")};return _.runKernel(Ca,t)}const ex=A({acosh_:n$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(s){$(Array.isArray(s),()=>"The argument passed to tf.addN() must be a list of tensors"),$(s.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${s.length}`);const e=s.map((o,r)=>C(o,`tensors${r}`,"addN")),t=e[0];e.forEach(o=>{if(o.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(o=>{if(!Se(o.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const n=e;return _.runKernel(Gl,n)}const r$=A({addN_:o$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(s,e=null,t=!1){const o={x:C(s,"x","all","bool")},r={axis:e,keepDims:t};return _.runKernel(bh,o,r)}const Td=A({all_:a$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(s,e=null,t=!1){const o={x:C(s,"x","any","bool")},r={axis:e,keepDims:t};return _.runKernel(wh,o,r)}const vl=A({any_:i$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(s,e=0){const n={x:C(s,"x","argMax")},o={axis:e};return _.runKernel(Hl,n,o)}const wr=A({argMax_:l$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(s,e=0){const n={x:C(s,"x","argMin")},o={axis:e};return _.runKernel(ql,n,o)}const tx=A({argMin_:c$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p$(s){const t={x:C(s,"x","asin")};return _.runKernel(Na,t)}const sx=A({asin_:p$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(s){const t={x:C(s,"x","asinh")};return _.runKernel(Sa,t)}const nx=A({asinh_:u$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h$(s){const t={x:C(s,"x","atan")};return _.runKernel(Ta,t)}const ox=A({atan_:h$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(s,e){let t=C(s,"a","atan2"),n=C(e,"b","atan2");[t,n]=nt(t,n);const o={a:t,b:n};return _.runKernel(Aa,o)}const rx=A({atan2_:d$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(s){const t={x:C(s,"x","atanh")};return _.runKernel(Ea,t)}const ax=A({atanh_:m$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wi(s,e,t,n,o="NHWC",r){const a=s[3],i=[...e,a],l=Tn(o);return kt(s,i,t,r,n,null,null,l)}function Ps(s,e,t,n,o,r,a="channelsLast"){const[i,l]=la(e);let c;if(a==="channelsLast")c=[i,l,s[3],s[3]];else if(a==="channelsFirst")c=[i,l,s[1],s[1]];else throw new Error(`Unknown dataFormat ${a}`);return kt(s,c,t,n,o,r,!1,a)}function Sn(s,e,t,n,o,r,a="NDHWC"){const[i,l,c]=Eu(e);let p,u;if(a==="NDHWC")u="channelsLast",p=[i,l,c,s[4],s[4]];else if(a==="NCDHW")u="channelsFirst",p=[i,l,c,s[1],s[1]];else throw new Error(`Unknown dataFormat ${a}`);return ro(s,p,t,n,o,!1,u,r)}function kt(s,e,t,n,o,r,a=!1,i="channelsLast"){let[l,c,p,u]=[-1,-1,-1,-1];if(i==="channelsLast")[l,c,p,u]=s;else if(i==="channelsFirst")[l,u,c,p]=s;else throw new Error(`Unknown dataFormat ${i}`);const[h,d,,m]=e,[g,f]=la(t),[x,y]=la(n),w=dr(h,x),b=dr(d,y),{padInfo:k,outHeight:I,outWidth:N}=x$(o,c,p,g,f,w,b,r,i),S=a?m*u:m;let T;return i==="channelsFirst"?T=[l,S,I,N]:i==="channelsLast"&&(T=[l,I,N,S]),{batchSize:l,dataFormat:i,inHeight:c,inWidth:p,inChannels:u,outHeight:I,outWidth:N,outChannels:S,padInfo:k,strideHeight:g,strideWidth:f,filterHeight:h,filterWidth:d,effectiveFilterHeight:w,effectiveFilterWidth:b,dilationHeight:x,dilationWidth:y,inShape:s,outShape:T,filterShape:e}}function ro(s,e,t,n,o,r=!1,a="channelsLast",i){let[l,c,p,u,h]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,c,p,u,h]=s;else if(a==="channelsFirst")[l,h,c,p,u]=s;else throw new Error(`Unknown dataFormat ${a}`);const[d,m,g,,f]=e,[x,y,w]=Eu(t),[b,k,I]=Eu(n),N=dr(d,b),S=dr(m,k),T=dr(g,I),{padInfo:E,outDepth:F,outHeight:z,outWidth:j}=y$(o,c,p,u,x,y,w,N,S,T,i),B=r?f*h:f;let M;return a==="channelsFirst"?M=[l,B,F,z,j]:a==="channelsLast"&&(M=[l,F,z,j,B]),{batchSize:l,dataFormat:a,inDepth:c,inHeight:p,inWidth:u,inChannels:h,outDepth:F,outHeight:z,outWidth:j,outChannels:B,padInfo:E,strideDepth:x,strideHeight:y,strideWidth:w,filterDepth:d,filterHeight:m,filterWidth:g,effectiveFilterDepth:N,effectiveFilterHeight:S,effectiveFilterWidth:T,dilationDepth:b,dilationHeight:k,dilationWidth:I,inShape:s,outShape:M,filterShape:e}}function f$(s,e,t,n,o){n==null&&(n=Ed(s,e,t));const r=s[0],a=s[1],i=ca((r-e+2*n)/t+1,o),l=ca((a-e+2*n)/t+1,o);return[i,l]}function g$(s,e,t,n,o,r){o==null&&(o=Ed(s,e[0],n[0]));const a=[0,0,0,t];for(let i=0;i<3;i++)s[i]+2*o>=e[i]&&(a[i]=ca((s[i]-e[i]+2*o)/n[i]+1,r));return a}function Ed(s,e,t,n=1){const o=dr(e,n);return Math.floor((s[0]*(t-1)-t+o)/2)}function la(s){return typeof s=="number"?[s,s,s]:s.length===2?[s[0],s[1],1]:s}function Eu(s){return typeof s=="number"?[s,s,s]:s}function dr(s,e){return e<=1?s:s+(s-1)*(e-1)}function x$(s,e,t,n,o,r,a,i,l){let c,p,u;if(typeof s=="number"){c={top:s,bottom:s,left:s,right:s,type:s===0?"VALID":"NUMBER"};const d=f$([e,t],r,n,s,i);p=d[0],u=d[1]}else if(s==="same"){p=Math.ceil(e/n),u=Math.ceil(t/o);const h=Math.max(0,(p-1)*n+r-e),d=Math.max(0,(u-1)*o+a-t),m=Math.floor(h/2),g=h-m,f=Math.floor(d/2),x=d-f;c={top:m,bottom:g,left:f,right:x,type:"SAME"}}else if(s==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-r+1)/n),u=Math.ceil((t-a+1)/o);else if(typeof s=="object"){const h=l==="channelsLast"?s[1][0]:s[2][0],d=l==="channelsLast"?s[1][1]:s[2][1],m=l==="channelsLast"?s[2][0]:s[3][0],g=l==="channelsLast"?s[2][1]:s[3][1];c={top:h,bottom:d,left:m,right:g,type:h===0&&d===0&&m===0&&g===0?"VALID":"EXPLICIT"},p=ca((e-r+h+d)/n+1,i),u=ca((t-a+m+g)/o+1,i)}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:c,outHeight:p,outWidth:u}}function y$(s,e,t,n,o,r,a,i,l,c,p){let u,h,d,m;if(s==="valid"&&(s=0),typeof s=="number"){u={top:s,bottom:s,left:s,right:s,front:s,back:s,type:s===0?"VALID":"NUMBER"};const f=g$([e,t,n,1],[i,l,c],1,[o,r,a],s,p);h=f[0],d=f[1],m=f[2]}else if(s==="same"){h=Math.ceil(e/o),d=Math.ceil(t/r),m=Math.ceil(n/a);const g=(h-1)*o+i-e,f=(d-1)*r+l-t,x=(m-1)*a+c-n,y=Math.floor(g/2),w=g-y,b=Math.floor(f/2),k=f-b,I=Math.floor(x/2),N=x-I;u={top:b,bottom:k,left:I,right:N,front:y,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${s}`);return{padInfo:u,outDepth:h,outHeight:d,outWidth:m}}function ca(s,e){if(!e)return Math.trunc(s);switch(e){case"round":return Math.round(s);case"ceil":return Math.ceil(s);case"floor":return Math.floor(s);default:throw new Error(`Unknown roundingMode ${e}`)}}function qn(s){const[e,t,n]=la(s);return e===1&&t===1&&n===1}function Tt(s,e){return qn(s)||qn(e)}function Ro(s){return la(s).every(e=>e>0)}function Tn(s){if(s==="NHWC")return"channelsLast";if(s==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${s}`)}function Vt(s,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${s}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")$(xr(e),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(n=>{n.forEach(o=>{$(xr(o),()=>`Error in ${s}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${s}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(s,e){const n={x:C(s,"x","reshape","string_or_numeric")},o={shape:e};return _.runKernel(Rc,n,o)}const R=A({reshape_:b$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(s,e,t,n,o){const r=C(s,"x","avgPool","float32"),a=1;$(Tt(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=r,l=!1;r.rank===3&&(l=!0,i=R(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Vt("avgPool",n,o);const c={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o};let u=_.runKernel(Kl,c,p);return u=ne(u,r.dtype),l?R(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Kc=A({avgPool_:w$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(s,e,t,n,o,r="NDHWC"){const a=C(s,"x","avgPool3d","float32");let i=a,l=!1;a.rank===4&&(l=!0,i=R(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),$(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),$(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),Vt("avgPool3d",n,o);const c={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:r};let u=_.runKernel(Xl,c,p);return u=ne(u,i.dtype),l?R(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}const ix=A({avgPool3d_:v$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(s,e=0){$(s.length>=1,()=>"Pass at least one tensor to concat");const t=bl(s,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),t.length===1)return kn(t[0]);const n=t,o={axis:e};return _.runKernel(ec,n,o)}const pt=A({concat_:k$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(s,e,t=!1,n=!1){let o=C(s,"a","matMul"),r=C(e,"b","matMul");[o,r]=nt(o,r);const a={a:o,b:r},i={transposeA:t,transposeB:n};return _.runKernel(Yl,a,i)}const Ne=A({matMul_:$$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(s){const t={x:C(s,"x","sigmoid","float32")};return _.runKernel(pi,t)}const an=A({sigmoid_:I$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C$(s,e,t){const n=C(s,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");const o={x:n},r={begin:e,size:t};return _.runKernel(zc,o,r)}const Te=A({slice_:C$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N$(s){const t={x:C(s,"x","tanh","float32")};return _.runKernel(gi,t)}const vr=A({tanh_:N$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(s,e,t,n,o,r){const a=C(s,"forgetBias","basicLSTMCell"),i=C(e,"lstmKernel","basicLSTMCell"),l=C(t,"lstmBias","basicLSTMCell"),c=C(n,"data","basicLSTMCell"),p=C(o,"c","basicLSTMCell"),u=C(r,"h","basicLSTMCell"),h=pt([c,u],1),d=Ne(h,i),m=K(d,l),g=m.shape[0],f=m.shape[1]/4,x=[g,f],y=Te(m,[0,0],x),w=Te(m,[0,f],x),b=Te(m,[0,f*2],x),k=Te(m,[0,f*3],x),I=K(D(an(y),vr(w)),D(p,an(K(a,b)))),N=D(vr(I),an(k));return[I,N]}const T$=A({basicLSTMCell_:S$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(s,e,t){const n=C(s,"x","batchToSpaceND"),o=e.reduce((i,l)=>i*l);$(n.rank>=1+e.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${e.length}`),$(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),$(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);const r={x:n},a={blockShape:e,crops:t};return _.runKernel(Zl,r,a)}const Xc=A({batchToSpaceND_:E$});function A$(s){let e;return s.rank===0||s.rank===1?e=R(s,[1,1,1,s.size]):s.rank===2?e=R(s,[1,1,s.shape[0],s.shape[1]]):s.rank===3?e=R(s,[1,s.shape[0],s.shape[1],s.shape[2]]):e=s,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(s,e,t,n,o,r){r==null&&(r=.001);const a=C(s,"x","batchNorm"),i=C(e,"mean","batchNorm"),l=C(t,"variance","batchNorm");let c;o!=null&&(c=C(o,"scale","batchNorm"));let p;n!=null&&(p=C(n,"offset","batchNorm")),$(i.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(p==null||i.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:A$(a),scale:c,offset:p,mean:i,variance:l},d={varianceEpsilon:r},m=_.runKernel(cc,h,d);return R(m,a.shape)}const vi=A({batchNorm_:_$});function D$(s,e,t,n,o,r){const a=C(s,"x","batchNorm"),i=C(e,"mean","batchNorm"),l=C(t,"variance","batchNorm");let c;o!=null&&(c=C(o,"scale","batchNorm"));let p;return n!=null&&(p=C(n,"offset","batchNorm")),$(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),$(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&$(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),p!=null&&$(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),vi(a,i,l,p,c,r)}const lx=A({batchNorm2d_:D$});function R$(s,e,t,n,o,r){const a=C(s,"x","batchNorm"),i=C(e,"mean","batchNorm"),l=C(t,"variance","batchNorm");let c;o!=null&&(c=C(o,"scale","batchNorm"));let p;return n!=null&&(p=C(n,"offset","batchNorm")),$(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),$(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&$(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),p!=null&&$(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),vi(a,i,l,p,c,r)}const cx=A({batchNorm3d_:R$});function O$(s,e,t,n,o,r){const a=C(s,"x","batchNorm"),i=C(e,"mean","batchNorm"),l=C(t,"variance","batchNorm");let c;o!=null&&(c=C(o,"scale","batchNorm"));let p;return n!=null&&(p=C(n,"offset","batchNorm")),$(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),$(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&$(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),p!=null&&$(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),vi(a,i,l,p,c,r)}const px=A({batchNorm4d_:O$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(s,e,t){const n=C(s,"x","bincount"),o=C(e,"weights","bincount");$(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),$(t>=0,()=>`size must be non-negative, but got ${t}.`),$(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);const r={x:n,weights:o},a={size:t};return _.runKernel($h,r,a)}const ux=A({bincount_:F$});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(s,e){const t=C(s,"x","bitwiseAnd"),n=C(e,"y","bitwiseAnd");if(!Se(t.shape,n.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${n.shape}`);if(t.dtype!=="int32"||n.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${n.dtype}`);const o={a:t,b:n};return _.runKernel(Jl,o)}const L$=A({bitwiseAnd_:P$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(s,e){const t=C(s,"s0","broadcastArgs","int32"),n=C(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);const o={s0:t,s1:n};return _.runKernel(Ih,o)}const j$=A({broadcastArgs_:z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(s,e){let t=C(s,"broadcastTo","x");const n=t.shape;if(xs(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=R(t,c)}const o=t.shape,r=Array.from(e);for(let c=e.length-1;c>=0;c--)if(o[c]===e[c])r[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${e}].`);if(r.map((c,p)=>c>1?p:-1).filter(c=>c>=0).length===0)return kn(t);const i={x:t},l={reps:r};return _.runKernel(xi,i,l)}const mr=A({broadcastTo_:B$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M$(s){const t={x:C(s,"x","ceil","float32")};return _.runKernel(Da,t)}const hx=A({ceil_:M$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fr(s,e,t){xs(s),t=t||Dr(e);const n={shape:s,value:e,dtype:t};return _.runKernel(jh,{},n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(s,e,t){const n=C(s,"x","clipByValue");if($(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Fr(n.shape,e,n.dtype);const o={x:n},r={clipValueMin:e,clipValueMax:t};return _.runKernel(Ra,o,r)}const os=A({clipByValue_:V$});function W$(s){return pt(s,0)}const dx=A({concat1d_:W$});function U$(s,e){return pt(s,e)}const mx=A({concat2d_:U$});function G$(s,e){return pt(s,e)}const fx=A({concat3d_:G$});function H$(s,e){return pt(s,e)}const gx=A({concat4d_:H$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(s,e,t,n,o="NHWC",r=[1,1],a){const i=C(s,"x","conv2d","float32"),l=C(e,"filter","conv2d","float32");let c=i,p=!1;i.rank===3&&(p=!0,c=R(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),$(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),Vt("conv2d",n,a);const u=o==="NHWC"?c.shape[3]:c.shape[1];$(u===l.shape[2],()=>`Error in conv2d: depth of input (${u}) must match input depth for filter ${l.shape[2]}.`),$(Tt(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),$(Ro(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),$(Ro(t),()=>"Error in conv2D: Strides should be larger than 0.");const h={x:c,filter:l},d={strides:t,pad:n,dataFormat:o,dilations:r,dimRoundingMode:a},m=_.runKernel(tc,h,d);return p?R(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Kn=A({conv2d_:q$});function K$(s,e,t,n,o="NWC",r=1,a){const i=C(s,"x","conv1d"),l=C(e,"filter","conv1d");let c=i,p=!1;i.rank===2&&(p=!0,c=R(i,[1,i.shape[0],i.shape[1]])),$(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),$(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),Vt("conv1d",n,a),$(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),$(Tt(t,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${r}'`),$(Ro(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),$(Ro(t),()=>"Error in conv1D: Stride should be larger than 0."),$(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const u=R(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=R(c,[c.shape[0],1,c.shape[1],c.shape[2]]),f=Kn(h,u,[1,t],n,"NHWC",[1,r],a);return p?R(f,[f.shape[2],f.shape[3]]):R(f,[f.shape[0],f.shape[2],f.shape[3]])}const Ad=A({conv1d_:K$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X$(s,e,t,n,o,r="NHWC",a){$(s.length===e.rank,()=>`Length of inShape (${s.length}) and rank of dy (${e.rank}) must match`);let i=s,l=e,c=!1;e.rank===3&&(c=!0,l=R(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,s[0],s[1],s[2]]),$(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),$(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),$(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const p=r==="NHWC"?i[3]:i[1],u=r==="NHWC"?l.shape[3]:l.shape[1];$(p===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[2]}.`),$(u===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[3]}.`),Vt("conv2dDerInput",o,a);const h={dy:l,filter:t},d={strides:n,pad:o,dataFormat:r,dimRoundingMode:a,inputShape:i},m=_.runKernel(sc,h,d);return c?R(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const _d=A({conv2DBackpropInput_:X$});function Y$(s,e,t,n,o,r){const a=C(s,"x","conv2dTranspose"),i=C(e,"filter","conv2dTranspose");return _d(t,a,i,n,o,"NHWC",r)}const Dd=A({conv2dTranspose_:Y$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(s,e,t,n,o="NDHWC",r=[1,1,1]){const a=C(s,"x","conv3d"),i=C(e,"filter","conv3d");let l=a,c=!1;a.rank===4&&(c=!0,l=R(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),$(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),$(l.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${i.shape[3]}.`),$(Tt(t,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),$(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`),$(Ro(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),$(Ro(t),()=>"Error in conv3D: Strides should be larger than 0.");const p={x:l,filter:i},u={strides:t,pad:n,dataFormat:o,dilations:r},h=_.runKernel(nc,p,u);return c?R(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const xx=A({conv3d_:Z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(s,e,t,n,o){$(s.length===e.rank,()=>`Length of inShape (${s.length}) and rank of dy (${e.rank}) must match`);let r=s,a=e,i=!1;e.rank===4&&(i=!0,a=R(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,s[0],s[1],s[2],s[3]]);const l=r[4],c=a.shape[4];$(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),$(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),$(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),$(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),$(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const p={dy:a,filter:t},u={pad:o,strides:n,inputShape:r},h=_.runKernel(Th,p,u);return i?R(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const yx=A({conv3DBackpropInput_:J$});function Q$(s,e,t,n,o){const r=C(s,"x","conv3dTranspose"),a=C(e,"filter","conv3dTranspose");return yx(t,r,a,n,o)}const bx=A({conv3dTranspose_:Q$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eI(s){const t={x:C(s,"x","cos","float32")};return _.runKernel(Oa,t)}const Yc=A({cos_:eI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tI(s){const t={x:C(s,"x","cosh","float32")};return _.runKernel(Fa,t)}const Rd=A({cosh_:tI});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sI(s,e=0,t=!1,n=!1){const r={x:C(s,"x","cumprod")},a={axis:e,exclusive:t,reverse:n};return _.runKernel(Eh,r,a)}const kl=A({cumprod_:sI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nI(s,e=0,t=!1,n=!1){const r={x:C(s,"x","cumsum")},a={axis:e,exclusive:t,reverse:n};return _.runKernel(oc,r,a)}const Od=A({cumsum_:nI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oI(s,e,t,n=!1){const o=C(s,"x","denseBincount"),r=C(e,"weights","denseBincount");$(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),$(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),$(t>=0,()=>`size must be non-negative, but got ${t}.`),$(r.size===o.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${r.shape}.`);const a={x:o,weights:r},i={size:t,binaryOutput:n};return _.runKernel(_h,a,i)}const Au=A({denseBincount_:oI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rI(s,e,t="NHWC"){const n=C(s,"x","depthToSpace","float32"),o=t==="NHWC"?n.shape[1]:n.shape[2],r=t==="NHWC"?n.shape[2]:n.shape[3],a=t==="NHWC"?n.shape[3]:n.shape[1];$(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),$(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${n.shape}`),$(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${n.shape}`),$(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${n.shape}`);const i={x:n},l={blockSize:e,dataFormat:t};return _.runKernel(Dh,i,l)}const wx=A({depthToSpace_:rI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aI(s,e,t,n,o="NHWC",r=[1,1],a){const i=C(s,"x","depthwiseConv2d","float32"),l=C(e,"filter","depthwiseConv2d","float32");let c=i,p=!1;i.rank===3&&(p=!0,c=R(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const u=o==="NHWC"?c.shape[3]:c.shape[1];$(u===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${u}) must match the inChannels dimension in filter ${l.shape[2]}.`),Vt("depthwiseConv2d",n,a);const h={x:c,filter:l},d={strides:t,pad:n,dataFormat:o,dilations:r,dimRoundingMode:a},m=_.runKernel(rc,h,d);return p?R(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const ki=A({depthwiseConv2d_:aI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iI(s){const t={x:C(s,"x","diag")};return _.runKernel(Fh,t)}const lI=A({diag_:iI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cI(s,e,t,n,o=[1,1],r="NHWC"){const a=C(s,"x","dilation2d"),i=C(e,"filter","dilation2d");$(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),$(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),$(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let l=a,c=!1;a.rank===3&&(l=R(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=!0),$(l.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${i.shape[2]}`);const p={x:l,filter:i},u={strides:t,pad:n,dilations:o},h=_.runKernel(ac,p,u);return c?R(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const vx=A({dilation2d_:cI});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kr(s,e){const t=s.length,n=[];for(let o=0;o<t;o++){const r=t-1-o,a=s[r]||1;(e[e.length-1-o]||1)>1&&a===1&&n.unshift(r)}return n}function xt(s,e){const t=[];for(let n=0;n<e.length;n++){const o=s[s.length-n-1],r=e.length-n-1,a=e[r];(o==null||o===1&&a>1)&&t.unshift(r)}return t}function ye(s,e){const t=Math.max(s.length,e.length),n=new Array(t);for(let o=0;o<t;o++){let r=s[s.length-o-1];r==null&&(r=1);let a=e[e.length-o-1];if(a==null&&(a=1),r===1)n[t-o-1]=a;else if(a===1)n[t-o-1]=r;else if(r!==a){const i=`Operands could not be broadcast together with shapes ${s} and ${e}.`;throw Error(i)}else n[t-o-1]=r}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pI(s,e){let t=C(s,"a","equal","string_or_numeric"),n=C(e,"b","equal","string_or_numeric");[t,n]=nt(t,n),ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(ic,o)}const qs=A({equal_:pI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uI(s,e,t){const n=C(e,"a","where"),o=C(t,"b","where"),r=C(s,"condition","where","bool"),a=ye(ye(r.shape,n.shape),o.shape),i=mr(r,a),l=mr(n,a),c=mr(o,a),p={condition:i,t:l,e:c};return _.runKernel(Lc,p)}const Dt=A({where_:uI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hI(s){const t={x:C(s,"x","zerosLike")};return _.runKernel(Hc,t)}const Ae=A({zerosLike_:hI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dI(s,e){let t=C(s,"a","div"),n=C(e,"b","div");[t,n]=nt(t,n);const o=ue(t,n),r=Ae(o),a=qs(n,r);return Dt(a,r,o)}const kx=A({divNoNan_:dI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mI(s,e){const t=C(s,"t1","dot"),n=C(e,"t2","dot");$((t.rank===1||t.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${n.rank}.`);const o=t.rank===1?t.size:t.shape[1],r=n.rank===1?n.size:n.shape[0];if($(o===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${r}.`),t.rank===1&&n.rank===1){const a=R(t,[1,-1]),i=R(n,[-1,1]),l=Ne(a,i);return R(l,[])}else if(t.rank===1&&n.rank===2){const a=R(t,[1,-1]),i=R(n,[n.shape[0],n.shape[1]]),l=Ne(a,i);return R(l,[l.size])}else if(t.rank===2&&n.rank===1){const a=R(n,[-1,1]),i=Ne(t,a);return R(i,[i.size])}else{const a=R(n,[n.shape[0],n.shape[1]]);return Ne(t,a)}}const $x=A({dot_:mI});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fI(s,...e){const t=e.map((o,r)=>C(o,`tensors${r}`,"einsum")),n={equation:s};return _.runKernel(Ph,t,n)}const lr=A({einsum_:fI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gI(s){const t={x:C(s,"x","elu","float32")};return _.runKernel(La,t)}const $i=A({elu_:gI});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xI(s,e){const t=C(s,"x","ensureShape","string_or_numeric");if(!Av(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return s}const yI=A({ensureShape_:xI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(s){let e=C(s,"x","erf");$(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=ne(e,"float32"));const t={x:e};return _.runKernel(za,t)}const Ix=A({erf_:bI});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fd(s,e){for(let t=0;t<s.length;++t)if(s[s.length-t-1]!==e-1-t)return!1;return!0}function Cx(s,e,t){const n=s.length+e.length,o=[];let r=0,a=0;for(let i=0;i<n;i++)t.indexOf(i)===-1?o.push(s[r++]):o.push(e[a++]);return o}function $t(s,e){const t=[],n=s.length;for(let r=0;r<n;r++)e.indexOf(r)===-1&&t.push(s[r]);const o=e.map(r=>s[r]);return[t,o]}function rt(s,e){const t=e.map(n=>1);return Cx(s,t,e)}function Et(s,e,t){$(Fd(e,t),()=>`${s} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function et(s,e){if(Fd(s,e))return null;const t=[];for(let n=0;n<e;++n)s.indexOf(n)===-1&&t.push(n);return s.forEach(n=>t.push(n)),t}function ao(s){return s.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function at(s,e){const t=[];for(let n=e-s;n<e;++n)t.push(n);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(s,e=null,t=!1){const o={x:C(s,"x","max")},r={reductionIndices:e,keepDims:t};return _.runKernel(bc,o,r)}const Ds=A({max_:wI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vI(s,e=null,t=!1){const o={x:C(s,"x","min")},r={axis:e,keepDims:t};return _.runKernel($c,o,r)}const pa=A({min_:vI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kI(s,e){let t=C(s,"base","pow"),n=C(e,"exp","pow");[t,n]=nt(t,n);const o={a:t,b:n};return _.runKernel(ei,o)}const Xn=A({pow_:kI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(s,e){if((Rs(s)&&e!=="string"||Array.isArray(s))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Rs(s)&&!(s instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return oo(s,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $I(s){const t={x:C(s,"x","sqrt","float32")};return _.runKernel(hi,t)}const Ot=A({sqrt_:$I});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function II(s){const e=C(s,"x","square"),t={};return _.runKernel("Square",{x:e},t)}const ze=A({square_:II});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CI(s,e=null,t=!1){let n=C(s,"x","sum");n.dtype==="bool"&&(n=ne(n,"int32"));const o={x:n},r={axis:e,keepDims:t};return _.runKernel(jc,o,r)}const le=A({sum_:CI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NI(s,e="euclidean",t=null,n=!1){s=C(s,"x","norm");const o=Nx(s,e,t);let r=o.shape;if(n){const a=Ie(t,s.shape);r=rt(o.shape,a)}return R(o,r)}function Nx(s,e,t=null){if(s.rank===0)return ut(s);if(s.rank!==1&&t===null)return Nx(R(s,[-1]),e,t);if(s.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return le(ut(s),t);if(e===1/0)return Ds(ut(s),t);if(e===-1/0)return pa(ut(s),t);if(e==="euclidean"||e===2)return Ot(le(Xn(ut(s),me(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Ds(le(ut(s),t[0]),t[1]-1);if(e===1/0)return Ds(le(ut(s),t[1]),t[0]);if(e===-1/0)return pa(le(ut(s),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Ot(le(ze(s),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const Ii=A({norm_:NI});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SI(s,e=null,t=!1){return Ii(s,"euclidean",e,t)}const Sx=A({euclideanNorm_:SI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TI(s){const t={x:C(s,"x","exp")};return _.runKernel(ja,t)}const rs=A({exp_:TI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EI(s,e=0){const t=C(s,"x","expandDims","string_or_numeric");$(e<=t.rank,()=>"Axis must be <= rank of the tensor");const n={input:t},o={dim:e};return _.runKernel(lc,n,o)}const zt=A({expandDims_:EI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AI(s){const t={x:C(s,"x","expm1")};return _.runKernel(Ba,t)}const Tx=A({expm1_:AI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _I(s,e){const t=C(s,"x","tile","string_or_numeric");$(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const n={x:t},o={reps:e};return _.runKernel(xi,n,o)}const Ts=A({tile_:_I});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DI(s,e,t,n="float32"){e==null&&(e=s);const o=ke([s,e],n),r=s<=e?s:e;for(let i=0;i<r;++i)o.set(1,i,i);const a=R(o.toTensor(),[s,e]);if(t==null)return a;if(t.length===1)return Ts(zt(a,0),[t[0],1,1]);if(t.length===2)return Ts(zt(zt(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Ts(zt(zt(zt(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Pd=A({eye_:DI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RI(s){const t={x:C(s,"x","floor","float32")};return _.runKernel(Ma,t)}const Ci=A({floor_:RI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OI(s,e,t=0,n=0){const o=C(s,"x","gather"),r=C(e,"indices","gather","int32"),a={x:o,indices:r},i={axis:t,batchDims:n};return _.runKernel(pc,a,i)}const Ni=A({gather_:OI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FI(s,e){let t=C(s,"a","greater","string_or_numeric"),n=C(e,"b","greater","string_or_numeric");[t,n]=nt(t,n),ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(uc,o)}const us=A({greater_:FI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PI(s,e){let t=C(s,"a","greaterEqual","string_or_numeric"),n=C(e,"b","greaterEqual","string_or_numeric");[t,n]=nt(t,n),ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(Wa,o)}const io=A({greaterEqual_:PI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LI(s){const t={input:C(s,"input","imag")};return _.runKernel(Wh,t)}const Zc=A({imag_:LI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zI(s){const t={x:C(s,"x","isFinite")};return _.runKernel(Ga,t)}const Ex=A({isFinite_:zI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jI(s){const t={x:C(s,"x","isInf")};return _.runKernel(Ha,t)}const Ax=A({isInf_:jI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BI(s){const t={x:C(s,"x","isNaN")};return _.runKernel(qa,t)}const _x=A({isNaN_:BI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MI(s,e=.2){const n={x:C(s,"x","leakyRelu")},o={alpha:e};return _.runKernel(hc,n,o)}const Jc=A({leakyRelu_:MI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VI(s,e){let t=C(s,"a","less","string_or_numeric"),n=C(e,"b","less","string_or_numeric");[t,n]=nt(t,n),ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(dc,o)}const ua=A({less_:VI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WI(s,e){let t=C(s,"a","lessEqual","string_or_numeric"),n=C(e,"b","lessEqual","string_or_numeric");[t,n]=nt(t,n),ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(mc,o)}const Uo=A({lessEqual_:WI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UI(s,e,t){if(t<=0)throw new Error("The number of values should be positive.");const n={start:s,stop:e,num:t};return _.runKernel(Uh,{},n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GI(s,e=5,t=1,n=1,o=.5){const r=C(s,"x","localResponseNormalization");$(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),$(xr(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=r,i=!1;r.rank===3&&(i=!0,a=R(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const l={x:a},c={depthRadius:e,bias:t,alpha:n,beta:o},p=_.runKernel(yc,l,c);return i?R(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const Dx=A({localResponseNormalization_:GI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HI(s){const t={x:C(s,"x","log","float32")};return _.runKernel(Ka,t)}const fs=A({log_:HI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(s){const t={x:C(s,"x","log1p")};return _.runKernel(Xa,t)}const Qc=A({log1p_:qI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KI(s,e){$(cu(s),()=>"The f passed in variableGrads(f) must be a function"),$(e==null||Array.isArray(e)&&e.every(c=>c instanceof yl),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in _.registeredVariables)e.push(_.registeredVariables[c])}const n=t?e.filter(c=>!c.trainable):null,o=e.length;e=e.filter(c=>c.trainable),$(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const r=!0,{value:a,grads:i}=_.gradients(s,e,null,r);$(i.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return e.forEach((c,p)=>{i[p]!=null&&(l[c.name]=i[p])}),n!=null&&n.forEach(c=>l[c.name]=null),{value:a,grads:l}}function In(s){return _.customGrad(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(s){const t={x:C(s,"x","neg")};return _.runKernel(Cc,t)}const He=A({neg_:XI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(s){const t={x:C(s,"x","softplus")};return _.runKernel(ui,t)}const Pr=A({softplus_:YI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZI(s){const e=C(s,"x","logSigmoid");return In(n=>({value:He(Pr(He(n))),gradFunc:a=>D(a,an(He(n)))}))(e)}const Rx=A({logSigmoid_:ZI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(s,e){let t=C(s,"a","sub"),n=C(e,"b","sub");[t,n]=nt(t,n);const o={a:t,b:n};return _.runKernel(mi,o)}const ie=A({sub_:JI});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QI(s,e=-1){const t=C(s,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return In((o,r)=>{const i=Ds(o,e,!0),l=ie(o,i),c=ie(ne(l,"float32"),fs(le(rs(l),e,!0)));return r([c]),{value:c,gradFunc:(u,h)=>{const[d]=h,m=!0,g=rs(d);return ie(u,D(le(u,e,m),g))}}})(t)}const Ld=A({logSoftmax_:QI});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(s,e=null,t=!1){const n=C(s,"x","logSumExp"),o=Ie(e,n.shape),r=Ds(n,o,!0),a=ie(n,r),i=rs(a),l=le(i,o),c=fs(l),p=K(R(r,c.shape),c);if(t){const u=rt(p.shape,o);return R(p,u)}return p}const ep=A({logSumExp_:eC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(s,e){const t=C(s,"a","logicalAnd","bool"),n=C(e,"b","logicalAnd","bool");ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(fc,o)}const un=A({logicalAnd_:tC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(s){const t={x:C(s,"x","logicalNot","bool")};return _.runKernel(gc,t)}const tp=A({logicalNot_:sC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nC(s,e){const t=C(s,"a","logicalOr","bool"),n=C(e,"b","logicalOr","bool");ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(xc,o)}const zd=A({logicalOr_:nC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(s,e){const t=C(s,"a","logicalXor","bool"),n=C(e,"b","logicalXor","bool");return ye(t.shape,n.shape),un(zd(s,e),tp(un(s,e)))}const Ox=A({logicalXor_:oC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hi=2147483648;function rC(s,e,t="left"){const n=C(s,"sortedSequence","searchSorted"),o=C(e,"values","searchSorted"),r=n.shape[n.shape.length-1],a=o.shape[o.shape.length-1],i=R(n,[-1,r]),l=R(o,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(W(l.shape)>=Hi)throw new Error(`values tensor size must less than ${Hi}`);if(i.shape[1]>=Hi)throw new Error(`trailing dim_size must less than ${Hi} for int32 output type, was ${i.shape[1]}`);const c={sortedSequence:i,values:l},p={side:t};return _.runKernel(ld,c,p)}const jd=A({searchSorted_:rC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aC(s,e){return jd(s,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(s,e,t,n,o){const r=C(s,"x","maxPool"),a=1;let i=r,l=!1;r.rank===3&&(l=!0,i=R(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),$(Tt(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),Vt("maxPool",n,o);const c={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o},u=_.runKernel(wc,c,p);return l?R(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const sp=A({maxPool_:iC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lC(s,e=[1,1,1],t,n,o,r="NDHWC"){const a=C(s,"x","maxPool3d");let i=a,l=!1;a.rank===4&&(l=!0,i=R(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),$(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Vt("maxPool3d",n,o);const c={x:i},p={filterSize:e,strides:t,pad:n,dimRoundingMode:o,dataFormat:r},u=_.runKernel(vc,c,p);return l?R(u,[u.shape[1],u.shape[2],u.shape[3],u.shape[4]]):u}const Fx=A({maxPool3d_:lC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cC(s,e,t,n,o=!1){const a={x:C(s,"x","maxPoolWithArgmax")},i={filterSize:e,strides:t,pad:n,includeBatchInIndex:o},l=_.runKernel(Kh,a,i);return{result:l[0],indexes:l[1]}}const pC=A({maxPoolWithArgmax_:cC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uC(s,e){let t=C(s,"a","maximum"),n=C(e,"b","maximum");[t,n]=nt(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(Ya,o)}const En=A({maximum_:uC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hC(s,e=null,t=!1){const o={x:C(s,"x","mean")},r={axis:e,keepDims:t};return _.runKernel(kc,o,r)}const st=A({mean_:hC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(s,e="float32"){if(xs(s),e==="complex64"){const n=ct(s,"float32"),o=ct(s,"float32");return Hn(n,o)}const t=Rt(W(s),e);return _.makeTensor(t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ts(s,e="float32"){if(xs(s),e==="complex64"){const n=ts(s,"float32"),o=ct(s,"float32");return Hn(n,o)}const t=xh(W(s),e);return _.makeTensor(t,s,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(s,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(s===void 0)return[];let n=C(s,"x","meshgrid",s instanceof Ke?s.dtype:"float32");if(e===void 0)return[n];let o=C(e,"y","meshgrid",e instanceof Ke?e.dtype:"float32");const r=W(n.shape),a=W(o.shape);return t==="xy"?(n=R(n,[1,-1]),o=R(o,[-1,1]),[Ne(ts([a,1],n.dtype),n),Ne(o,ts([1,r],o.dtype))]):(n=R(n,[-1,1]),o=R(o,[1,-1]),[Ne(n,ts([1,a],n.dtype)),Ne(ts([r,1],o.dtype),o)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(s,e){let t=C(s,"a","minimum"),n=C(e,"b","minimum");[t,n]=nt(t,n),t.dtype==="bool"&&(t=ne(t,"int32"),n=ne(n,"int32")),ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(Za,o)}const Oo=A({minimum_:mC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fC(s,e,t){$(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const n=C(s,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(e.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${e.length}.`);const o=t==="reflect"?1:0;for(let i=0;i<n.rank;i++)$(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(e[i][0]>=0&&e[i][0]<=n.shape[i]-o&&e[i][1]>=0&&e[i][1]<=n.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${n.shape[i]-o} or less than 0 for input of shape ${n.shape}`);const r={paddings:e,mode:t},a={x:n};return _.runKernel(Ic,a,r)}const Px=A({mirrorPad_:fC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gC(s,e){let t=C(s,"a","mod"),n=C(e,"b","mod");[t,n]=nt(t,n);const o={a:t,b:n};return _.runKernel(Ja,o)}const Lx=A({mod_:gC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xC(s,e=null,t=!1){s=C(s,"x","moments");const n=Ie(e,s.shape),o=st(s,n,t);let r=o.shape;t||(r=rt(o.shape,n));const a=ze(ie(ne(s,"float32"),R(o,r))),i=st(a,n,t);return{mean:o,variance:i}}const np=A({moments_:xC});function yC(s,e,t,n){const o=C(e,"data","multiRNNCell"),r=bl(t,"c","multiRNNCell"),a=bl(n,"h","multiRNNCell");let i=o;const l=[];for(let u=0;u<s.length;u++){const h=s[u](i,r[u],a[u]);l.push(h[0]),l.push(h[1]),i=h[1]}const c=[],p=[];for(let u=0;u<l.length;u+=2)c.push(l[u]),p.push(l[u+1]);return[c,p]}const bC=A({multiRNNCell_:yC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wC(s,e,t,n=!1){const o=C(s,"logits","multinomial"),r=o.size,a=o.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const l={logits:a===1?R(o,[1,-1]):o},c={numSamples:e,seed:t,normalized:n},p=_.runKernel(Xh,l,c);return a===1?R(p,[p.size]):p}const vC=A({multinomial_:wC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kC(s,e){let t=C(s,"a","notEqual","string_or_numeric"),n=C(e,"b","notEqual","string_or_numeric");[t,n]=nt(t,n),ye(t.shape,n.shape);const o={a:t,b:n};return _.runKernel(Nc,o)}const $r=A({notEqual_:kC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $C(s,e,t=1,n=0,o="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:C(s,"indices","oneHot","int32")},i={dtype:o,depth:e,onValue:t,offValue:n};return _.runKernel(Tc,a,i)}const Bd=A({oneHot_:$C});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC(s){const t={x:C(s,"x","onesLike")};return _.runKernel(Sc,t)}const gs=A({onesLike_:IC});function CC(s,e){const t=C(s,"v1","outerProduct"),n=C(e,"v2","outerProduct");$(t.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${n.rank}.`);const o=R(t,[-1,1]),r=R(n,[1,-1]);return Ne(o,r)}const NC=A({outerProduct_:CC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SC(s,e,t=0){const n=C(s,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:t},r={x:n};return _.runKernel(Ac,r,o)}const lo=A({pad_:SC});function TC(s,e,t=0){return $(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),lo(s,[e],t)}const EC=A({pad1d_:TC});function AC(s,e,t=0){return $(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),lo(s,e,t)}const _C=A({pad2d_:AC});function DC(s,e,t=0){return $(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),lo(s,e,t)}const RC=A({pad3d_:DC});function OC(s,e,t=0){return $(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),lo(s,e,t)}const FC=A({pad4d_:OC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PC(s,e,t){const n=C(s,"x","spaceToBatchND");$(n.rank>=1+e.length,()=>`input rank ${n.rank} should be > than [blockShape] ${e.length}`),$(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),$(n.shape.reduce((a,i,l)=>l>0&&l<=e.length?a&&(i+t[l-1][0]+t[l-1][1])%e[l-1]===0:a,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const o={x:n},r={blockShape:e,paddings:t};return _.runKernel(Bc,o,r)}const op=A({spaceToBatchND_:PC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LC(s,e,t,n,o,r,a){o==null&&(o=[1,1]),r==null&&(r=1),n===0&&(n="valid");const i=C(s,"x","maxPool");let l=i,c=!1;i.rank===3&&(c=!0,l=R(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(Tt(r,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`);const p=Ps(l.shape,e,r,o,n),u=[p.dilationHeight,p.dilationWidth];let h;n==="same"?h=jC([p.filterHeight,p.filterWidth],u):h=[[0,0],[0,0]];const d=u[0]===1&&u[1]===1,[m,g]=zC([p.inHeight,p.inWidth],u,h),f=d?n:"valid",x=d?l:op(l,u,m),w=(t==="avg"?()=>Kc(x,e,r,f,a):()=>sp(x,e,r,f,a))(),b=d?w:Xc(w,u,g);return c?R(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function zC(s,e,t){const n=t.map(p=>p[0]),o=t.map(p=>p[1]),r=s.concat(n,o),a=e.map((p,u)=>(p-r[u]%p)%p),i=o.map((p,u)=>p+a[u]),l=e.map((p,u)=>[n[u],i[u]]),c=e.map((p,u)=>[0,a[u]]);return[l,c]}function jC(s,e){const n=s.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=n.map(a=>Math.floor(a/2)),r=n.map((a,i)=>a-o[i]);return n.map((a,i)=>[o[i],r[i]])}const zx=A({pool_:LC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BC(s,e){const t=C(s,"x","prelu"),n=C(e,"alpha","prelu"),o={x:t,alpha:n};return _.runKernel(_c,o)}const rp=A({prelu_:BC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(s,e=null,t=!1){let n=C(s,"x","prod");n.dtype==="bool"&&(n=ne(n,"int32"));const o={x:n},r={axis:e,keepDims:t};return _.runKernel(Dc,o,r)}const jx=A({prod_:MC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VC(s,e,t,n){const o=s.map((p,u)=>C(p,`tensors${u}`,"raggedGather","int32")),r=C(e,"paramsDenseValues","raggedGather"),a=C(t,"indices","raggedGather","int32"),i={paramsNestedSplits:o,paramsDenseValues:r,indices:a},l={outputRaggedRank:n},c=_.runKernel(Qh,i,l);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const WC=A({raggedGather_:VC});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UC(s,e,t){const n=C(s,"starts","raggedRange"),o=C(e,"limits","raggedRange",n.dtype),r=C(t,"deltas","raggedRange",n.dtype),a={starts:n,limits:o,deltas:r},i=_.runKernel(ed,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const GC=A({raggedRange_:UC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HC(s,e,t,n,o){const r=C(s,"shape","raggedTensorToTensor","int32"),a=C(e,"values","raggedTensorToTensor"),i=C(t,"defaultValue","raggedTensorToTensor",a.dtype),l=n.map((u,h)=>C(u,`tensors${h}`,"raggedTensorToTensor","int32")),c={shape:r,values:a,defaultValue:i,rowPartitionTensors:l},p={rowPartitionTypes:o};return _.runKernel(td,c,p)}const qC=A({raggedTensorToTensor_:HC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KC(s,e,t){xs(s);const n=W(s);let o=null;if(t==null||t==="float32")o=new Float32Array(n);else if(t==="int32")o=new Int32Array(n);else if(t==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${t}`);for(let r=0;r<n;r++)o[r]=e();return _.makeTensor(o,s,t)}const XC=A({rand_:KC});var _u={},YC={get exports(){return _u},set exports(s){_u=s}};(function(s){(function(e,t,n){function o(l){var c=this,p=i();c.next=function(){var u=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=u-(c.c=u|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(l),c.s0<0&&(c.s0+=1),c.s1-=p(l),c.s1<0&&(c.s1+=1),c.s2-=p(l),c.s2<0&&(c.s2+=1),p=null}function r(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function a(l,c){var p=new o(l),u=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,u&&(typeof u=="object"&&r(u,p),h.state=function(){return r(p,{})}),h}function i(){var l=4022871197,c=function(p){p=String(p);for(var u=0;u<p.length;u++){l+=p.charCodeAt(u);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=a:n&&n.amd?n(function(){return a}):this.alea=a})(Mo,s,!1)})(YC);var Du={},ZC={get exports(){return Du},set exports(s){Du=s}};(function(s){(function(e,t,n){function o(i){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var u=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^u^u>>>8},i===(i|0)?l.x=i:c+=i;for(var p=0;p<c.length+64;p++)l.x^=c.charCodeAt(p)|0,l.next()}function r(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l}function a(i,l){var c=new o(i),p=l&&l.state,u=function(){return(c.next()>>>0)/4294967296};return u.double=function(){do var h=c.next()>>>11,d=(c.next()>>>0)/4294967296,m=(h+d)/(1<<21);while(m===0);return m},u.int32=c.next,u.quick=u,p&&(typeof p=="object"&&r(p,c),u.state=function(){return r(c,{})}),u}t&&t.exports?t.exports=a:n&&n.amd?n(function(){return a}):this.xor128=a})(Mo,s,!1)})(ZC);var Ru={},JC={get exports(){return Ru},set exports(s){Ru=s}};(function(s){(function(e,t,n){function o(i){var l=this,c="";l.next=function(){var u=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(u^u<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,i===(i|0)?l.x=i:c+=i;for(var p=0;p<c.length+64;p++)l.x^=c.charCodeAt(p)|0,p==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function r(i,l){return l.x=i.x,l.y=i.y,l.z=i.z,l.w=i.w,l.v=i.v,l.d=i.d,l}function a(i,l){var c=new o(i),p=l&&l.state,u=function(){return(c.next()>>>0)/4294967296};return u.double=function(){do var h=c.next()>>>11,d=(c.next()>>>0)/4294967296,m=(h+d)/(1<<21);while(m===0);return m},u.int32=c.next,u.quick=u,p&&(typeof p=="object"&&r(p,c),u.state=function(){return r(c,{})}),u}t&&t.exports?t.exports=a:n&&n.amd?n(function(){return a}):this.xorwow=a})(Mo,s,!1)})(JC);var Ou={},QC={get exports(){return Ou},set exports(s){Ou=s}};(function(s){(function(e,t,n){function o(i){var l=this;l.next=function(){var p=l.x,u=l.i,h,d;return h=p[u],h^=h>>>7,d=h^h<<24,h=p[u+1&7],d^=h^h>>>10,h=p[u+3&7],d^=h^h>>>3,h=p[u+4&7],d^=h^h<<7,h=p[u+7&7],h=h^h<<13,d^=h^h<<9,p[u]=d,l.i=u+1&7,d};function c(p,u){var h,d=[];if(u===(u|0))d[0]=u;else for(u=""+u,h=0;h<u.length;++h)d[h&7]=d[h&7]<<15^u.charCodeAt(h)+d[h+1&7]<<13;for(;d.length<8;)d.push(0);for(h=0;h<8&&d[h]===0;++h);for(h==8?d[7]=-1:d[h],p.x=d,p.i=0,h=256;h>0;--h)p.next()}c(l,i)}function r(i,l){return l.x=i.x.slice(),l.i=i.i,l}function a(i,l){i==null&&(i=+new Date);var c=new o(i),p=l&&l.state,u=function(){return(c.next()>>>0)/4294967296};return u.double=function(){do var h=c.next()>>>11,d=(c.next()>>>0)/4294967296,m=(h+d)/(1<<21);while(m===0);return m},u.int32=c.next,u.quick=u,p&&(p.x&&r(p,c),u.state=function(){return r(c,{})}),u}t&&t.exports?t.exports=a:n&&n.amd?n(function(){return a}):this.xorshift7=a})(Mo,s,!1)})(QC);var Fu={},eN={get exports(){return Fu},set exports(s){Fu=s}};(function(s){(function(e,t,n){function o(i){var l=this;l.next=function(){var p=l.w,u=l.X,h=l.i,d,m;return l.w=p=p+1640531527|0,m=u[h+34&127],d=u[h=h+1&127],m^=m<<13,d^=d<<17,m^=m>>>15,d^=d>>>12,m=u[h]=m^d,l.i=h,m+(p^p>>>16)|0};function c(p,u){var h,d,m,g,f,x=[],y=128;for(u===(u|0)?(d=u,u=null):(u=u+"\0",d=0,y=Math.max(y,u.length)),m=0,g=-32;g<y;++g)u&&(d^=u.charCodeAt((g+32)%u.length)),g===0&&(f=d),d^=d<<10,d^=d>>>15,d^=d<<4,d^=d>>>13,g>=0&&(f=f+1640531527|0,h=x[g&127]^=d+f,m=h==0?m+1:0);for(m>=128&&(x[(u&&u.length||0)&127]=-1),m=127,g=4*128;g>0;--g)d=x[m+34&127],h=x[m=m+1&127],d^=d<<13,h^=h<<17,d^=d>>>15,h^=h>>>12,x[m]=d^h;p.w=f,p.X=x,p.i=m}c(l,i)}function r(i,l){return l.i=i.i,l.w=i.w,l.X=i.X.slice(),l}function a(i,l){i==null&&(i=+new Date);var c=new o(i),p=l&&l.state,u=function(){return(c.next()>>>0)/4294967296};return u.double=function(){do var h=c.next()>>>11,d=(c.next()>>>0)/4294967296,m=(h+d)/(1<<21);while(m===0);return m},u.int32=c.next,u.quick=u,p&&(p.X&&r(p,c),u.state=function(){return r(c,{})}),u}t&&t.exports?t.exports=a:n&&n.amd?n(function(){return a}):this.xor4096=a})(Mo,s,!1)})(eN);var Pu={},tN={get exports(){return Pu},set exports(s){Pu=s}};(function(s){(function(e,t,n){function o(i){var l=this,c="";l.next=function(){var u=l.b,h=l.c,d=l.d,m=l.a;return u=u<<25^u>>>7^h,h=h-d|0,d=d<<24^d>>>8^m,m=m-u|0,l.b=u=u<<20^u>>>12^h,l.c=h=h-d|0,l.d=d<<16^h>>>16^m,l.a=m-u|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,i===Math.floor(i)?(l.a=i/4294967296|0,l.b=i|0):c+=i;for(var p=0;p<c.length+20;p++)l.b^=c.charCodeAt(p)|0,l.next()}function r(i,l){return l.a=i.a,l.b=i.b,l.c=i.c,l.d=i.d,l}function a(i,l){var c=new o(i),p=l&&l.state,u=function(){return(c.next()>>>0)/4294967296};return u.double=function(){do var h=c.next()>>>11,d=(c.next()>>>0)/4294967296,m=(h+d)/(1<<21);while(m===0);return m},u.int32=c.next,u.quick=u,p&&(typeof p=="object"&&r(p,c),u.state=function(){return r(c,{})}),u}t&&t.exports?t.exports=a:n&&n.amd?n(function(){return a}):this.tychei=a})(Mo,s,!1)})(tN);var Lu={},sN={get exports(){return Lu},set exports(s){Lu=s}};const nN={},oN=Object.freeze(Object.defineProperty({__proto__:null,default:nN},Symbol.toStringTag,{value:"Module"})),rN=qv(oN);(function(s){(function(e,t,n){var o=256,r=6,a=52,i="random",l=n.pow(o,r),c=n.pow(2,a),p=c*2,u=o-1,h;function d(b,k,I){var N=[];k=k==!0?{entropy:!0}:k||{};var S=x(f(k.entropy?[b,w(t)]:b??y(),3),N),T=new m(N),E=function(){for(var F=T.g(r),z=l,j=0;F<c;)F=(F+j)*o,z*=o,j=T.g(1);for(;F>=p;)F/=2,z/=2,j>>>=1;return(F+j)/z};return E.int32=function(){return T.g(4)|0},E.quick=function(){return T.g(4)/4294967296},E.double=E,x(w(T.S),t),(k.pass||I||function(F,z,j,B){return B&&(B.S&&g(B,T),F.state=function(){return g(T,{})}),j?(n[i]=F,z):F})(E,S,"global"in k?k.global:this==n,k.state)}function m(b){var k,I=b.length,N=this,S=0,T=N.i=N.j=0,E=N.S=[];for(I||(b=[I++]);S<o;)E[S]=S++;for(S=0;S<o;S++)E[S]=E[T=u&T+b[S%I]+(k=E[S])],E[T]=k;(N.g=function(F){for(var z,j=0,B=N.i,M=N.j,V=N.S;F--;)z=V[B=u&B+1],j=j*o+V[u&(V[B]=V[M=u&M+z])+(V[M]=z)];return N.i=B,N.j=M,j})(o)}function g(b,k){return k.i=b.i,k.j=b.j,k.S=b.S.slice(),k}function f(b,k){var I=[],N=typeof b,S;if(k&&N=="object")for(S in b)try{I.push(f(b[S],k-1))}catch{}return I.length?I:N=="string"?b:b+"\0"}function x(b,k){for(var I=b+"",N,S=0;S<I.length;)k[u&S]=u&(N^=k[u&S]*19)+I.charCodeAt(S++);return w(k)}function y(){try{var b;return h&&(b=h.randomBytes)?b=b(o):(b=new Uint8Array(o),(e.crypto||e.msCrypto).getRandomValues(b)),w(b)}catch{var k=e.navigator,I=k&&k.plugins;return[+new Date,e,I,e.screen,w(t)]}}function w(b){return String.fromCharCode.apply(0,b)}if(x(n.random(),t),s.exports){s.exports=d;try{h=rN}catch{}}else n["seed"+i]=d})(typeof self<"u"?self:Mo,[],Math)})(sN);var aN=_u,iN=Du,lN=Ru,cN=Ou,pN=Fu,uN=Pu,Go=Lu;Go.alea=aN;Go.xor128=iN;Go.xorwow=lN;Go.xorshift7=cN;Go.xor4096=pN;Go.tychei=uN;var ap=Go;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Md{constructor(e,t,n,o,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=r||Math.random();this.random=ap.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let e,t,n=!1;for(;!n;){let o,r,a;do o=2*this.random()-1,r=2*this.random()-1,a=o*o+r*r;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class hN{constructor(e,t,n,o){this.alpha=e,this.beta=1/t,this.dtype=n;const r=o||Math.random();this.randu=ap.alea(r.toString()),this.randn=new Md(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,o,r,a;for(;;){do o=this.randn.nextValue(),a=1+this.c*o;while(a<=0);if(a*=a*a,e=o*o,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class dN{constructor(e=0,t=1,n,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ap.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mN(s,e,t=1,n="float32",o){if(xs(s),t==null&&(t=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);const r=new hN(e,t,n,o),a=ke(s,n);for(let i=0;i<a.values.length;i++)a.values[i]=r.nextValue();return a.toTensor()}const fN=A({randomGamma_:mN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gN(s,e=0,t=1,n,o){if(xs(s),n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);const r=new Md(e,t,n,!1,o),a=ke(s,n);for(let i=0;i<a.values.length;i++)a.values[i]=r.nextValue();return a.toTensor()}const Vd=A({randomNormal_:gN});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xN(s,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Vd(s,0,1,e,t)}const yN=A({randomStandardNormal_:xN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bN(s,e=0,t=1,n="float32",o){xs(s);const r=ke(s,n),a=new dN(e,t,null,o);for(let i=0;i<r.values.length;i++)r.values[i]=a.nextValue();return r.toTensor()}const Ho=A({randomUniform_:bN});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(s,e,t,n){return Ho(s,e,t,"int32",n)}const vN=A({randomUniformInt_:wN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ir(s,e,t=1,n="float32"){if(t===0)throw new Error("Cannot have a step of zero");const o={start:s,stop:e,step:t,dtype:n};return _.runKernel(sd,{},o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(s){const t={input:C(s,"input","real")};return _.runKernel(nd,t)}const ha=A({real_:kN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(s){const t={x:C(s,"x","reciprocal")};return _.runKernel(ti,t)}const Bx=A({reciprocal_:$N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(s){const t={x:C(s,"x","relu")};return _.runKernel(si,t)}const mn=A({relu_:IN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(s){const t={x:C(s,"x","relu6")};return _.runKernel(ni,t)}const Wd=A({relu6_:CN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NN(s,e){const n={x:C(s,"x","reverse")},o={dims:e};return _.runKernel(Pc,n,o)}const Os=A({reverse_:NN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(s){const e=C(s,"x","reverse");return $(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Os(e,0)}const TN=A({reverse1d_:SN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(s,e){const t=C(s,"x","reverse");return $(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Os(t,e)}const AN=A({reverse2d_:EN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(s,e){const t=C(s,"x","reverse");return $(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Os(t,e)}const DN=A({reverse3d_:_N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(s,e){const t=C(s,"x","reverse");return $(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Os(t,e)}const ON=A({reverse4d_:RN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FN(s){const t={x:C(s,"x","round")};return _.runKernel(oi,t)}const Ud=A({round_:FN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PN(s){const t={x:C(s,"x","rsqrt","float32")};return _.runKernel(ri,t)}const Gd=A({rsqrt_:PN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(s){const t={x:C(s,"x","selu")};return _.runKernel(ai,t)}const Hd=A({selu_:LN});function zN(s,e,t,n,o,r=[1,1],a="NHWC"){const i=C(s,"x","separableConv2d"),l=C(e,"depthwiseFilter","separableConv2d"),c=C(t,"pointwiseFilter","separableConv2d");let p=i,u=!1;if(i.rank===3&&(u=!0,p=R(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),$(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),$(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),$(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),$(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const h=l.shape[2],d=l.shape[3];$(c.shape[2]===h*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*d}, but got ${c.shape[2]}.`);const m=ki(p,l,n,o,a,r),f=Kn(m,c,1,"valid",a);return u?R(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const qd=A({separableConv2d_:zN});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jN(s,e){const t=C(s,"x","setdiff1d"),n=C(e,"y","setdiff1d");$(t.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${n.dtype}).`),$(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),$(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);const o=await t.data(),r=await n.data(),a=new Set(r);let i=0;for(let p=0;p<o.length;p++)a.has(o[p])||i++;const l=new mt([i],t.dtype),c=new mt([i],"int32");for(let p=0,u=0;p<o.length;p++)a.has(o[p])||(l.values[u]=o[p],c.values[u]=p,u++);return[l.toTensor(),c.toTensor()]}const BN=jN;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MN(s){const t={x:C(s,"x","sign")};return _.runKernel(ci,t)}const Mx=A({sign_:MN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(s){const t={x:C(s,"x","sin","float32")};return _.runKernel(ii,t)}const Kd=A({sin_:VN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(s){const t={x:C(s,"x","sinh")};return _.runKernel(li,t)}const Xd=A({sinh_:WN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN(s,e,t){const n=C(s,"x","slice1d");return $(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),Te(n,[e],[t])}const ip=A({slice1d_:UN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(s,e,t){const n=C(s,"x","slice2d");return $(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),Te(n,e,t)}const Yd=A({slice2d_:GN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(s,e,t){const n=C(s,"x","slice3d");return $(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),Te(n,e,t)}const lp=A({slice3d_:HN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(s,e,t){const n=C(s,"x","slice4d");return $(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),Te(n,e,t)}const da=A({slice4d_:qN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(s,e=-1){const t=C(s,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const n={logits:t},o={dim:e};return _.runKernel(Vc,n,o)}const cp=A({softmax_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(s){$(s.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${s.dtype}.`);const e={input:s};return _.runKernel(zh,e)}const pp=A({fft_:XN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(s){$(s.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${s.dtype}.`);const e={input:s};return _.runKernel(Vh,e)}const ma=A({ifft_:YN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(s){const e=s.shape[s.shape.length-1],t=s.size/e;let n;if(e<=2){const o=R(s,[t,e]);n=ma(o)}else{const o=[t,2*(e-1)],r=R(ha(s),[t,e]),a=R(Zc(s),[t,e]),i=Os(Te(r,[0,1],[t,e-2]),1),l=D(Os(Te(a,[0,1],[t,e-2]),1),me(-1)),c=pt([r,i],1),p=pt([a,l],1),u=R(Hn(c,p),[o[0],o[1]]);n=ma(u)}if(n=ha(n),s.rank===3&&s.shape[0]!==0){const o=n,r=s.shape[0];n=R(n,[r,n.shape[0]/r,n.shape[1]]),o.dispose()}return n}const Zd=A({irfft_:ZN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(s,e,t=0){const o={x:C(s,"x","split")},r={numOrSizeSplits:e,axis:t};return _.runKernel(Mc,o,r)}const ss=A({split_:JN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(s,e){$(s.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${s.dtype}`);let t=s.shape[s.shape.length-1];const n=s.size/t;let o;if(e!=null&&e<t){const m=s.shape.map(f=>0),g=s.shape.map(f=>f);g[s.shape.length-1]=e,o=Te(s,m,g),t=e}else if(e!=null&&e>t){const m=s.shape.map(g=>g);m[s.shape.length-1]=e-t,o=pt([s,ct(m)],s.shape.length-1),t=e}else o=s;const r=Ae(o),a=R(Hn(o,r),[n,t]),i=pp(a),l=Math.floor(t/2)+1,c=ha(i),p=Zc(i),u=ss(c,[l,t-l],c.shape.length-1),h=ss(p,[l,t-l],p.shape.length-1),d=o.shape.slice();return d[o.shape.length-1]=l,R(Hn(u[0],h[0]),d)}const up=A({rfft_:QN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(s,e){let t=C(s,"a","squaredDifference"),n=C(e,"b","squaredDifference");[t,n]=nt(t,n),ye(t.shape,n.shape);const o={a:t,b:n},r={};return _.runKernel(di,o,r)}const Jd=A({squaredDifference_:eS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tS(s,e){const t=C(s,"x","squeeze","string_or_numeric");return R(t,to(t.shape,e).newShape)}const qo=A({squeeze_:tS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sS(s,e=0){const t=bl(s,"tensors","stack","string_or_numeric");$(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&$(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const n=t,o={axis:e};return _.runKernel(Ec,n,o)}const as=A({stack_:sS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(s,e=0){const n={x:C(s,"x","step")},o={alpha:e};return _.runKernel(yi,n,o)}const Lr=A({step_:nS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(s,e,t,n,o=0,r=0,a=0,i=0,l=0){const p={x:C(s,"x","stridedSlice","string_or_numeric")},u={begin:e,end:t,strides:n,beginMask:o,endMask:r,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};return _.runKernel(fd,p,u)}const Vx=A({stridedSlice_:oS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(s){const t={x:C(s,"x","tan","float32")};return _.runKernel(fi,t)}const Wx=A({tan_:rS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bt(s,e){_r(s);const t=no(s,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return oo(s,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(s,e,t){if(_r(s),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const n=no(s,t);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return oo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ux(s,e,t){if(_r(s),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const n=no(s,t);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return oo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(s,e,t){if(_r(s),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const n=no(s,t);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return oo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(s,e,t){if(_r(s),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const n=no(s,t);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return oo(s,e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lS(s,e,t){if(_r(s),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const n=no(s,t);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||n,oo(s,e,n,t)}function Gx(s,e,t){const n=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${s}, sliceDim: ${n}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(r+` update.rank < ${o}. `);if(s.length<n+(t.rank-o))throw new Error(r+` Output shape length < ${n+(t.rank-o)}`);if(t.rank!==o+s.length-n)throw new Error(r+` update.rank != ${o+s.length-n}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(r+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==s[a+n])throw new Error(r+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${s[a+o]})`)}function Qd(s,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(s.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${s.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(s.size===0)throw new Error(`Updates specified for empty output. updates shape: ${s.shape}`)}Gx(t,e,s)}function Ko(s,e,t){const n=e.shape.length,o=n>1?e.shape[n-1]:1,r=t.length;let a=1;for(let u=o;u<r;++u)a*=t[u];const i=o<1?1:o,l=W(e.shape)/i,c=[...de(t.slice(0,o)),1],p=W(t);return{sliceRank:o,numUpdates:l,sliceSize:a,strides:c,outputSize:p}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(s,e,t){const n=C(s,"tensor","tensorScatterupdate"),o=C(e,"indices","tensorScatterupdate","int32"),r=C(t,"updates","tensorScatterupdate");if(Qd(r,o,n.shape),n.dtype!==r.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${r.dtype}.`);const a={tensor:n,indices:o,updates:r},i={};return _.runKernel(id,a,i)}const pS=A({tensorScatterUpdate_:cS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(s,e=1,t=!0){const n=C(s,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=n.shape[n.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);const r={x:n},a={k:e,sorted:t},[i,l]=_.runKernel(bd,r,a);return{values:i,indices:l}}const Hx=A({topk_:uS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(s,e=0,t=1,n,o){if(xs(s),n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new Md(e,t,n,!0,o),a=ke(s,n);for(let i=0;i<a.values.length;i++)a.values[i]=r.nextValue();return a.toTensor()}const em=A({truncatedNormal_:hS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(s,e=0){const t=C(s,"x","unique","string_or_numeric");$(t.rank>0,()=>"The input tensor must be at least 1D");const n={x:t},o={axis:e},[r,a]=_.runKernel(vd,n,o);return{values:r,indices:a}}const qx=A({unique_:dS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(s,e,t){const n=C(s,"x","unsortedSegmentSum"),o=C(e,"segmentIds","unsortedSegmentSum","int32");$(xr(t),()=>"numSegments must be of dtype int");const r={x:n,segmentIds:o},a={numSegments:t};return _.runKernel(Gc,r,a)}const tm=A({unsortedSegmentSum_:mS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(s,e=0){const t=C(s,"x","unstack","string_or_numeric");$(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const n={value:t},o={axis:e};return _.runKernel(Uc,n,o)}const Fs=A({unstack_:fS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(s,e){return jd(s,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kx(s,e=!0,t,n){return _.makeVariable(s,e,t,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sm(s,e){const t=[];for(let r=0;r<e.length;r++)e[r]&&t.push(r);const n=ke(s,"int32"),o=ke([t.length,s.length],"int32");for(let r=0;r<t.length;r++){const a=n.indexToLoc(t[r]),i=r*s.length;o.values.set(a,i)}return o.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xS(s){const e=C(s,"condition","whereAsync","bool"),t=await e.data(),n=sm(e.shape,t);return s!==e&&e.dispose(),n}const Xx=xS;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function yS(s,e,t){const n=C(s,"tensor","boolMask"),o=C(e,"mask","boolMask","bool"),r=t??0,a=o.rank,i=n.shape;$(a>0,()=>"mask cannot be scalar"),cs(i.slice(r,r+a),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=r;g<r+a;g++)l*=i[g];const c=i.slice(0,r).concat([l],i.slice(r+a)),p=R(n,c),u=R(o,[-1]),h=await Xx(u),d=qo(h,[1]),m=Ni(p,d,r);return s!==n&&n.dispose(),e!==o&&o.dispose(),d.dispose(),p.dispose(),u.dispose(),h.dispose(),m}const bS=yS;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(s,e,t){const n=C(s,"x","transpose");if(e==null&&(e=n.shape.map((a,i)=>i).reverse()),$(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`),e.forEach(a=>{$(a>=0&&a<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${e}`)}),n.rank<=1)return n.clone();const o={x:n},r={perm:e};return n.dtype==="complex64"?P(()=>{let a=ha(n),i=Zc(n);return a=_.runKernel(ur,{x:a},r),i=_.runKernel(ur,{x:i},r),t&&(i=He(i)),Hn(a,i)}):_.runKernel(ur,o,r)}const Ee=A({transpose_:wS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(s,e,t,n,o=!0){const r=C(s,"v","movingAverage"),a=C(e,"x","movingAverage"),i=C(t,"decay","movingAverage");hk(r,a),$(Se(r.shape,a.shape),()=>"Shape mismatch in v and x");const l=me(1),c=ie(l,i);let p=D(ie(a,r),c);if(o){$(n!=null,()=>"When using zeroDebias: true, step is required.");const u=C(n,"step","movingAverage");p=ue(p,ie(l,Xn(i,u)))}return K(r,p)}const kS=A({movingAverage_:vS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $S(s,e,t){xs(t);const n=C(s,"indices","scatterND","int32"),o=C(e,"updates","scatterND");Qd(o,n,t);const r={indices:n,updates:o},a={shape:t};return _.runKernel(ad,r,a)}const IS=A({scatterND_:$S});function CS(s,e,t,n){if(s.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${s.dtype}.`);if(s.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${s.shape}.`);const o=s.rank>0?s.shape[0]:1,r=s.rank>1?s.shape[1]:1;if(t.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${r}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===o))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${o}]`);if(e.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NS(s,e,t,n=0){xs(t);const o=C(s,"sparseIndices","sparseToDense","int32"),r=C(e,"sparseValues","sparseToDense","string_or_numeric"),a=C(n,"defaultValue","sparseToDense",r.dtype);CS(o,r,t,a);const i={sparseIndices:o,sparseValues:r,defaultValue:a},l={outputShape:t};return _.runKernel(dd,i,l)}const SS=A({sparseToDense_:NS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(s,e){const t=C(e,"indices","gatherND","int32"),o={params:C(s,"x","gatherND","string_or_numeric"),indices:t};return _.runKernel(Mh,o)}const ES=A({gatherND_:TS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(s,e){if(e==null)return s.shape.slice();if(Se(s.shape,e))return e;if(s.shape.length===e.length){const t=[];for(let n=0;n<s.shape.length;n++)e[n]==null&&s.shape[n]!=null?t.push(s.shape[n]):t.push(e[n]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _S(s,e,t,n){const o=C(s,"x","dropout");if($(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),$(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return s instanceof Ke?o.clone():o;const r=AS(o,t),a=1-e,i=ue(Ci(K(Ho(r,0,1,"float32",n),a)),a);return D(o,i)}const Yx=A({dropout_:_S});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zx(s){return Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2))))}function nm(s,e,t){const n=1-s%2,o=new Float32Array(s);for(let r=0;r<s;++r){const a=2*Math.PI*r/(s+n-1);o[r]=e-t*Math.cos(a)}return Bt(o,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function DS(s,e,t=1){const n=C(s,"predictions","inTopK"),o=C(e,"targets","inTopK");$(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),$(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),cs(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=n.shape[n.shape.length-1];$(t>0&&t<=r,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${t}`);const a=await n.data(),i=await o.data(),[l,c]=[a.length/r,r],p=St("bool",l);for(let u=0;u<l;u++){const h=u*c,d=a.subarray(h,h+c),m=[];for(let g=0;g<d.length;g++)m.push({value:d[g],index:g});m.sort((g,f)=>f.value-g.value),p[u]=0;for(let g=0;g<t;g++)if(m[g].index===i[u]){p[u]=1;break}}return s!==n&&n.dispose(),e!==o&&o.dispose(),Gs(p,o.shape,"bool")}const RS=DS;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(s,e,t,n,o,r="NHWC",a){let i=s;s.rank===3&&(i=R(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=e;l.rank===3&&(l=R(e,[1,e.shape[0],e.shape[1],e.shape[2]])),$(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),$(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),$(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=r==="NHWC"?i.shape[3]:i.shape[1],p=r==="NHWC"?l.shape[3]:l.shape[1];$(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),$(p===t[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${t[3]}).`),Vt("conv2dDerFilter",o,a);const u={x:i,dy:l},h={strides:n,pad:o,dataFormat:r,dimRoundingMode:a,filterShape:t};return _.runKernel(Nh,u,h)}const om=A({conv2DBackpropFilter_:OS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hp(s,e,t){if(t==null||t==="linear")return s;if(t==="relu")return D(s,Lr(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function dp(s,e){let t=e;const n=xt(s.shape,e.shape);return n.length>0&&(t=le(t,n)),R(t,s.shape)}function mp(s,e,t,n){if(e==="linear")return s;if(e==="relu")return mn(s);if(e==="elu")return $i(s);if(e==="relu6")return Wd(s);if(e==="prelu")return rp(s,t);if(e==="leakyrelu")return Jc(s,n);if(e==="sigmoid")return an(s);throw new Error(`Unknown fused activation ${e}.`)}const fp=(s,e)=>!(s>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS({x:s,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:r=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:p}){if(l=l||"linear",fp(_.state.gradientDepth,l)===!1){$(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let I=Kn(s,e,t,n,o,r,a);return i!=null&&(I=K(I,i)),mp(I,l,c,p)}const u=C(s,"x","conv2d","float32"),h=C(e,"filter","conv2d","float32");let d=u,m=!1;u.rank===3&&(m=!0,d=R(u,[1,u.shape[0],u.shape[1],u.shape[2]])),$(d.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),$(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),Vt("fused conv2d",n,a);const g=o==="NHWC"?d.shape[3]:d.shape[1];$(h.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${h.shape[2]}.`),$(Tt(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`);const f=kt(d.shape,h.shape,t,r,n,a);let x;i!=null&&(x=C(i,"bias","fused conv2d"),[x]=nt(x,u),o==="NHWC"?ye(f.outShape,x.shape):($(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),$(x.shape.length===0||x.shape[0]===f.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${f.outChannels})`)));let y;if(c!=null){const I=c.shape;if($(I.length<=1||I.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${I.length}.`),I.length===1)$(I[0]===1||I[0]===f.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the number of output channels (${f.outChannels}).`);else if(I.length===3)try{ye(I,f.outShape)}catch{const S=`Error in fused conv2d: PReLU activation weights (${I}) is not compatible with the output shape of the conv2d (${f.outShape}).`;throw Error(S)}y=C(c,"prelu weights","fused conv2d")}const w=(I,N)=>{$(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);const[S,T,E,F]=N,z=hp(I,E,l);$(qn(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const j=_d(T.shape,z,S,t,n),B=om(T,z,S.shape,t,n),M=[j,B];if(F!=null){const V=dp(F,z);M.push(V)}return M},b={x:d,filter:h,bias:x,preluActivationWeights:y},k={strides:t,pad:n,dataFormat:o,dilations:r,dimRoundingMode:a,activation:l,leakyreluAlpha:p};return i==null?In((N,S,T)=>{let E=_.runKernel(ml,b,k);return T([S,N,E]),m&&(E=R(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:w}})(d,h):In((N,S,T,E)=>{let F=_.runKernel(ml,b,k);return E([S,N,F,T]),m&&(F=R(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:w}})(d,h,x)}const Jx=A({fusedConv2d_:FS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(s,e,t,n,o,r=[1,1],a){let i=s;s.rank===3&&(i=R(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l=e;l.rank===3&&(l=R(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:i,dy:l},p={strides:n,pad:o,dimRoundingMode:a,dilations:r,filterShape:t};return _.runKernel(Rh,c,p)}const Qx=A({depthwiseConv2dNativeBackpropFilter_:PS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LS(s,e,t,n,o,r=[1,1],a){let i=e,l=!1;e.rank===3&&(l=!0,i=R(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:i,filter:t},p={strides:n,pad:o,dimRoundingMode:a,dilations:r,inputShape:s},u=_.runKernel(Oh,c,p);return l?R(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const e1=A({depthwiseConv2dNativeBackpropInput_:LS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zS({x:s,filter:e,strides:t,pad:n,dataFormat:o="NHWC",dilations:r=[1,1],dimRoundingMode:a,bias:i,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:p}){if(fp(_.state.gradientDepth,l)===!1){let k=ki(s,e,t,n,o,r,a);return i!=null&&(k=K(k,i)),mp(k,l,c,p)}const u=C(s,"x","depthwiseConv2d","float32"),h=C(e,"filter","depthwiseConv2d","float32");let d=u,m=!1;u.rank===3&&(m=!0,d=R(u,[1,u.shape[0],u.shape[1],u.shape[2]])),$(d.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),$(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),$(d.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),r==null&&(r=[1,1]),$(Tt(t,r),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),Vt("fused depthwiseConv2d",n,a);const g=kt(d.shape,h.shape,t,r,n,a,!0);let f;i!=null&&(f=C(i,"bias","fused conv2d"),[f]=nt(f,u),ye(g.outShape,f.shape));let x;c!=null&&(x=C(c,"prelu weights","fused depthwiseConv2d"));const y=(k,I)=>{$(qn(r),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`);const[N,S,T,E]=I,F=hp(k,T,l),z=e1(S.shape,F,N,t,n,r,a),j=Qx(S,F,N.shape,t,n,r,a);if(E!=null){const B=dp(f,F);return[z,j,B]}return[z,j]},w={x:d,filter:h,bias:f,preluActivationWeights:x},b={strides:t,pad:n,dataFormat:o,dilations:r,dimRoundingMode:a,activation:l,leakyreluAlpha:p};return i==null?In((I,N,S)=>{let T=_.runKernel(fl,w,b);return S([N,I,T]),m&&(T=R(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:y}})(d,h):In((I,N,S,T)=>{let E=_.runKernel(fl,w,b);return T([N,I,E,S]),m&&(E=R(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:y}})(d,h,f)}const jS=A({fusedDepthwiseConv2d_:zS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS({a:s,b:e,transposeA:t=!1,transposeB:n=!1,bias:o,activation:r="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(fp(_.state.gradientDepth,r)===!1){let F=Ne(s,e,t,n);return o!=null&&(F=K(F,o)),mp(F,r,a,i)}let l=C(s,"a","fused matMul"),c=C(e,"b","fused matMul");[l,c]=nt(l,c);const p=t?l.shape[l.rank-2]:l.shape[l.rank-1],u=n?c.shape[c.rank-1]:c.shape[c.rank-2],h=t?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?c.shape[c.rank-2]:c.shape[c.rank-1],m=l.shape.slice(0,-2),g=c.shape.slice(0,-2),f=W(m),x=W(g);$(p===u,()=>`Error in fused matMul: inner shapes (${p}) and (${u}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${t} and transposeB=${n} must match.`);const w=ye(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([h,d]),b=t?R(l,[f,p,h]):R(l,[f,h,p]),k=n?R(c,[x,d,u]):R(c,[x,u,d]);let I;o!=null&&(I=C(o,"bias","fused matMul"),[I]=nt(I,l),ye(w,I.shape));let N;a!=null&&(N=C(a,"prelu weights","fused matMul"));const S=(F,z)=>{const[j,B,M,V]=z,H=hp(R(F,M.shape),M,r);let G,q;if(!t&&!n?(G=Ne(H,B,!1,!0),q=Ne(j,H,!0,!1)):!t&&n?(G=Ne(H,B,!1,!1),q=Ne(H,j,!0,!1)):t&&!n?(G=Ne(B,H,!1,!0),q=Ne(j,H,!1,!1)):(G=Ne(B,H,!0,!0),q=Ne(H,j,!0,!0)),o!=null){const Y=dp(V,H);return[G,q,Y]}else return[G,q]},T={a:b,b:k,bias:I,preluActivationWeights:N},E={transposeA:t,transposeB:n,activation:r,leakyreluAlpha:i};return o==null?In((z,j,B)=>{const M=_.runKernel(dl,T,E);return B([z,j,M]),{value:R(M,w),gradFunc:S}})(b,k):In((z,j,B,M)=>{const V=_.runKernel(dl,T,E);return M([z,j,V,B]),{value:R(V,w),gradFunc:S}})(b,k,I)}const zu=A({fusedMatMul_:BS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MS=Object.freeze(Object.defineProperty({__proto__:null,conv2d:Jx,depthwiseConv2d:jS,matMul:zu},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VS(s){return nm(s,.54,.46)}const WS=A({hammingWindow_:VS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function US(s){return nm(s,.5,.5)}const t1=A({hannWindow_:US});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(s,e,t,n=!1,o=0){let r=0;const a=[];for(;r+e<=s.size;)a.push(Te(s,r,e)),r+=t;if(n)for(;r<s.size;){const i=r+e-s.size,l=pt([Te(s,r,e-i),Fr([i],o)]);a.push(l),r+=t}return a.length===0?aa([],[0,e]):R(pt(a),[a.length,e])}const s1=A({frame_:GS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(s,e,t,n,o=t1){n==null&&(n=Zx(e));const r=s1(s,e,t),a=D(r,o(e));return up(a,n)}const qS=A({stft_:HS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(s,e,t,n,o="bilinear",r=0){const a=C(s,"image","cropAndResize"),i=C(e,"boxes","cropAndResize","float32"),l=C(t,"boxInd","cropAndResize","int32"),c=i.shape[0];$(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),$(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${i.shape}.`),$(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${i.shape}.`),$(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),$(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),$(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const p={image:a,boxes:i,boxInd:l},u={method:o,extrapolationValue:r,cropSize:n};return _.runKernel(Ah,p,u)}const XS=A({cropAndResize_:KS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YS(s){const e=C(s,"image","flipLeftRight","float32");$(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return _.runKernel(Bh,t,{})}const ZS=A({flipLeftRight_:YS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(s){const e=C(s,"image","grayscaleToRGB"),t=e.rank-1,n=e.shape[t];$(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),$(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);const o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,Ts(e,o)}const QS=A({grayscaleToRGB_:JS});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT(s){const e=C(s,"image","RGBToGrayscale"),t=e.rank-1,n=e.shape[t];$(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),$(n===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${n}.`);const o=e.dtype,r=ne(e,"float32"),a=Bt([.2989,.587,.114]);let i;switch(e.rank){case 2:i=lr("ij,j->i",r,a);break;case 3:i=lr("ijk,k->ij",r,a);break;case 4:i=lr("ijkl,l->ijk",r,a);break;case 5:i=lr("ijklm,m->ijkl",r,a);break;case 6:i=lr("ijklmn,n->ijklm",r,a);break;default:throw new Error("Not a valid tensor rank.")}return i=zt(i,-1),ne(i,o)}const tT=A({rgbToGrayscale_:eT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(s,e,t=0,n=.5){const o=C(s,"image","rotateWithOffset","float32");$(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const r={image:o},a={radians:e,fillValue:t,center:n};return _.runKernel(kd,r,a)}const nT=A({rotateWithOffset_:sT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zr(s,e,t,n,o,r){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),r==null&&(r=0);const a=s.shape[0];return t=Math.min(t,a),$(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),$(s.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${s.rank}'`),$(s.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${s.shape[1]}`),$(e.rank===1,()=>"scores must be a 1D tensor"),$(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),$(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(s,e,t,n=.5,o=Number.NEGATIVE_INFINITY){const r=C(s,"boxes","nonMaxSuppression","float32"),a=C(e,"scores","nonMaxSuppression","float32"),i=zr(r,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;const l={maxOutputSize:t,iouThreshold:n,scoreThreshold:o};return _.runKernel(Yh,{boxes:r,scores:a},l)}const rT=A({nonMaxSuppression_:oT});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(s,e,t){const n=iT(s,e,t),o=n<0?-(n+1):n;s.splice(o,0,e)}function iT(s,e,t){return cT(s,e,t||lT)}function lT(s,e){return s>e?1:s<e?-1:0}function cT(s,e,t){let n=0,o=s.length,r=0,a=!1;for(;n<o;){r=n+(o-n>>>1);const i=t(e,s[r]);i>0?n=r+1:(o=r,a=!i)}return a?n:-n-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rm(s,e,t,n,o){return lm(s,e,t,n,o,0)}function am(s,e,t,n,o,r){return lm(s,e,t,n,o,0,!1,r,!0)}function im(s,e,t,n,o,r){return lm(s,e,t,n,o,r,!0)}function lm(s,e,t,n,o,r,a=!1,i=!1,l=!1){const c=[];for(let f=0;f<e.length;f++)e[f]>o&&c.push({score:e[f],boxIndex:f,suppressBeginIndex:0});c.sort(Mf);const p=r>0?-.5/r:0,u=[],h=[];for(;u.length<t&&c.length>0;){const f=c.pop(),{score:x,boxIndex:y,suppressBeginIndex:w}=f;if(x<o)break;let b=!1;for(let k=u.length-1;k>=w;--k){const I=pT(s,y,u[k]);if(I>=n){b=!0;break}if(f.score=f.score*uT(n,p,I),f.score<=o)break}f.suppressBeginIndex=u.length,b||(f.score===x?(u.push(y),h.push(f.score)):f.score>o&&aT(c,f,Mf))}const d=u.length,m=t-d;i&&m>0&&(u.push(...new Array(m).fill(0)),h.push(...new Array(m).fill(0)));const g={selectedIndices:u};return a&&(g.selectedScores=h),l&&(g.validOutputs=d),g}function pT(s,e,t){const n=s.subarray(e*4,e*4+4),o=s.subarray(t*4,t*4+4),r=Math.min(n[0],n[2]),a=Math.min(n[1],n[3]),i=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),c=Math.min(o[0],o[2]),p=Math.min(o[1],o[3]),u=Math.max(o[0],o[2]),h=Math.max(o[1],o[3]),d=(i-r)*(l-a),m=(u-c)*(h-p);if(d<=0||m<=0)return 0;const g=Math.max(r,c),f=Math.max(a,p),x=Math.min(i,u),y=Math.min(l,h),w=Math.max(x-g,0)*Math.max(y-f,0);return w/(d+m-w)}function uT(s,e,t){const n=Math.exp(e*t*t);return t<=s?n:0}function Mf(s,e){return s.score-e.score||s.score===e.score&&e.boxIndex-s.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function hT(s,e,t,n=.5,o=Number.NEGATIVE_INFINITY){const r=C(s,"boxes","nonMaxSuppressionAsync"),a=C(e,"scores","nonMaxSuppressionAsync"),i=zr(r,a,t,n,o);t=i.maxOutputSize,n=i.iouThreshold,o=i.scoreThreshold;const l=await Promise.all([r.data(),a.data()]),c=l[0],p=l[1],{selectedIndices:u}=rm(c,p,t,n,o);return r!==s&&r.dispose(),a!==e&&a.dispose(),Bt(u,"int32")}const dT=hT;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(s,e,t,n=.5,o=Number.NEGATIVE_INFINITY,r=0){const a=C(s,"boxes","nonMaxSuppression"),i=C(e,"scores","nonMaxSuppression"),l=zr(a,i,t,n,o,r);t=l.maxOutputSize,n=l.iouThreshold,o=l.scoreThreshold,r=l.softNmsSigma;const c={boxes:a,scores:i},p={maxOutputSize:t,iouThreshold:n,scoreThreshold:o,softNmsSigma:r},u=_.runKernel(Jh,c,p);return{selectedIndices:u[0],selectedScores:u[1]}}const fT=A({nonMaxSuppressionWithScore_:mT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function gT(s,e,t,n=.5,o=Number.NEGATIVE_INFINITY,r=0){const a=C(s,"boxes","nonMaxSuppressionAsync"),i=C(e,"scores","nonMaxSuppressionAsync"),l=zr(a,i,t,n,o,r);t=l.maxOutputSize,n=l.iouThreshold,o=l.scoreThreshold,r=l.softNmsSigma;const c=await Promise.all([a.data(),i.data()]),p=c[0],u=c[1],{selectedIndices:h,selectedScores:d}=im(p,u,t,n,o,r);return a!==s&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Bt(h,"int32"),selectedScores:Bt(d)}}const xT=gT;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yT(s,e,t,n=.5,o=Number.NEGATIVE_INFINITY,r=!1){const a=C(s,"boxes","nonMaxSuppression"),i=C(e,"scores","nonMaxSuppression"),l=zr(a,i,t,n,o,null),c=l.maxOutputSize,p=l.iouThreshold,u=l.scoreThreshold,h={boxes:a,scores:i},d={maxOutputSize:c,iouThreshold:p,scoreThreshold:u,padToMaxOutputSize:r},m=_.runKernel(Zh,h,d);return{selectedIndices:m[0],validOutputs:m[1]}}const bT=A({nonMaxSuppressionPadded_:yT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function wT(s,e,t,n=.5,o=Number.NEGATIVE_INFINITY,r=!1){const a=C(s,"boxes","nonMaxSuppressionAsync"),i=C(e,"scores","nonMaxSuppressionAsync"),l=zr(a,i,t,n,o,null),c=l.maxOutputSize,p=l.iouThreshold,u=l.scoreThreshold,[h,d]=await Promise.all([a.data(),i.data()]),{selectedIndices:m,validOutputs:g}=am(h,d,c,p,u,r);return a!==s&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Bt(m,"int32"),validOutputs:me(g,"int32")}}const vT=wT;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(s,e,t=!1,n=!1){const o=C(s,"images","resizeBilinear");$(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),$(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),$(n===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=o,a=!1;o.rank===3&&(a=!0,r=R(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const i={images:r},l={alignCorners:t,halfPixelCenters:n,size:e},c=_.runKernel(Fc,i,l);return a?R(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const n1=A({resizeBilinear_:kT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $T(s,e,t=!1,n=!1){const o=C(s,"images","resizeNearestNeighbor");$(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),$(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),$(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(n===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=o,a=!1;o.rank===3&&(a=!0,r=R(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const i={images:r},l={alignCorners:t,halfPixelCenters:n,size:e},c=_.runKernel(Oc,i,l);return a?R(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const o1=A({resizeNearestNeighbor_:$T});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(s,e="binary",t=!1,n=.5){const o=C(s,"image","threshold"),r=.2989,a=.587,i=.114,l=o.shape[0]*o.shape[1];let c=D(Bt([n]),255),p,u,h,d;if($(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),$(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),$(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),$(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[p,u,h]=ss(o,[1,1,1],-1);const f=D(p,r),x=D(u,a),y=D(h,i);d=K(K(f,x),y)}else d=s;if(e==="otsu"){const f=ux(ne(Ud(d),"int32"),Gs([]),256);c=CT(f,l)}const m=t?Uo(d,c):us(d,c);return ne(D(m,255),"int32")}function CT(s,e){let t=Bt([-1]),n=Bt([0]),o=Bt([0]),r,a,i,l,c,p;for(let u=0;u<s.size-1;u++){r=Te(s,0,u+1),a=Te(s,u+1),c=ue(le(r),e),p=ue(le(a),e);const h=le(D(r,Ir(0,r.size)));i=ue(h,le(r));const d=Fr(a.shape,r.size),m=K(Ir(0,a.size),d),g=D(a,m);l=ue(le(g),le(a));const f=ie(i,l),x=ie(i,l),y=D(c,p);o=D(D(y,f),x);const w=us(o,n);n=Dt(w,o,n),t=Dt(w,Bt([u]),t)}return t}const NT=A({threshold_:IT});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(s,e,t="nearest",n="constant",o=0,r){const a=C(s,"image","transform","float32"),i=C(e,"transforms","transform","float32");$(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),$(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const l={image:a,transforms:i},c={interpolation:t,fillMode:n,fillValue:o,outputShape:r};return _.runKernel(wd,l,c)}const TT=A({transform_:ST});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ET(s,e,t){const n=C(s,"a","bandPart");$(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);const o=n.shape,[r,a]=n.shape.slice(-2);let i,l;typeof e=="number"?($(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),$(e<=r,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`),i=C(e<0?r:e,"numLower","bandPart")):($(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=Dt(ua(e,0),r,Oo(e,r))),typeof t=="number"?($(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),$(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),l=C(t<0?a:t,"numUpper","bandPart")):($(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Dt(ua(t,0),a,Oo(t,a)));const c=R(Ir(0,r,1,"int32"),[-1,1]),p=Ir(0,a,1,"int32"),u=ie(c,p),h=un(Uo(u,i),io(u,He(l))),d=ct([r,a],n.dtype);return R(as(Fs(R(n,[-1,r,a])).map(m=>Dt(h,m,d))),o)}const AT=A({bandPart_:ET});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(s){let e;if(Array.isArray(s)){e=!1,$(s!=null&&s.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=s[0].shape[0];for(let r=1;r<s.length;++r)$(s[r].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${s[r].shape[0]} vs. ${o})`)}else e=!0,s=ss(s,s.shape[0],0).map(o=>qo(o,[0]));$(s.length<=s[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${s.length}) exceeds number of dimensions (${s[0].shape[0]}).`);const t=[],n=s;for(let o=0;o<s.length;++o)t.push(_.tidy(()=>{let r=n[o];if(o>0)for(let a=0;a<o;++a){const i=D(le(D(t[a],r)),t[a]);r=ie(r,i)}return ue(r,Ii(r,"euclidean"))}));return e?as(t,0):t}const DT=A({gramSchmidt_:_T});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(s,e=!1){if($(s.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${s.rank}`),s.rank===2)return Vf(s,e);{const t=s.shape.slice(0,s.shape.length-2).reduce((l,c)=>l*c),n=Fs(R(s,[t,s.shape[s.shape.length-2],s.shape[s.shape.length-1]]),0),o=[],r=[];n.forEach(l=>{const[c,p]=Vf(l,e);o.push(c),r.push(p)});const a=R(as(o,0),s.shape),i=R(as(r,0),s.shape);return[a,i]}}function Vf(s,e=!1){return _.tidy(()=>{$(s.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${s.shape.length}D Tensor.`);const t=s.shape[0],n=s.shape[1];let o=Pd(t),r=kn(s);const a=aa([[1]],[1,1]);let i=kn(a);const l=t>=n?n:t;for(let c=0;c<l;++c){const p=r,u=i,h=o;[i,r,o]=_.tidy(()=>{const d=Te(r,[c,c],[t-c,1]),m=Ii(d),g=Te(r,[c,c],[1,1]),f=Dt(us(g,0),aa([[-1]]),aa([[1]])),x=ie(g,D(f,m)),y=ue(d,x);y.shape[0]===1?i=kn(a):i=pt([a,Te(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const w=He(ue(Ne(f,x),m)),b=Te(r,[c,0],[t-c,n]),k=D(w,i),I=Ee(i);if(c===0)r=ie(b,Ne(k,Ne(I,b)));else{const T=ie(b,Ne(k,Ne(I,b)));r=pt([Te(r,[0,0],[c,n]),T],0)}const N=Ee(k),S=Te(o,[0,c],[t,o.shape[1]-c]);if(c===0)o=ie(S,Ne(Ne(S,i),N));else{const T=ie(S,Ne(Ne(S,i),N));o=pt([Te(o,[0,0],[t,c]),T],1)}return[i,r,o]}),we([p,u,h])}return!e&&t>n&&(o=Te(o,[0,0],[t,n]),r=Te(r,[0,0],[n,n])),[o,r]})}const OT=A({qr_:RT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ht;(function(s){s[s.NONE=0]="NONE",s[s.MEAN=1]="MEAN",s[s.SUM=2]="SUM",s[s.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Ht||(Ht={}));function FT(s,e,t=Ht.SUM_BY_NONZERO_WEIGHTS){const n=C(s,"losses","computeWeightedLoss");let o=null;e!=null&&(o=C(e,"weights","computeWeightedLoss"));const r=o==null?n:D(n,o);if(t===Ht.NONE)return r;if(t===Ht.SUM)return le(r);if(t===Ht.MEAN){if(o==null)return st(r);{const a=n.size/o.size,i=ue(le(r),le(o));return a>1?ue(i,me(a)):i}}if(t===Ht.SUM_BY_NONZERO_WEIGHTS){if(o==null)return ue(le(r),me(n.size));{const a=D(o,ts(n.shape)),i=ne(le($r(a,me(0))),"float32");return ue(le(r),i)}}throw Error(`Unknown reduction: ${t}`)}const An=A({computeWeightedLoss_:FT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(s,e,t,n=Ht.SUM_BY_NONZERO_WEIGHTS){const o=C(s,"labels","absoluteDifference"),r=C(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=C(t,"weights","absoluteDifference")),cs(o.shape,r.shape,"Error in absoluteDifference: ");const i=ut(ie(o,r));return An(i,a,n)}const LT=A({absoluteDifference_:PT});function zT(s,e,t,n,o=Ht.SUM_BY_NONZERO_WEIGHTS){const r=C(s,"labels","cosineDistance"),a=C(e,"predictions","cosineDistance");let i=null;n!=null&&(i=C(n,"weights","cosineDistance")),cs(r.shape,a.shape,"Error in cosineDistance: ");const l=me(1),c=ie(l,le(D(r,a),t,!0));return An(c,i,o)}const jT=A({cosineDistance_:zT});function BT(s,e,t,n=Ht.SUM_BY_NONZERO_WEIGHTS){let o=C(s,"labels","hingeLoss");const r=C(e,"predictions","hingeLoss");let a=null;t!=null&&(a=C(t,"weights","hingeLoss")),cs(o.shape,r.shape,"Error in hingeLoss: ");const i=me(1);o=ie(D(me(2),o),i);const l=mn(ie(i,D(o,r)));return An(l,a,n)}const MT=A({hingeLoss_:BT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(s,e,t,n=1,o=Ht.SUM_BY_NONZERO_WEIGHTS){const r=C(s,"labels","huberLoss"),a=C(e,"predictions","huberLoss");let i=null;t!=null&&(i=C(t,"weights","huberLoss")),cs(r.shape,a.shape,"Error in huberLoss: ");const l=me(n),c=ut(ie(a,r)),p=Oo(c,l),u=ie(c,p),h=K(D(me(.5),ze(p)),D(l,u));return An(h,i,o)}const WT=A({huberLoss_:VT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(s,e,t,n=1e-7,o=Ht.SUM_BY_NONZERO_WEIGHTS){const r=C(s,"labels","logLoss"),a=C(e,"predictions","logLoss");let i=null;t!=null&&(i=C(t,"weights","logLoss")),cs(r.shape,a.shape,"Error in logLoss: ");const l=me(1),c=me(n),p=He(D(r,fs(K(a,c)))),u=D(ie(l,r),fs(K(ie(l,a),c))),h=ie(p,u);return An(h,i,o)}const GT=A({logLoss_:UT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HT(s,e,t,n=Ht.SUM_BY_NONZERO_WEIGHTS){const o=C(s,"labels","meanSquaredError"),r=C(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=C(t,"weights","meanSquaredError")),cs(o.shape,r.shape,"Error in meanSquaredError: ");const i=Jd(o,r);return An(i,a,n)}const qT=A({meanSquaredError_:HT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(s,e){const t=C(s,"labels","sigmoidCrossEntropyWithLogits"),n=C(e,"logits","sigmoidCrossEntropyWithLogits");cs(t.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=mn(n),r=D(n,t),a=Qc(rs(He(ut(n))));return K(ie(o,r),a)}function XT(s,e,t,n=0,o=Ht.SUM_BY_NONZERO_WEIGHTS){let r=C(s,"multiClassLabels","sigmoidCrossEntropy");const a=C(e,"logits","sigmoidCrossEntropy");let i=null;if(t!=null&&(i=C(t,"weights","sigmoidCrossEntropy")),cs(r.shape,a.shape,"Error in sigmoidCrossEntropy: "),n>0){const c=me(n),p=me(1),u=me(.5);r=K(D(r,ie(p,c)),D(u,c))}const l=KT(r,a);return An(l,i,o)}const YT=A({sigmoidCrossEntropy_:XT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(s,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return In((o,r,a)=>{const l=ep(r,[t],!0),c=ie(ne(r,"float32"),l);a([o,c]);const p=He(D(c,o));return{value:le(p,[t]),gradFunc:(d,m)=>{const[g,f]=m,x=rt(d.shape,[t]);return[D(R(d,x),ie(ne(g,"float32"),rs(f))),D(R(d,x),ie(rs(f),ne(g,"float32")))]}}})(s,e)}function JT(s,e,t,n=0,o=Ht.SUM_BY_NONZERO_WEIGHTS){let r=C(s,"onehotLabels","softmaxCrossEntropy");const a=C(e,"logits","softmaxCrossEntropy");let i=null;if(t!=null&&(i=C(t,"weights","softmaxCrossEntropy")),cs(r.shape,a.shape,"Error in softmaxCrossEntropy: "),n>0){const c=me(n),p=me(1),u=me(r.shape[1]);r=K(D(r,ie(p,c)),ue(c,u))}const l=ZT(r,a);return An(l,i,o)}const QT=A({softmaxCrossEntropy_:JT});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(s,e,t,n){const o=C(s,"indices","sparseFillEmptyRows","int32"),r=C(e,"values","sparseFillEmptyRows"),a=C(t,"denseShape","sparseFillEmptyRows","int32"),i=C(n,"defaultValue","sparseFillEmptyRows",r.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const l={indices:o,values:r,denseShape:a,defaultValue:i},c=_.runKernel(cd,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const t3=A({sparseFillEmptyRows_:e3});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3(s,e,t){const n=C(s,"inputIndices","sparseReshape","int32"),o=C(e,"inputShape","sparseReshape","int32"),r=C(t,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const a={inputIndices:n,inputShape:o,newShape:r},i=_.runKernel(pd,a);return{outputIndices:i[0],outputShape:i[1]}}const n3=A({sparseReshape_:s3});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(s,e,t){const n=C(s,"data","sparseSegmentMean"),o=C(e,"indices","sparseSegmentMean","int32"),r=C(t,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const a={data:n,indices:o,segmentIds:r};return _.runKernel(ud,a)}const r3=A({sparseSegmentMean_:o3});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a3(s,e,t){const n=C(s,"data","sparseSegmentSum"),o=C(e,"indices","sparseSegmentSum","int32"),r=C(t,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const a={data:n,indices:o,segmentIds:r};return _.runKernel(hd,a)}const i3=A({sparseSegmentSum_:a3});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(s,e,t,n,o,r,a,i){const l=C(s,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=C(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const p={separator:t,nGramWidths:n,leftPad:o,rightPad:r,padWidth:a,preserveShortSequences:i},u={data:l,dataSplits:c},h=_.runKernel(gd,u,p);return{nGrams:h[0],nGramsSplits:h[1]}}const c3=A({stringNGrams_:l3});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(s,e,t=!0){const n=C(s,"input","stringSplit","string"),o=C(e,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);const r={skipEmpty:t},a={input:n,delimiter:o},i=_.runKernel(xd,a,r);return{indices:i[0],values:i[1],shape:i[2]}}const u3=A({stringSplit_:p3});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3(s,e){const t=C(s,"input","stringToHashBucketFast","string"),n={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const o={input:t};return _.runKernel(yd,o,n)}const d3=A({stringToHashBucketFast_:h3});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m3(s,e,t,n=!0){const o=C(s,"input","staticRegexReplace","string"),r={pattern:e,rewrite:t,replaceGlobal:n};return _.runKernel(Wc,{x:o},r)}const f3=A({staticRegexReplace_:m3});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g3={fft:pp,ifft:ma,rfft:up,irfft:Zd},x3={hammingWindow:WS,hannWindow:t1,frame:s1,stft:qS},Us={flipLeftRight:ZS,grayscaleToRGB:QS,resizeNearestNeighbor:o1,resizeBilinear:n1,rgbToGrayscale:tT,rotateWithOffset:nT,cropAndResize:XS,nonMaxSuppression:rT,nonMaxSuppressionAsync:dT,nonMaxSuppressionWithScore:fT,nonMaxSuppressionWithScoreAsync:xT,nonMaxSuppressionPadded:bT,nonMaxSuppressionPaddedAsync:vT,threshold:NT,transform:TT},r1={bandPart:AT,gramSchmidt:DT,qr:OT},y3={absoluteDifference:LT,computeWeightedLoss:An,cosineDistance:jT,hingeLoss:MT,huberLoss:WT,logLoss:GT,meanSquaredError:qT,sigmoidCrossEntropy:YT,softmaxCrossEntropy:QT},b3={sparseFillEmptyRows:t3,sparseReshape:n3,sparseSegmentMean:r3,sparseSegmentSum:i3},w3={stringNGrams:c3,stringSplit:u3,stringToHashBucketFast:d3,staticRegexReplace:f3};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v3=new Map,k3=new Map;class jr{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Is{constructor(){this.classNameMap={}}static getMap(){return Is.instance==null&&(Is.instance=new Is),Is.instance}static register(e){Is.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function X(s,e,t){$(s.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof s.className=="string",()=>"className is required to be a string, but got type "+typeof s.className),$(s.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=s.className);const n=t,o=e+">"+n;return Is.register(s),v3.set(o,s),k3.set(s,o),s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class co extends jr{minimize(e,t=!1,n){const{value:o,grads:r}=this.computeGradients(e,n);if(n!=null){const a=n.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(a)}else this.applyGradients(r);return we(r),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return KI(e,t)}dispose(){this.iterations_!=null&&we(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:me(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(co,Symbol.hasInstance,{value:s=>s.minimize!=null&&s.computeGradients!=null&&s.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a1 extends co{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=_.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{const r=_.registeredVariables[n],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:P(()=>Ae(r).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:P(()=>Ae(r).variable(a))});const i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;const l=this.accumulatedGrads[o].variable,c=this.accumulatedUpdates[o].variable;P(()=>{const p=K(D(l,this.rho),D(ze(i),1-this.rho)),u=D(ue(Ot(K(c,this.epsilon)),Ot(K(l,this.epsilon))),i),h=K(D(c,this.rho),D(ze(u),1-this.rho));l.assign(p),c.assign(h);const d=K(D(u,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(we(this.accumulatedGrads.map(e=>e.variable)),we(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i1 extends co{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{const r=_.registeredVariables[n];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:P(()=>Fr(r.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[o].tensor:e[n];if(a==null)return;const i=this.accumulatedGrads[o].variable;P(()=>{const l=K(i,ze(a));i.assign(l);const c=K(D(ue(a,Ot(K(l,_.backend.epsilon()))),-this.learningRate),r);r.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&we(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l1 extends co{static get className(){return"Adam"}constructor(e,t,n,o=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],P(()=>{this.accBeta1=me(t).variable(),this.accBeta2=me(n).variable()}),o==null&&(this.epsilon=_.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);P(()=>{const n=ie(1,this.accBeta1),o=ie(1,this.accBeta2);t.forEach((r,a)=>{const i=_.registeredVariables[r],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:P(()=>Ae(i).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:P(()=>Ae(i).variable(l))});const c=Array.isArray(e)?e[a].tensor:e[r];if(c==null)return;const p=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,h=K(D(p,this.beta1),D(c,1-this.beta1)),d=K(D(u,this.beta2),D(ze(c),1-this.beta2)),m=ue(h,n),g=ue(d,o);p.assign(h),u.assign(d);const f=K(D(ue(m,K(Ot(g),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(D(this.accBeta1,this.beta1)),this.accBeta2.assign(D(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&we(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&we(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),P(()=>{this.accBeta1.assign(Xn(this.beta1,this.iterations_+1)),this.accBeta2.assign(Xn(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c1 extends co{static get className(){return"Adamax"}constructor(e,t,n,o=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=o,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],P(()=>{this.iteration=me(0).variable(),this.accBeta1=me(t).variable()}),o==null&&(this.epsilon=_.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);P(()=>{const n=ie(1,this.accBeta1),o=ue(-this.learningRate,K(D(this.iteration,this.decay),1));t.forEach((r,a)=>{const i=_.registeredVariables[r],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Ae(i).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:Ae(i).variable(l)});const c=Array.isArray(e)?e[a].tensor:e[r];if(c==null)return;const p=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,h=K(D(p,this.beta1),D(c,1-this.beta1)),d=D(u,this.beta2),m=ut(c),g=En(d,m);p.assign(h),u.assign(g);const f=K(D(ue(o,n),ue(h,K(g,this.epsilon))),i);i.assign(f)}),this.iteration.assign(K(this.iteration,1)),this.accBeta1.assign(D(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&we(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&we(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cm extends co{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{const r=Array.isArray(e)?e[o].tensor:e[n];if(r==null)return;const a=_.registeredVariables[n];P(()=>{const i=K(D(this.c,r),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=wt(me(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p1 extends cm{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=me(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{const r=_.registeredVariables[n];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${n}/momentum`,variable:P(()=>Ae(r).variable(!1))});const a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[n];i!=null&&P(()=>{let l;const c=K(D(this.m,a),i);this.useNesterov?l=K(D(this.c,K(i,D(c,this.m))),r):l=K(D(this.c,c),r),a.assign(c),r.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&we(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u1 extends co{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,o=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,o==null&&(this.epsilon=_.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,o)=>{const r=_.registeredVariables[n],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:P(()=>Ae(r).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:P(()=>Ae(r).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:P(()=>Ae(r).variable(a))});const i=Array.isArray(e)?e[o].tensor:e[n];if(i==null)return;const l=this.accumulatedMeanSquares[o].variable,c=this.accumulatedMoments[o].variable;P(()=>{const p=K(D(l,this.decay),D(ze(i),1-this.decay));if(this.centered){const u=this.accumulatedMeanGrads[o].variable,h=K(D(u,this.decay),D(i,1-this.decay)),d=ue(D(i,this.learningRate),Ot(ie(p,K(ze(h),this.epsilon)))),m=K(D(c,this.momentum),d);l.assign(p),u.assign(h),c.assign(m);const g=ie(r,m);r.assign(g)}else{const u=K(D(l,this.decay),D(ze(i),1-this.decay)),h=K(D(c,this.momentum),ue(D(i,this.learningRate),Ot(K(u,this.epsilon))));l.assign(u),c.assign(h);const d=ie(r,h);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&we(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&we(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&we(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $3=[a1,i1,l1,c1,p1,u1,cm];function I3(){for(const s of $3)X(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C3="model",N3=".json",S3=".weights.bin";function Wf(s){return new Promise(e=>setTimeout(e)).then(s)}class Fo{constructor(e){if(!L().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Fo.URL_SCHEME)&&(e=e.slice(Fo.URL_SCHEME.length)),(e==null||e.length===0)&&(e=C3),this.modelJsonFileName=e+N3,this.weightDataFileName=e+S3}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Js.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const o=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=B0(e,o),a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await Wf(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=n,await Wf(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:bi(e)}}}}Fo.URL_SCHEME="downloads://";class T3{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=o=>{const r=JSON.parse(o.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const l=Nd(r,c=>this.loadWeights(c));e(l)},n.onerror=o=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const o=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,o[a]));return Promise.all(r).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((n,o)=>{const r=new FileReader;r.onload=a=>{const i=a.target.result;n(i)},r.onerror=a=>o(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(r=>Bf(r.name)),o={};for(const r of e)r.paths.forEach(a=>{const i=Bf(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);o[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}}const E3=s=>L().getBool("IS_BROWSER")&&!Array.isArray(s)&&s.startsWith(Fo.URL_SCHEME)?A3(s.slice(Fo.URL_SCHEME.length)):null;Je.registerSaveRouter(E3);function A3(s="model"){return new Fo(s)}function _3(s){return new T3(s)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(s,e,t,n){a(s),t=t??0,n=n??1,i(t,n);let o=0;const r=l=>(l.then(c=>{const p=t+ ++o/s.length*(n-t);return e(p),c}),l);function a(l){$(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function i(l,c){$(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),$(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),$(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(s.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function h1(s,e){e==null&&(e={});const t=e.fetchFunc==null?L().platform.fetch:e.fetchFunc,n=s.map(u=>t(u,e.requestInit,{isBinary:!0})),o=0,r=.5,i=(e.onProgress==null?await Promise.all(n):await Uf(n,e.onProgress,o,r)).map(u=>u.arrayBuffer()),l=.5,c=1;return e.onProgress==null?await Promise.all(i):await Uf(i,e.onProgress,l,c)}async function D3(s,e="",t,n){return d1(a=>h1(a,{requestInit:n}))(s,e,t)}function d1(s){return async(e,t="",n)=>{const o=e.map(()=>!1),r={},a=n!=null?n.map(()=>!1):[],i=[];if(e.forEach((d,m)=>{let g=0;d.weights.forEach(f=>{const x="quantization"in f?f.quantization.dtype:f.dtype,y=$u[x]*W(f.shape),w=()=>{o[m]=!0,r[m]==null&&(r[m]=[]),r[m].push({manifestEntry:f,groupOffset:g,sizeBytes:y})};n!=null?n.forEach((b,k)=>{b===f.name&&(w(),a[k]=!0)}):w(),i.push(f.name),g+=y})}),!a.every(d=>d)){const d=n.filter((m,g)=>!a[g]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const l=o.reduce((d,m,g)=>(m&&d.push(g),d),[]),c=[];l.forEach(d=>{e[d].paths.forEach(m=>{const g=t+(t.endsWith("/")?"":"/")+m;c.push(g)})});const p=await s(c),u={};let h=0;return l.forEach(d=>{const m=e[d].paths.length,g=new Js(p.slice(h,h+m));r[d].forEach(x=>{const y=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),w=z0(y,[x.manifestEntry]);for(const b in w)u[b]=w[b]}),h+=m}),u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R3="application/octet-stream",O3="application/json";class pm{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=L().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=B0(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(o)],{type:O3}),"model.json"),e.weightData!=null){const a=Js.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:R3}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:bi(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const n=t.modelTopology,o=t.weightsManifest;if(n==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Nd(t,r=>this.loadWeights(r))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,o]=F3(t),r=this.weightPathPrefix||n,a=V0(e),i=[],l=[];for(const p of e)for(const u of p.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(u)):i.push(r+u+o);this.weightUrlConverter&&i.push(...await Promise.all(l));const c=await h1(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,c]}}pm.URL_SCHEME_REGEX=/^https?:\/\//;function F3(s){const e=s.lastIndexOf("/"),t=s.lastIndexOf("?"),n=s.substring(0,e),o=t>e?s.substring(t):"";return[n+"/",o]}function ju(s){return s.match(pm.URL_SCHEME_REGEX)!=null}const m1=(s,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(s)?t=s.every(n=>ju(n)):t=ju(s),t)return um(s,e)}return null};Je.registerSaveRouter(m1);Je.registerLoadRouter(m1);function um(s,e){return new pm(s,e)}function P3(s,e){return um(s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wp{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class f1{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class L3{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function z3(s,e,t,n){const o=arguments;return new L3(g1(...o))}function g1(s,e,t,n){return arguments.length===1?s.modelTopology!=null||s.weightSpecs!=null?new Wp(s):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wp({modelTopology:s})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Wp({modelTopology:s,weightSpecs:e,weightData:t,trainingConfig:n}))}function j3(s){return new f1(s)}function B3(s){return new f1(s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x1=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Js,browserFiles:_3,browserHTTPRequest:P3,concatenateArrayBuffers:j0,copyModel:Vk,decodeWeights:z0,encodeWeights:Iu,fromMemory:z3,fromMemorySync:g1,getLoadHandlers:Tk,getModelArtifactsForJSON:Nd,getModelArtifactsForJSONSync:M0,getModelArtifactsInfoForJSON:bi,getSaveHandlers:W0,getWeightSpecs:V0,http:um,isHTTPScheme:ju,listModels:Bk,loadWeights:D3,moveModel:Wk,registerLoadRouter:Sk,registerSaveRouter:Nk,removeModel:Mk,weightsLoaderFactory:d1,withSaveHandler:j3,withSaveHandlerSync:B3},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fo;function M3(s,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(s==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,n=!1,o=!1,r=!1,a=!1,i=!1;if(s.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&s instanceof ImageData)n=!0;else if(typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement)o=!0;else if(typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement)r=!0;else if(s.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&s instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${s.constructor.name}`);if(fu(du,_.backendName)!=null){const m={pixels:s},g={numChannels:e};return _.runKernel(du,m,g)}const[c,p]=o?[s.videoWidth,s.videoHeight]:[s.width,s.height];let u;if(a)u=s.getContext("2d").getImageData(0,0,c,p).data;else if(n||t)u=s.data;else if(r||o||i){if(fo==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")fo=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else fo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});fo.canvas.width=c,fo.canvas.height=p,fo.drawImage(s,0,0,c,p),u=fo.getImageData(0,0,c,p).data}let h;if(e===4)h=new Int32Array(u);else{const m=c*p;h=new Int32Array(m*e);for(let g=0;g<m;g++)for(let f=0;f<e;++f)h[g*e+f]=u[g*4+f]}return Ux(h,[p,c,e],"int32")}const V3=A({fromPixels_:M3});function hm(s,e){const t=s.shape.length,n=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[n-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[n-1]} vs. ${t}`);if(W(s.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${s.shape}.`);const o=e.shape,r=o[o.length-1];let a=1;for(let u=0;u<o.length-1;++u)a*=o[u];const i=s.shape,l=o.slice();l.pop();let c=1;for(let u=r;u<t;++u)c*=i[u],l.push(i[u]);const p=[...de(s.shape).map(u=>u/c),1].slice(0,r);return[l,a,c,p]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bu=-2,W3=-1;function dm(s,e,t){const n=s.shape.length;$(n===e.length,()=>`Error in slice${n}D: Length of begin ${e} must match the rank of the array (${n}).`),$(n===t.length,()=>`Error in slice${n}D: Length of size ${t} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)$(e[o]+t[o]<=s.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${s.shape[o]})`)}function U3(s){const e=[];let t=0;for(;s>0;)s&1&&e.push(t),s/=2,t++;return e}function mm(s,e,t){const n=[];for(let o=0;o<s.length;o++)n[o]=Math.ceil((e[o]-s[o])/t[o]);return n}function y1(s,e,t,n){const o=[...s];for(let r=o.length;r<n.length;r++)o.push(1);for(let r=0;r<t;r++)r===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function b1(s,e,t){return t<=s?t:t-(e-1)}function w1(s,e){const t=[];for(let n=0;n<s;n++)t.push(e+n);return t}function G3(s,e,t,n,o,r,a,i,l){const c=s.length;let p=new Array(c),u=new Array(c),h=new Array(c);if(e.length&&t>0){const d=e[0],m=t+1;p=v1(a,d,m,n,s),u=k1(i,d,m,o,s),h=y1(r,d,m,s)}else for(let d=0;d<c;d++)p[d]=I1(a,n,r,s,d,l),u[d]=C1(i,o,r,s,d,l),h[d]=$1(r,d,l);return{begin:p,end:u,strides:h}}function v1(s,e,t,n,o){const r=[...o],a=w1(t,e);for(let i=0;i<r.length;i++)if(a.indexOf(i)>-1)r[i]=0;else{const l=b1(e,t,i);let c=n[l];s&1<<l&&(c=0),r[i]=c}return r}function k1(s,e,t,n,o){const r=[...o],a=w1(t,e);for(let i=0;i<r.length;i++)if(a.indexOf(i)>-1)r[i]=Number.MAX_SAFE_INTEGER;else{const l=b1(e,t,i);let c=n[l];s&1<<l&&(c=Number.MAX_SAFE_INTEGER),r[i]=c}for(let i=0;i<r.length;i++){const l=o[i];r[i]<0&&(r[i]+=l),r[i]=To(0,r[i],o[i])}return r}function $1(s,e,t){let n=s[e];return(t&1<<e||n==null)&&(n=1),n}function I1(s,e,t,n,o,r){let a=e[o];const i=t[o]||1;(s&1<<o||r&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=n[o];return a<0&&(a+=l),a=To(0,a,l-1),a}function C1(s,e,t,n,o,r){let a=e[o];const i=t[o]||1;(s&1<<o||r&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=n[o];return a<0&&(a+=l),i>0?a=To(0,a,l):a=To(-1,a,l-1),a}function fm(s,e,t){let n=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){n=o;break}for(let o=n+1;o<t.length;o++)if(e[o]>0||t[o]!==s[o])return!1;return!0}function gm(s,e){let t=s.length>0?s[s.length-1]:1;for(let n=0;n<s.length-1;n++)t+=s[n]*e[n];return t}function gp(s,e,t){let n;const o=s.shape.length;typeof e=="number"?n=[e,...new Array(o-1).fill(0)]:e.length<o?n=e.concat(new Array(o-e.length).fill(0)):n=e.slice(),n.forEach(a=>{$(a!==-1,()=>"slice() does not support negative begin indexing.")});let r;return t==null?r=new Array(o).fill(-1):typeof t=="number"?r=[t,...new Array(o-1).fill(-1)]:t.length<o?r=t.concat(new Array(o-t.length).fill(-1)):r=t,r=r.map((a,i)=>a>=0?a:($(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),s.shape[i]-n[i])),[n,r]}function xm(s,e,t,n,o,r,a,i,l){let c;if(n==null?(c=new Array(e.length),c.fill(1)):c=n,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1;const u={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:o,endMask:r,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:l};for(let w=0;w<u.dims;w++)p&&1<<w&i&&u.numAddAxisAfterEllipsis++,1<<w&a&&(p=!0);p||(u.ellipsisMask|=1<<u.dims,u.dims++);const h={dims:s.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};H3(u,h);let d=!0,m=!0,g=!0;const f=[],x=[];for(let w=0;w<s.length;++w){if(h.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const b=!!(h.shrinkAxisMask&1<<w),k=s[w];if(k===-1){f.push(b?1:-1);continue}const I=[h.beginMask&1<<w,h.endMask&1<<w],N=[h.strides[w]>0?0:-1,h.strides[w]>0?k:k-1];if(b&&h.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&h.strides[w]===1;const S=!!(h.beginMask&1<<w&&h.endMask&1<<w);if(h.beginValid&&h.endValid){if(b){const z=h.begin[w]<0?k+h.begin[w]:h.begin[w];if(h.begin[w]=z,h.end[w]=h.begin[w]+1,z<0||z>=k)throw Error(`slice index ${h.begin[w]} of dimension ${w} out of bounds.`)}else h.begin[w]=Gf(h.begin[w],0,h.strides[w],k,I,N),h.end[w]=Gf(h.end[w],1,h.strides[w],k,I,N);const F=h.strides[w]===1&&h.begin[w]===0&&h.end[w]===k;d=d&&F,m=m&&(w===0&&h.strides[w]===1||F)}else d=d&&h.strides[w]===1&&S,m=m&&(w===0&&h.strides[w]===1||S);let T,E=!1;if(h.beginValid&&h.endValid?(T=h.end[w]-h.begin[w],E=!0):b?(T=1,E=!0):S&&k>=0&&(h.strides[w]<0?T=-k:T=k,E=!0),E){let F;T===0||T<0!=h.strides[w]<0?F=0:F=Math.trunc(T/h.strides[w])+(T%h.strides[w]!==0?1:0),f.push(F)}else f.push(-1)}for(let w=0;w<h.finalShapeGatherIndices.length;++w){const b=h.finalShapeGatherIndices[w];b>=0?x.push(f[b]):b===Bu&&x.push(1)}return{finalShapeSparse:x.filter((w,b)=>h.finalShapeGatherIndices[b]!==Bu),finalShape:x,isIdentity:d,sliceDim0:m,isSimpleSlice:g,begin:h.begin,end:h.end,strides:h.strides}}function H3(s,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=s.begin!=null,e.endValid=s.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let n=0;n<s.dims;n++)if(1<<n&s.ellipsisMask){const o=Math.min(e.dims-(s.dims-n)+1+s.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=n}else if(1<<n&s.newAxisMask)e.finalShapeGatherIndices.push(Bu),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);s.begin!=null&&(e.begin[t]=s.begin[n]),s.end!=null&&(e.end[t]=s.end[n]),e.strides[t]=s.strides[n],s.beginMask&1<<n&&(e.beginMask|=1<<t),s.endMask&1<<n&&(e.endMask|=1<<t),s.shrinkAxisMask&1<<n?(e.finalShapeGatherIndices.push(W3),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(n)),e.inputShapeGatherIndicesSparse[t]=n,t++}}function Gf(s,e,t,n,o,r){if(o[e])return t>0?r[e]:r[e+1&1];{const a=s<0?n+s:s;return a<r[0]?r[0]:a>r[1]?r[1]:a}}const q3=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:dm,computeFlatOffset:gm,computeOutShape:mm,getNormalizedAxes:G3,isSliceContinous:fm,maskToAxes:U3,parseSliceParams:gp,sliceInfo:xm,startForAxis:I1,startIndicesWithElidedDims:v1,stopForAxis:C1,stopIndicesWithElidedDims:k1,stridesForAxis:$1,stridesWithElidedDims:y1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K3{static sgd(e){return new cm(e)}static momentum(e,t,n=!1){return new p1(e,t,n)}static rmsprop(e,t=.9,n=0,o=null,r=!1){return new u1(e,t,n,o,r)}static adam(e=.001,t=.9,n=.999,o=null){return new l1(e,t,n,o)}static adadelta(e=.001,t=.95,n=null){return new a1(e,t,n)}static adamax(e=.002,t=.9,n=.999,o=null,r=0){return new c1(e,t,n,o,r)}static adagrad(e,t=.1){return new i1(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tr=K3;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X3=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:s=>s())();function N1(){return new Promise(s=>X3(()=>s()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ym(s,e){const t=s[0].length;s.forEach((o,r)=>{$(o.length===t,()=>`Error in concat${t}D: rank of tensors[${r}] must be the same as the rank of the rest (${t})`)}),$(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const n=s[0];s.forEach((o,r)=>{for(let a=0;a<t;a++)$(a===e||o[a]===n[a],()=>`Error in concat${t}D: Shape of tensors[${r}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${r}.`)})}function ln(s,e){const t=s[0].slice();for(let n=1;n<s.length;n++)t[e]+=s[n][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ws;(function(s){s[s.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",s[s.VALUE_ROWIDS=1]="VALUE_ROWIDS",s[s.ROW_LENGTHS=2]="ROW_LENGTHS",s[s.ROW_SPLITS=3]="ROW_SPLITS",s[s.ROW_LIMITS=4]="ROW_LIMITS",s[s.ROW_STARTS=5]="ROW_STARTS"})(Ws||(Ws={}));function S1(s,e,t){let n=new Array;if(t==null&&e==null)return n;if(e==null)for(;n.length<s+t.length;)n.push(-1);else n=e.slice();if(t==null)return n;if(s+t.length!==n.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${s+t.length}, but shape.rank = ${n.length}`);for(let o=1;o<t.length;++o){const r=t[o],a=n[n.length-t.length+o],i=n[a];if(r>=0)if(i>=0){if(i!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${o+s}] = ${r} but shape[${o+s}] = ${i}`)}else n[a]=r}return n}function T1(s){const e={FIRST_DIM_SIZE:Ws.FIRST_DIM_SIZE,VALUE_ROWIDS:Ws.VALUE_ROWIDS,ROW_LENGTHS:Ws.ROW_LENGTHS,ROW_SPLITS:Ws.ROW_SPLITS,ROW_LIMITS:Ws.ROW_LIMITS,ROW_STARTS:Ws.ROW_STARTS},t=[];for(const n of s)if(n in e)t.push(e[n]);else break;return t}function E1(s){return s.length===0?0:s[0]===Ws.FIRST_DIM_SIZE?s.length-1:s.length}function A1(s,e){if(s==null||e==null)return;const t=s.length,n=e.length;if(t>=n)throw new Error(`defaultValue.shape=${s} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${n})`);for(let o=0;o<Math.min(t,n-1);++o){const r=s[o],a=e[o+1];if(r>=0&&a>=0&&r!==1&&r!==a)throw new Error(`defaultValue.shape=${s}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${o-s.length}] = ${r} but ragged tensor input.flatValues.shape[${o-s.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bm=30;function xp(s){return s<=bm?s:pu(s,Math.floor(Math.sqrt(s)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wm(s,e,t){const n=t*(typeof s=="number"?s:s[0]),o=e*(typeof s=="number"?s:s[1]);return[n,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Si(s,e,t,n=!0){let o=[];if(n)o=o.concat(e.slice(0)),o.push(s[0]/t),o=o.concat(s.slice(1));else{o=o.concat(s[0]);const r=e.length;for(let a=0;a<r;++a)o=o.concat([s[a+1]/e[a],e[a]]);o=o.concat(s.slice(r+1))}return o}function Ti(s,e,t=!0){const n=[];if(t){n.push(e);for(let o=e+1;o<s;++o)o<=2*e?(n.push(o),n.push(o-(e+1))):n.push(o)}else{const o=[],r=[];for(let a=1;a<s;++a)a>=e*2+1||a%2===1?r.push(a):o.push(a);n.push(...o),n.push(0),n.push(...r)}return n}function Ei(s,e,t,n=!0){const o=[];n?o.push(s[0]/t):o.push(s[0]*t);for(let r=1;r<s.length;++r)r<=e.length?n?o.push(e[r-1]*s[r]):o.push(s[r]/e[r-1]):o.push(s[r]);return o}function vm(s,e){const t=[0];for(let n=0;n<e;++n)t.push(s[n][0]);return t}function km(s,e,t){const n=s.slice(0,1);for(let o=0;o<t;++o)n.push(s[o+1]-e[o][0]-e[o][1]);return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yp=1.7580993408473768,bp=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $m=.3275911,Im=.254829592,Cm=-.284496736,Nm=1.421413741,Sm=-1.453152027,Tm=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cn(s,e){if(s.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${s.length}, imag: ${e.length}.`);const t=new Float32Array(s.length*2);for(let n=0;n<t.length;n+=2)t[n]=s[n/2],t[n+1]=e[n/2];return t}function _1(s){const e=new Float32Array(s.length/2),t=new Float32Array(s.length/2);for(let n=0;n<s.length;n+=2)e[n/2]=s[n],t[n/2]=s[n+1];return{real:e,imag:t}}function D1(s){const e=Math.ceil(s.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=0;o<s.length;o+=4)t[Math.floor(o/4)]=s[o],n[Math.floor(o/4)]=s[o+1];return{real:t,imag:n}}function R1(s){const e=Math.floor(s.length/4),t=new Float32Array(e),n=new Float32Array(e);for(let o=2;o<s.length;o+=4)t[Math.floor(o/4)]=s[o],n[Math.floor(o/4)]=s[o+1];return{real:t,imag:n}}function Em(s,e){const t=s[e*2],n=s[e*2+1];return{real:t,imag:n}}function O1(s,e,t,n){s[n*2]=e,s[n*2+1]=t}function F1(s,e){const t=new Float32Array(s/2),n=new Float32Array(s/2);for(let o=0;o<Math.ceil(s/2);o++){const r=(e?2:-2)*Math.PI*(o/s);t[o]=Math.cos(r),n[o]=Math.sin(r)}return{real:t,imag:n}}function P1(s,e,t){const n=(t?2:-2)*Math.PI*(s/e),o=Math.cos(n),r=Math.sin(n);return{real:o,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Up="->",Y3=/->/g,Hf=",",qf="...";function Am(s,e){s=s.replace(/\s/g,"");const t=(s.length-s.replace(Y3,"").length)/Up.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Up}").`);const[n,o]=s.split(Up);$(n.indexOf(qf)===-1,()=>`The ellipsis notation ("${qf}") is not supported yet.`);const r=n.split(Hf),a=r.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<o.length;++h){const d=o[h];if(!r.some(m=>m.indexOf(d)!==-1))throw new Error(`Output subscripts contain the label ${d} not present in the input subscripts.`);i.indexOf(d)===-1&&i.push(d)}for(let h=0;h<n.length;++h){const d=n[h];i.indexOf(d)===-1&&d!==Hf&&i.push(d)}const l=new Array(r.length);for(let h=0;h<a;++h){if(new Set(r[h].split("")).size!==r[h].length)throw new Error(`Found duplicate axes in input component ${r[h]}. Support for duplicate axes in input is not implemented yet.`);l[h]=[];for(let d=0;d<r[h].length;++d)l[h].push(i.indexOf(r[h][d]))}const c=i.length,p=o.length,u=[];for(let h=p;h<c;++h)u.push(h);return{allDims:i,summedDims:u,idDims:l}}function _m(s,e){let t=new Array(s);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;const n=[];for(let o=0;o<s;++o)t[o]===-1&&n.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:n}}function Dm(s,e,t){const n=new Array(s);for(let o=0;o<t.length;++o){const r=t[o].shape;for(let a=0;a<e[o].length;++a)n[e[o][a]]===void 0?n[e[o][a]]=r[a]:$(n[e[o][a]]===r[a],()=>`Expected dimension ${n[e[o][a]]} at axis ${a} of input shaped ${JSON.stringify(r)}, but got dimension ${r[a]}`)}}function Rm(s,e){const t=s,n=[];let o=0;s.length===0&&t.push(-1),o=s.length+1;for(let a=0;a<o;++a)n.push([]);const r=[];for(let a=0;a<t.length;++a){const i=t[a],l=Z3(e,i);for(const c of l)r.indexOf(c)===-1&&(n[a].push(c),r.push(c))}return{path:t,steps:n}}function Om(s){return s.every((e,t)=>e===t)}function Z3(s,e){const t=[];for(let n=0;n<s.length;++n)(s[n].length===0||s[n].indexOf(e)!==-1||e===-1)&&t.push(n);return t}function Fm(s,e,t=0){let n=[];if(typeof e=="number")$(s.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),n=new Array(e).fill(s.shape[t]/e);else{const o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);$(o<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const a=e.reduce((i,l)=>l>0?i+l:i);e[r]=s.shape[t]-a}$(s.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),n=e}return n}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1(s){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${s}`}function z1(s,e){return`indices(${s}, 0) is invalid: ${e} < 0`}function j1(s,e,t){return`indices(${s}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(s,e){return`only one output dimension may be -1, not both ${s} and ${e}`}function M1(s,e){return`size ${s} must be non-negative, not ${e}`}function V1(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function W1(s,e){const t=W(s),n=W(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${s} outputShape= ${e}`}function U1(s,e){const t=W(s),n=W(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${n}. inputShape=${s} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mu(){return"segment ids must be >= 0"}function G1(){return"segment ids are not increasing"}function H1(s,e){return`Segment id ${s} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function q1(s,e,t){return`Bad: indices[${s}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K1(s,e){let t=!1,n;for(s<=bm?(n=s,t=!0):n=pu(s,Math.floor(Math.sqrt(s)));!t;)n>e||n===s?t=!0:n=pu(s,n+1);return n}function X1(s,e,t){const n=[],o=s.length;for(let r=0;r<o;r++)r!==e?n.push(s[r]):n.push(t);return n}function Pm(s,e,t,n){const o=e.shape.length,r=s.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>r)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${r}).`);if(t<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${t}).`);for(let u=0;u<n;++u)if(s.shape[u]!==e.shape[u])throw new Error(`x.shape[${u}]: ${s.shape[u]} should be equal to indices.shape[${u}]: ${e.shape[u]}.`);const a=s.shape[t],i=[];let l=1,c=1,p=1;for(let u=0;u<n;++u)i.push(s.shape[u]),l*=s.shape[u];for(let u=n;u<t;u++)i.push(s.shape[u]),c*=s.shape[u];for(let u=n;u<o;u++)i.push(e.shape[u]);for(let u=t+1;u<r;u++)i.push(s.shape[u]),p*=s.shape[u];return{batchSize:l,sliceSize:p,outerSize:c,dimSize:a,outputShape:i}}const J3=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Pm,computeOutShape:X1,segOpComputeOptimalWindowSize:K1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nn(s){try{return s.map(e=>Gn(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Y1(s){return s.map(e=>Vn(e))}const Q3=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Im,ERF_A2:Cm,ERF_A3:Nm,ERF_A4:Sm,ERF_A5:Tm,ERF_P:$m,PARALLELIZE_THRESHOLD:bm,get RowPartitionType(){return Ws},SELU_SCALE:bp,SELU_SCALEALPHA:yp,applyActivation:mp,assertAndGetBroadcastShape:ye,assertAxesAreInnerMostDims:Et,assertParamsConsistent:ym,assignToTypedArray:O1,axesAreInnerMostDims:Fd,calculateShapes:Ko,checkEinsumDimSizes:Dm,checkPadOnDimRoundingMode:Vt,combineLocations:Cx,combineRaggedTensorToTensorShapes:S1,complexWithEvenIndex:D1,complexWithOddIndex:R1,computeConv2DInfo:kt,computeConv3DInfo:ro,computeDefaultPad:Ed,computeDilation2DInfo:wi,computeOptimalWindowSize:xp,computeOutAndReduceShapes:$t,computeOutShape:ln,computePool2DInfo:Ps,computePool3DInfo:Sn,convertConv2DDataFormat:Tn,decodeEinsumEquation:Am,eitherStridesOrDilationsAreOne:Tt,expandShapeToKeepDim:rt,exponent:P1,exponents:F1,fromStringArrayToUint8:Y1,fromUint8ToStringArray:Nn,getAxesPermutation:et,getBroadcastDims:kr,getComplexWithIndex:Em,getEinsumComputePath:Rm,getEinsumPermutation:_m,getFusedBiasGradient:dp,getFusedDyActivation:hp,getImageCenter:wm,getInnerMostAxes:at,getPermuted:Ti,getRaggedRank:E1,getReductionAxes:xt,getReshaped:Si,getReshapedPermuted:Ei,getRowPartitionTypesHelper:T1,getSliceBeginCoords:vm,getSliceSize:km,getSparseFillEmptyRowsIndicesDenseShapeMismatch:L1,getSparseFillEmptyRowsNegativeIndexErrorMessage:z1,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:j1,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:V1,getSparseReshapeInputOutputMismatchErrorMessage:U1,getSparseReshapeInputOutputMultipleErrorMessage:W1,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:B1,getSparseReshapeNegativeOutputDimErrorMessage:M1,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:q1,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Mu,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:G1,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:H1,getUndoAxesPermutation:ao,isIdentityPermutation:Om,log:Gv,mergeRealAndImagArrays:Cn,prepareAndValidate:hm,prepareSplitSize:Fm,segment_util:J3,shouldFuse:fp,slice_util:q3,splitRealAndImagArrays:_1,stridesOrDilationsArePositive:Ro,tupleValuesAreOne:qn,upcastType:ns,validateDefaultValueShape:A1,validateInput:Qd,validateUpdateShape:Gx,warn:ds},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */I3();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z1={kernelName:Ul,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(s,Lr(ne(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e4={kernelName:Ia,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>{const n=ze(ne(t,"float32")),o=Ot(ie(me(1),n));return He(ue(s,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t4={kernelName:Ca,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>{const n=Ot(ie(ze(ne(t,"float32")),1));return ue(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s4={kernelName:Or,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e,o=ye(t.shape,n.shape);return{a:()=>{let i=s;const l=xt(t.shape,o);return l.length>0&&(i=le(i,l)),R(i,t.shape)},b:()=>{let i=s;const l=xt(n.shape,o);return l.length>0&&(i=le(i,l)),R(i,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n4={kernelName:Gl,saveAllInputs:!0,gradFunc:(s,e)=>{const t={};return e.forEach((n,o)=>{t[o]=()=>s.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o4={kernelName:Hl,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>Ae(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r4={kernelName:ql,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>Ae(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a4={kernelName:Na,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>ue(s,Ot(ie(me(1),ze(ne(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i4={kernelName:Sa,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>{const n=Ot(K(me(1),ze(ne(t,"float32"))));return ue(s,n)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l4={kernelName:Aa,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e,o=ye(t.shape,n.shape);return{a:()=>{const i=K(ze(t),ze(n));let l=D(s,ue(n,i));const c=xt(t.shape,o);return c.length>0&&(l=le(l,c)),R(l,t.shape)},b:()=>{const i=K(ze(t),ze(n));let l=He(D(s,ue(t,i)));const c=xt(n.shape,o);return c.length>0&&(l=le(l,c)),R(l,n.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c4={kernelName:Ta,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>ue(s,K(ze(ne(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p4={kernelName:Ea,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>ue(s,ie(me(1),ze(ne(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(s,e,t,n,o,r){const a=C(s,"dy","avgPool3dGrad"),i=C(e,"input","avgPool3dGrad");let l=a,c=i,p=!1;i.rank===4&&(p=!0,l=R(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),c=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Vt("avgPool3dGrad",o,r);const u={dy:l,input:c},h={filterSize:t,strides:n,pad:o,dimRoundingMode:r},d=_.runKernel(kh,u,h);return p?R(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const h4=A({avgPool3dGrad_:u4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d4={kernelName:Xl,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,{filterSize:o,strides:r,pad:a,dimRoundingMode:i}=t;return{x:()=>h4(s,n,o,r,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(s,e,t,n,o){const r=C(s,"dy","avgPoolGrad"),a=C(e,"input","avgPoolGrad");$(a.rank===r.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${r.rank})`);let i=a,l=r,c=!1;a.rank===3&&(c=!0,i=R(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=R(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),$(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const p={dy:l,input:i},u={filterSize:t,strides:n,pad:o},h=_.runKernel(vh,p,u);return c?R(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const f4=A({avgPoolGrad_:m4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4={kernelName:Kl,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,{filterSize:o,strides:r,pad:a}=t;return{x:()=>f4(s,n,o,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4={kernelName:Yl,inputsToSave:["a","b"],gradFunc:(s,e,t)=>{const[n,o]=e,{transposeA:r,transposeB:a}=t;return!r&&!a?{a:()=>Ne(s,o,!1,!0),b:()=>Ne(n,s,!0,!1)}:!r&&a?{a:()=>Ne(s,o,!1,!1),b:()=>Ne(s,n,!0,!1)}:r&&!a?{a:()=>Ne(o,s,!1,!0),b:()=>Ne(n,s,!1,!1)}:{a:()=>Ne(o,s,!0,!0),b:()=>Ne(s,n,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y4={kernelName:Zl,gradFunc:(s,e,t)=>{const{blockShape:n,crops:o}=t;return{x:()=>op(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b4={kernelName:Vv,gradFunc:(s,e,t)=>{const n=t,o=n.inputShape,r=n.shape,a=Array.from(r);for(let l=o.length-1;l>=0;l--)if(o[l]===r[l])a[l]=1;else if(o[l]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${r}].`);const i=[];for(let l=0;l<a.length;l++)a[l]>1&&i.push(l);return{x:()=>le(s,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w4={kernelName:_a,gradFunc:s=>({x:()=>s.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v4={kernelName:Da,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k4={kernelName:Ra,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,{clipValueMin:o,clipValueMax:r}=t;return{x:()=>Dt(un(io(n,o),Uo(n,r)),s,Ae(s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4={kernelName:Ql,inputsToSave:["x"],gradFunc:Z1.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I4={kernelName:ec,saveAllInputs:!0,gradFunc:(s,e,t)=>{const n=e.map(l=>l.shape),{axis:o}=t,r=Ie(o,e[0].shape)[0],a=n.map(l=>l[r]);return ss(s,a,r).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C4={kernelName:tc,inputsToSave:["x","filter"],gradFunc:(s,e,t)=>{const[n,o]=e,{dilations:r,strides:a,pad:i,dataFormat:l}=t;return $(qn(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>_d(n.shape,s,o,a,i,l),filter:()=>om(n,s,o.shape,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N4={kernelName:sc,inputsToSave:["dy","filter"],gradFunc:(s,e,t)=>{const[n,o]=e,{strides:r,pad:a,dataFormat:i,dimRoundingMode:l}=t;return{dy:()=>Kn(s,o,r,a,i,1,l),filter:()=>om(s,n,o.shape,r,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(s,e,t,n,o){let r=s;s.rank===4&&(r=R(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));let a=e;a.rank===4&&(a=R(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),$(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),$(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),$(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),$(r.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${t[3]}.`),$(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const i={x:r,dy:a},l={strides:n,pad:o,filterShape:t};return _.runKernel(Sh,i,l)}const T4=A({conv3DBackpropFilter_:S4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4={kernelName:nc,inputsToSave:["x","filter"],gradFunc:(s,e,t)=>{const{dilations:n,strides:o,pad:r}=t;$(qn(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);const[a,i]=e;return{x:()=>yx(a.shape,s,i,o,r),filter:()=>T4(a,s,i.shape,o,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A4={kernelName:Oa,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(He(Kd(ne(t,"float32"))),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _4={kernelName:Fa,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(Xd(ne(t,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4={kernelName:oc,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,{axis:o,exclusive:r,reverse:a}=t;return{x:()=>{const i=et([o],n.rank);let l=Od(s,o,r,!a);return i!=null&&(l=Ee(l,i)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R4={kernelName:rc,inputsToSave:["x","filter"],gradFunc:(s,e,t)=>{const{dilations:n,strides:o,pad:r,dimRoundingMode:a}=t,i=n??[1,1];$(qn(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[l,c]=e;return $(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),$(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),$(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),$(Tt(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),Vt("depthwiseConv2d",r,a),{x:()=>e1(l.shape,s,c,o,r,i,a),filter:()=>Qx(l,s,c.shape,o,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O4={kernelName:ac,inputsToSave:["x","filter"],gradFunc:(s,e,t)=>{const[n,o]=e,r={x:n,filter:o,dy:s},a={x:n,filter:o,dy:s};return{x:()=>_.runKernel(uu,r,t),filter:()=>_.runKernel(hu,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F4={kernelName:La,outputsToSave:[!0],gradFunc:(s,e)=>{const[t]=e,n={dy:s,y:t};return{x:()=>_.runKernel(Lh,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P4={kernelName:za,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e,n=D(rs(He(ze(t))),2/Math.sqrt(Math.PI));return{x:()=>D(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4={kernelName:ja,outputsToSave:[!0],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(s,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z4={kernelName:lc,inputsToSave:["input"],gradFunc:(s,e)=>{const[t]=e;return{input:()=>R(s,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j4={kernelName:Ba,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(s,rs(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B4={kernelName:Ma,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M4={kernelName:Va,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e,o=ye(t.shape,n.shape);return{a:()=>{const i=ue(s,ne(n,"float32")),l=xt(t.shape,o);return l.length>0?R(le(i,l),t.shape):i},b:()=>{let i=D(s,ne(t,"float32"));const l=xt(n.shape,o);l.length>0&&(i=R(le(i,l),n.shape));const c=ze(n);return He(ue(i,ne(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V4={kernelName:cc,inputsToSave:["x","mean","variance","scale"],gradFunc:(s,e,t)=>{const{varianceEpsilon:n}=t,[o,r,a,i]=e,l=i??me(1),c=xt(r.shape,o.shape),p=[];if(r.rank===1){for(let b=0;b<o.shape.length-1;++b)p.push(o.shape[b]);p.push(1)}const u=ie(o,r),h=D(s,l),d=Gd(K(a,me(n))),m=D(D(D(d,d),d),me(-.5));return{x:()=>r.rank===1?R(D(D(s,Ts(R(d,[1,1,1,r.shape[0]]),p)),l),o.shape):R(D(D(s,d),l),o.shape),mean:()=>{let b=D(D(d,me(-1)),h);return r.rank===1&&(b=le(b,c)),R(b,r.shape)},variance:()=>{let b=D(D(m,u),h);return r.rank===1&&(b=le(b,c)),R(b,r.shape)},scale:()=>{const b=D(u,d);let k=D(s,b);return r.rank===1&&(k=le(k,c)),R(k,r.shape)},offset:()=>{let b=s;return r.rank===1&&(b=le(b,c)),R(b,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4={kernelName:pc,inputsToSave:["x","indices"],gradFunc:(s,e,t)=>{const[n,o]=e,{axis:r,batchDims:a}=t,i=Ie(r,n.shape)[0],l=(c,p,u)=>()=>{const h=c.shape,d=p.size,m=h.slice(0,i),g=m.length,f=h.slice(r,h.length).slice(1),x=f.length,y=Kf(0,g),w=Kf(g+1,g+1+x),b=Xf([m,[d],f]),k=R(u,b),I=R(p,[d]),N=Xf([[g],y,w]),S=Ee(k,N);let T=tm(S,I,c.shape[i]);const E=ao(N);return T=Ee(T,E),T};if(a===1){const c=n.shape[0],p=n.split(c,0);return{x:()=>as(p.map((d,m)=>l(d,o.slice(m,1),s.slice(m,1))())).reshape(n.shape),indices:()=>o}}else return{x:l(n,o,s),indices:()=>o}}};function Kf(s,e){const t=[];for(let n=s;n<e;++n)t.push(n);return t}function Xf(s){const e=[];for(let t=0;t<s.length;++t)for(let n=0;n<s[t].length;++n)e.push(s[t][n]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U4={kernelName:Wa,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e;return{a:()=>Ae(t),b:()=>Ae(n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G4={kernelName:Ua,gradFunc:s=>({x:()=>ne(s,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4={kernelName:Ga,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q4={kernelName:Ha,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K4={kernelName:qa,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X4={kernelName:hc,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,{alpha:o}=t,r=us(n,0);return{x:()=>Dt(r,s,D(s,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y4={kernelName:Xa,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>ue(s,K(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z4={kernelName:Ka,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>ue(s,ne(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J4={kernelName:Uv,inputsToSave:[],outputsToSave:[!0],gradFunc:(s,e,t)=>{const[n]=e,{axis:o}=t;return{logits:()=>{const a=rs(n);return ie(s,D(le(s,o,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(s,e,t,n=5,o=1,r=1,a=.5){const i={x:s,y:e,dy:t},l={depthRadius:n,bias:o,alpha:r,beta:a};return _.runKernel(Gh,i,l)}const eE=A({localResponseNormalizationBackprop_:Q4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tE={kernelName:yc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,e,t)=>{const[n,o]=e,{depthRadius:r,bias:a,alpha:i,beta:l}=t;return{x:()=>eE(n,o,s,r,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J1(s,e,t,n){return e.rank<t.rank&&(e=R(e,rt(e.shape,n))),s.rank<t.rank&&(s=R(s,rt(s.shape,n))),{x:()=>D(s,ne(qs(t,e),s.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yf={kernelName:bc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,e,t)=>{const n=t,{reductionIndices:o}=n,r=e[0],a=e[1],i=Ie(o,r.shape),l=J1(s,a,r,i);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sE={kernelName:Ya,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e;return{a:()=>D(s,ne(io(t,n),"float32")),b:()=>D(s,ne(ua(t,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(s,e,t,n,o,r,a){const i=C(s,"dy","maxPool3dGrad"),l=C(e,"input","maxPool3dGrad"),c=C(t,"output","maxPool3dGrad");let p=i,u=l,h=c,d=!1;l.rank===4&&(d=!0,p=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=R(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),h=R(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),$(p.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),$(u.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),Vt("maxPool3dGrad",r,a);const m={dy:p,input:u,output:h},g={filterSize:n,strides:o,pad:r,dimRoundingMode:a},f=_.runKernel(qh,m,g);return d?R(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const oE=A({maxPool3dGrad_:nE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rE={kernelName:vc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,e,t)=>{const[n,o]=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:l}=t;return{x:()=>oE(s,n,o,r,a,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(s,e,t,n,o,r,a){const i=C(s,"dy","maxPoolGrad"),l=C(e,"input","maxPoolGrad"),c=C(t,"output","maxPoolGrad");$(l.rank===i.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${i.rank})`),$(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),$(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),Vt("maxPoolGrad",r,a);const p={dy:i,input:l,output:c},u={filterSize:n,strides:o,pad:r,dimRoundingMode:a};return _.runKernel(Hh,p,u)}const iE=A({maxPoolGrad_:aE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lE={kernelName:wc,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,e,t)=>{const[n,o]=e,{filterSize:r,strides:a,pad:i}=t;return{x:()=>iE(s,n,o,r,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cE={kernelName:kc,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,{axis:o}=t,r=Ie(o,n.shape),i=$t(n.shape,r)[1],l=W(i);return{x:()=>{const p=n.shape.slice();r.forEach(d=>{p[d]=1});const u=R(s,p);return ue(D(u,ts(n.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pE={kernelName:$c,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(s,e,t)=>{const n=t,{axis:o}=n,[r,a]=e,i=Ie(o,r.shape),l=J1(s,a,r,i);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uE={kernelName:Za,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e;return{a:()=>D(s,ne(Uo(t,n),"float32")),b:()=>D(s,ne(us(t,n),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hE={kernelName:Ic,inputsToSave:["x"],gradFunc:(s,e,t)=>{const n=e[0],{paddings:o}=t,r=o.map(a=>a[0]);return{x:()=>Te(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dE={kernelName:Ja,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e,o=ye(t.shape,n.shape);return{a:()=>{const i=xt(t.shape,o);return i.length>0?R(le(s,i),t.shape):s},b:()=>{const i=D(s,He(Ci(ue(t,n)))),l=xt(n.shape,o);return l.length>0?R(le(i,l),n.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mE={kernelName:Qa,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e,o=ye(t.shape,n.shape);return{a:()=>{const i=D(s,ne(n,"float32")),l=xt(t.shape,o);return l.length>0?R(le(i,l),t.shape):i},b:()=>{const i=D(s,ne(t,"float32")),l=xt(n.shape,o);return l.length>0?R(le(i,l),n.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fE={kernelName:Cc,gradFunc:s=>({x:()=>He(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gE={kernelName:Tc,inputsToSave:["indices"],gradFunc:(s,e)=>{const t=e[0];return{indices:()=>ct(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xE={kernelName:Sc,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yE={kernelName:Ec,saveAllInputs:!0,gradFunc:(s,e,t)=>{const{axis:n}=t;return Fs(s,n).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zf={kernelName:Ac,inputsToSave:["x"],gradFunc:(s,e,t)=>{const n=e[0],{paddings:o}=t,r=o.map(a=>a[0]);return{x:()=>Te(s,r,n.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bE={kernelName:ei,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(s,e)=>{const[t,n,o]=e,r=t,a=n,i=ye(r.shape,a.shape);return{a:()=>{const p=ne(a,"float32");let u=D(s,D(p,Xn(r,ie(p,me(1)))));const h=xt(r.shape,i);return h.length>0&&(u=le(u,h)),R(u,r.shape)},b:()=>{const p=us(r,0),u=Dt(p,fs(r),Ae(r));let h=D(s,D(o,u));const d=xt(a.shape,i);return d.length>0&&(h=le(h,d)),R(h,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wE={kernelName:_c,inputsToSave:["x","alpha"],gradFunc:(s,e)=>{const[t,n]=e,o=us(t,0);return{x:()=>Dt(o,s,D(s,n)),alpha:()=>{let r=Dt(o,Ae(s),D(s,t));const a=xt(n.shape,s.shape);return a.length>0&&(r=le(r,a)),R(r,n.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(s,e,t){const n=s.shape.slice();n[t]=1;const o=R(e,n),r=kl(s,t,!0,!1),a=kl(s,t,!0,!0),i=D(r,a);return D(o,i)}function kE(s,e,t){const n=s.shape.length,o=n-t.length,r=et(t,n);let a=s;r!=null&&(a=Ee(s,r));const i=a.shape.slice(),c=i.splice(n-t.length,t.length).reduce((h,d)=>h*d,1);i.push(c);const p=a.reshape(i);let u=vE(p,e,o);if(u=u.reshape(a.shape),r!=null){const h=ao(r);u=Ee(u,h)}return u}const $E={kernelName:Dc,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,{axis:o}=t;let r=[];return o==null?r=n.shape.map((a,i)=>i):typeof o=="number"?r=[o]:r=o,{x:()=>kE(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IE={kernelName:Pa,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e,o=ye(t.shape,n.shape);return{a:()=>{const i=ue(s,ne(n,"float32")),l=xt(t.shape,o);return l.length>0?R(le(i,l),t.shape):i},b:()=>{let i=D(s,ne(t,"float32"));const l=xt(n.shape,o);l.length>0&&(i=R(le(i,l),n.shape));const c=ze(n);return He(ue(i,ne(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CE={kernelName:ti,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>ue(s,He(ze(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NE={kernelName:ni,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e,n=D(Uo(t,6),Lr(t));return{x:()=>D(s,ne(n,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SE={kernelName:si,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(s,ne(Lr(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TE={kernelName:Rc,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>R(s,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EE={kernelName:Fc,inputsToSave:["images"],gradFunc:(s,e,t)=>{const[n]=e,o={dy:s,images:n};return{images:()=>_.runKernel(rd,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AE={kernelName:Oc,inputsToSave:["images"],gradFunc:(s,e,t)=>{const[n]=e,o={dy:s,images:n};return{images:()=>_.runKernel(od,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _E={kernelName:Pc,gradFunc:(s,e,t)=>{const{dims:n}=t,o=Ie(n,s.shape);return{x:()=>Os(s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DE={kernelName:oi,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RE={kernelName:ri,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>He(ue(s,D(Xn(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OE={kernelName:Lc,inputsToSave:["condition"],gradFunc:(s,e)=>{const[t]=e;return{condition:()=>ne(Ae(t),"float32"),t:()=>D(s,ne(t,s.dtype)),e:()=>D(s,ne(tp(t),s.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FE={kernelName:ai,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>{const n=us(t,me(0)),o=me(yp),r=me(bp),a=D(s,r),i=D(D(s,o),rs(ne(t,"float32")));return Dt(n,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE={kernelName:pi,outputsToSave:[!0],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(s,D(t,ie(me(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LE={kernelName:ci,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zE={kernelName:ii,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(Yc(ne(t,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jE={kernelName:li,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(Rd(ne(t,"float32")),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BE={kernelName:zc,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,{begin:o,size:r}=t,a=n.shape,[i,l]=gp(n,o,r),c=[];for(let p=0;p<s.rank;p++)c.push([i[p],a[p]-i[p]-l[p]]);return{x:()=>lo(s,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME={kernelName:Vc,outputsToSave:[!0],gradFunc:(s,e,t)=>{const[n]=e,{dim:o}=t,r=!0,a=D(s,n);return{logits:()=>ie(a,D(le(a,[o],r),n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VE={kernelName:ui,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(s,an(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jf={kernelName:Bc,gradFunc:(s,e,t)=>{const{blockShape:n,paddings:o}=t;return{x:()=>Xc(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qf={kernelName:Mc,gradFunc:(s,e,t)=>{const{axis:n}=t;return{x:()=>pt(s,n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE={kernelName:hi,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>ue(s,D(Ot(ne(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UE={kernelName:md,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(s,D(ne(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GE={kernelName:di,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e,o=me(2);return{a:()=>D(s,D(o,ie(t,n))),b:()=>D(s,D(o,ie(n,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HE={kernelName:yi,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qE={kernelName:mi,inputsToSave:["a","b"],gradFunc:(s,e)=>{const[t,n]=e,o=ye(t.shape,n.shape);return{a:()=>{let i=s;const l=xt(t.shape,o);return l.length>0&&(i=le(i,l)),R(i,t.shape)},b:()=>{let i=s;const l=xt(n.shape,o);return l.length>0&&(i=le(i,l)),R(He(i),n.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KE={kernelName:jc,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,o=n.shape.slice(),{axis:r}=t;Ie(r,n.shape).forEach(c=>{o[c]=1});const i=R(s,o),l=D(i,ts(n.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XE={kernelName:fi,inputsToSave:["x"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>ue(s,ze(Yc(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE={kernelName:gi,outputsToSave:[!0],gradFunc:(s,e)=>{const[t]=e;return{x:()=>D(ie(me(1),ze(t)),s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZE={kernelName:xi,inputsToSave:["x"],gradFunc:(s,e,t)=>{const[n]=e,{reps:o}=t;return{x:()=>{let a=Ae(n);if(n.rank===1)for(let i=0;i<o[0];++i)a=K(a,Te(s,[i*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)a=K(a,Te(s,[i*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)for(let c=0;c<o[2];++c)a=K(a,Te(s,[i*n.shape[0],l*n.shape[1],c*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let i=0;i<o[0];++i)for(let l=0;l<o[1];++l)for(let c=0;c<o[2];++c)for(let p=0;p<o[3];++p)a=K(a,Te(s,[i*n.shape[0],l*n.shape[1],c*n.shape[2],p*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JE={kernelName:ur,gradFunc:(s,e,t)=>{const n=t,{perm:o}=n,r=ao(o);return{x:()=>Ee(s,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QE={kernelName:Uc,gradFunc:(s,e,t)=>{const n=t,{axis:o}=n;return{value:()=>as(s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eA={kernelName:Gc,inputsToSave:["segmentIds"],gradFunc:(s,e)=>{const[t]=e;return{x:()=>tA(s,t)}}};function tA(s,e){const t=En(e,Ae(e)),n=Ni(s,t);let o=io(e,me(0,"int32"));const r=n.rank-o.rank;for(let i=0;i<r;++i)o=zt(o,i+1);o=un(o,ts(n.shape,"bool"));const a=Ae(n);return Dt(o,n,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sA={kernelName:Hc,gradFunc:s=>({x:()=>Ae(s)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nA=[Z1,e4,t4,s4,n4,o4,r4,a4,i4,l4,c4,p4,d4,g4,x4,y4,b4,w4,v4,k4,$4,I4,N4,C4,E4,A4,_4,D4,R4,O4,IE,F4,P4,L4,z4,j4,M4,B4,V4,W4,U4,G4,H4,q4,K4,X4,Y4,Z4,J4,tE,Yf,Yf,sE,rE,lE,cE,pE,uE,hE,dE,mE,fE,gE,xE,yE,Zf,Zf,bE,wE,$E,CE,NE,SE,TE,EE,AE,_E,DE,RE,OE,FE,PE,LE,zE,jE,BE,ME,VE,Jf,Jf,Qf,Qf,WE,GE,UE,HE,qE,KE,XE,YE,ZE,JE,QE,eA,sA];for(const s of nA)Hv(s);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.abs=function(){return this.throwIfDisposed(),ut(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.acos=function(){return this.throwIfDisposed(),Q0(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.acosh=function(){return this.throwIfDisposed(),ex(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.add=function(s){return this.throwIfDisposed(),K(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.all=function(s,e){return this.throwIfDisposed(),Td(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.any=function(s,e){return this.throwIfDisposed(),vl(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.argMax=function(s){return this.throwIfDisposed(),wr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.argMin=function(s){return this.throwIfDisposed(),tx(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),R(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asType=function(s){return this.throwIfDisposed(),ne(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as1D=function(){return this.throwIfDisposed(),R(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as2D=function(s,e){return this.throwIfDisposed(),R(this,[s,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as3D=function(s,e,t){return this.throwIfDisposed(),R(this,[s,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as4D=function(s,e,t,n){return this.throwIfDisposed(),R(this,[s,e,t,n])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.as5D=function(s,e,t,n,o){return this.throwIfDisposed(),R(this,[s,e,t,n,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asin=function(){return this.throwIfDisposed(),sx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.asinh=function(){return this.throwIfDisposed(),nx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atan=function(){return this.throwIfDisposed(),ox(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atan2=function(s){return this.throwIfDisposed(),rx(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.atanh=function(){return this.throwIfDisposed(),ax(this)};U().prototype.avgPool=function(s,e,t,n){return this.throwIfDisposed(),Kc(this,s,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.batchToSpaceND=function(s,e){return this.throwIfDisposed(),Xc(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.batchNorm=function(s,e,t,n,o){return this.throwIfDisposed(),vi(this,s,e,t,n,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.broadcastTo=function(s){return this.throwIfDisposed(),mr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cast=function(s){return this.throwIfDisposed(),ne(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.ceil=function(){return this.throwIfDisposed(),hx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.clipByValue=function(s,e){return this.throwIfDisposed(),os(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.concat=function(s,e){return this.throwIfDisposed(),s instanceof Ke&&(s=[s]),pt([this,...s],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv1d=function(s,e,t,n,o,r){return this.throwIfDisposed(),Ad(this,s,e,t,n,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv2dTranspose=function(s,e,t,n,o){return this.throwIfDisposed(),Dd(this,s,e,t,n,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.conv2d=function(s,e,t,n,o,r){return this.throwIfDisposed(),Kn(this,s,e,t,n,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cos=function(){return this.throwIfDisposed(),Yc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cosh=function(){return this.throwIfDisposed(),Rd(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cumprod=function(s,e,t){return this.throwIfDisposed(),kl(this,s,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.cumsum=function(s,e,t){return this.throwIfDisposed(),Od(this,s,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.depthToSpace=function(s,e){return this.throwIfDisposed(),wx(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.depthwiseConv2d=function(s,e,t,n,o,r){return this.throwIfDisposed(),ki(this,s,e,t,n,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.dilation2d=function(s,e,t,n,o){return this.throwIfDisposed(),vx(this,s,e,t,n,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.divNoNan=function(s){return this.throwIfDisposed(),kx(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.div=function(s){return this.throwIfDisposed(),ue(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.dot=function(s){return this.throwIfDisposed(),$x(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.elu=function(){return this.throwIfDisposed(),$i(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.equal=function(s){return this.throwIfDisposed(),qs(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.erf=function(){return this.throwIfDisposed(),Ix(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.euclideanNorm=function(s,e){return this.throwIfDisposed(),Sx(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.exp=function(){return this.throwIfDisposed(),rs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.expandDims=function(s){return this.throwIfDisposed(),zt(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.expm1=function(){return this.throwIfDisposed(),Tx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.fft=function(){return this.throwIfDisposed(),pp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.flatten=function(){return this.throwIfDisposed(),R(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.floor=function(){return this.throwIfDisposed(),Ci(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.floorDiv=function(s){return this.throwIfDisposed(),Sd(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.gather=function(s,e,t){return this.throwIfDisposed(),Ni(this,s,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.greaterEqual=function(s){return this.throwIfDisposed(),io(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.greater=function(s){return this.throwIfDisposed(),us(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.ifft=function(){return this.throwIfDisposed(),ma(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.irfft=function(){return this.throwIfDisposed(),Zd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isFinite=function(){return this.throwIfDisposed(),Ex(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isInf=function(){return this.throwIfDisposed(),Ax(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.isNaN=function(){return this.throwIfDisposed(),_x(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.leakyRelu=function(s){return this.throwIfDisposed(),Jc(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.lessEqual=function(s){return this.throwIfDisposed(),Uo(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.less=function(s){return this.throwIfDisposed(),ua(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.localResponseNormalization=function(s,e,t,n){return this.throwIfDisposed(),Dx(this,s,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSigmoid=function(){return this.throwIfDisposed(),Rx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSoftmax=function(s){return this.throwIfDisposed(),Ld(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logSumExp=function(s,e){return this.throwIfDisposed(),ep(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.log=function(){return this.throwIfDisposed(),fs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.log1p=function(){return this.throwIfDisposed(),Qc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalAnd=function(s){return this.throwIfDisposed(),un(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalNot=function(){return this.throwIfDisposed(),tp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalOr=function(s){return this.throwIfDisposed(),zd(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.logicalXor=function(s){return this.throwIfDisposed(),Ox(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.matMul=function(s,e,t){return this.throwIfDisposed(),Ne(this,s,e,t)};U().prototype.maxPool=function(s,e,t,n){return this.throwIfDisposed(),sp(this,s,e,t,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.max=function(s,e){return this.throwIfDisposed(),Ds(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.maximum=function(s){return this.throwIfDisposed(),En(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mean=function(s,e){return this.throwIfDisposed(),st(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.min=function(s,e){return this.throwIfDisposed(),pa(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.minimum=function(s){return this.throwIfDisposed(),Oo(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mirrorPad=function(s,e){return this.throwIfDisposed(),Px(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mod=function(s){return this.throwIfDisposed(),Lx(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.mul=function(s){return this.throwIfDisposed(),D(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.neg=function(){return this.throwIfDisposed(),He(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.norm=function(s,e,t){return this.throwIfDisposed(),Ii(this,s,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.notEqual=function(s){return this.throwIfDisposed(),$r(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.oneHot=function(s,e=1,t=0){return this.throwIfDisposed(),Bd(this,s,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.onesLike=function(){return this.throwIfDisposed(),gs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.pad=function(s,e){return this.throwIfDisposed(),lo(this,s,e)};U().prototype.pool=function(s,e,t,n,o,r){return this.throwIfDisposed(),zx(this,s,e,t,n,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.pow=function(s){return this.throwIfDisposed(),Xn(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.prelu=function(s){return this.throwIfDisposed(),rp(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.prod=function(s,e){return this.throwIfDisposed(),jx(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reciprocal=function(){return this.throwIfDisposed(),Bx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.relu=function(){return this.throwIfDisposed(),mn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.relu6=function(){return this.throwIfDisposed(),Wd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reshapeAs=function(s){return this.throwIfDisposed(),R(this,s.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reshape=function(s){return this.throwIfDisposed(),R(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.resizeBilinear=function(s,e,t){return this.throwIfDisposed(),n1(this,s,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.resizeNearestNeighbor=function(s,e,t){return this.throwIfDisposed(),o1(this,s,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.reverse=function(s){return this.throwIfDisposed(),Os(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.rfft=function(){return this.throwIfDisposed(),up(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.round=function(){return this.throwIfDisposed(),Ud(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.rsqrt=function(){return this.throwIfDisposed(),Gd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.selu=function(){return this.throwIfDisposed(),Hd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.separableConv2d=function(s,e,t,n,o,r){return this.throwIfDisposed(),qd(this,s,e,t,n,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sigmoid=function(){return this.throwIfDisposed(),an(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sign=function(){return this.throwIfDisposed(),Mx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sin=function(){return this.throwIfDisposed(),Kd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sinh=function(){return this.throwIfDisposed(),Xd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.slice=function(s,e){return this.throwIfDisposed(),Te(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.softmax=function(s){return this.throwIfDisposed(),cp(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.softplus=function(){return this.throwIfDisposed(),Pr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.spaceToBatchND=function(s,e){return this.throwIfDisposed(),op(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.split=function(s,e){return this.throwIfDisposed(),ss(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sqrt=function(){return this.throwIfDisposed(),Ot(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.square=function(){return this.throwIfDisposed(),ze(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.squaredDifference=function(s){return this.throwIfDisposed(),Jd(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.squeeze=function(s){return this.throwIfDisposed(),qo(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.stack=function(s,e){this.throwIfDisposed();const t=s instanceof Ke?[this,s]:[this,...s];return as(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.step=function(s){return this.throwIfDisposed(),Lr(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.stridedSlice=function(s,e,t,n,o,r,a,i){return this.throwIfDisposed(),Vx(this,s,e,t,n,o,r,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sub=function(s){return this.throwIfDisposed(),ie(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.sum=function(s,e){return this.throwIfDisposed(),le(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tan=function(){return this.throwIfDisposed(),Wx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tanh=function(){return this.throwIfDisposed(),vr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.tile=function(s){return this.throwIfDisposed(),Ts(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toBool=function(){return this.throwIfDisposed(),ne(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toFloat=function(){return this.throwIfDisposed(),ne(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.toInt=function(){return this.throwIfDisposed(),ne(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.topk=function(s,e){return this.throwIfDisposed(),Hx(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.transpose=function(s){return this.throwIfDisposed(),Ee(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unique=function(s){return this.throwIfDisposed(),qx(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unsortedSegmentSum=function(s,e){return this.throwIfDisposed(),tm(this,s,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.unstack=function(s){return this.throwIfDisposed(),Fs(this,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.where=function(s,e){return this.throwIfDisposed(),Dt(s,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U().prototype.zerosLike=function(){return this.throwIfDisposed(),Ae(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class tn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tn.prototype)}}class Es extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Es.prototype)}}class O extends Error{constructor(e){super(e),Object.setPrototypeOf(this,O.prototype)}}class be extends Error{constructor(e){super(e),Object.setPrototypeOf(this,be.prototype)}}class Lm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lm.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Q1{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Po(s,e){if(Array.isArray(s)){let t=[];for(let n=0;n<e;n++)t=t.concat(s);return t}else{const t=new Array(e);return t.fill(s),t}}function sn(s,e){if(!s)throw new Lm(e)}function eg(s,e){let t=0;for(const n of s)n===e&&t++;return t}function Gt(s){return s.length===1?s[0]:s}function Le(s){return Array.isArray(s)?s:[s]}function yn(s){const t=s.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function wo(s){return s.length<=1||s.indexOf("_")===-1?s:s.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let bs={};function zm(s){if(s==null)return null;const e={};return e.className=s.getClassName(),e.config=s.getConfig(),e}function Vu(s){if(!(s==null||typeof s!="object"))if(Array.isArray(s))s.forEach(e=>Vu(e));else{const e=Object.keys(s);for(const t of e){const n=s[t];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?s[t]=n.value:Vu(n))}}}function Ai(s,e={},t={},n="object",o=!1){if(typeof s=="string"){const r=s;let a;if(r in t)a=t[r];else if(r in bs)a=bs[r];else if(a=e[r],a==null)throw new O(`Unknown ${n}: ${s}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const r=s;if(r.className==null||r.config==null)throw new O(`${n}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const a=r.className;let i,l;if(a in t?[i,l]=t[a]:a in bs?[i,l]=bs.className:a in e&&([i,l]=e[a]),i==null)throw new O(`Unknown ${n}: ${a}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const d of Object.keys(bs))c[d]=bs[d];for(const d of Object.keys(t))c[d]=t[d];const p=r.config;p.customObjects=c;const u=Object.assign({},bs);for(const d of Object.keys(t))bs[d]=t[d];Vu(r.config);const h=l(i,r.config,t,o);return bs=Object.assign({},u),h}else{const c=Object.assign({},bs);for(const u of Object.keys(t))bs[u]=t[u];const p=new i(r.config);return bs=Object.assign({},c),p}}}function oA(s,e){return s<e?-1:s>e?1:0}function qi(s,e){return-1*oA(s,e)}function Wn(s){if(s==null)return s;const e=[];for(const t of s)e.indexOf(t)===-1&&e.push(t);return e}function rA(s){if(s==null)throw new O(`Invalid value in obj: ${JSON.stringify(s)}`);for(const e in s)if(s.hasOwnProperty(e))return!1;return!0}function Xo(s,e,t){if(t!=null&&s.indexOf(t)<0)throw new O(`${t} is not a valid ${e}.  Valid values are ${s} or null/undefined.`)}function jm(s,e,t=0,n=1/0){return sn(t>=0),sn(n>=t),Array.isArray(s)&&s.length>=t&&s.length<=n&&s.every(o=>typeof o===e)}function vt(s,e){Array.isArray(s)?($(s.length>0,()=>`${e} is unexpectedly an empty array.`),s.forEach((t,n)=>vt(t,`element ${n+1} of ${e}`))):$(Number.isInteger(s)&&s>0,()=>`Expected ${e} to be a positive integer, but got ${ey(s)}.`)}function ey(s){return s===null?"null":Array.isArray(s)?"["+s.map(e=>ey(e)).join(",")+"]":typeof s=="string"?`"${s}"`:`${s}`}function aA(s,e,t){let n=t!=null?t():Ut(),o;return(...a)=>{const i=t!=null?t():Ut();return i-n<e||(n=i,o=s(...a)),o}}function ty(s){return s==="relu"?"relu":s==="linear"?"linear":s==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let iA=0;function sy(){return iA++}const Ki={};function wp(s=""){return s in Ki||(Ki[s]=0),Ki[s]+=1,s+Ki[s].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const lA=["channelsFirst","channelsLast"],cA=["nearest","bilinear"],pA=["valid","same","causal"],uA=["max","avg"],hA=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sr=new Map;function it(s){Xo(lA,"DataFormat",s)}function dA(s){Xo(cA,"InterpolationFormat",s)}function ys(s){Xo(pA,"PaddingMode",s)}function ny(s){Xo(uA,"PoolMode",s)}const ia=[],tg="/";function No(s,e){ia.push(s);try{const t=e();return ia.pop(),t}catch(t){throw ia.pop(),t}}function mA(){return ia.length===0?"":ia.join(tg)+tg}function oy(s){if(!ay(s))throw new Error("Not a valid tensor name: '"+s+"'");return mA()+s}function ry(s){if(!ay(s))throw new Error("Not a valid tensor name: '"+s+"'");sr.has(s)||sr.set(s,0);const e=sr.get(s);if(sr.set(s,sr.get(s)+1),e>0){const t=`${s}_${e}`;return sr.set(t,1),t}else return s}const fA=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ay(s){return!!s.match(fA)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gA(s){return s===parseInt(s.toString(),10)}function Un(s,e,t){e==null&&(e=0),t==null&&(t=s.length);let n=1;for(let o=e;o<t;++o)n*=s[o];return n}function Cr(s){if(s.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<s.length;t++){const n=s[t];n<e&&(e=n)}return e}function Yn(s){if(s.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<s.length;t++){const n=s[t];n>e&&(e=n)}return e}function Ks(s,e){if(e<s)throw new O(`end (${e}) < begin (${s}) is forbidden.`);const t=[];for(let n=s;n<e;++n)t.push(n);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Gp;function ht(){return Gp==null&&(Gp=Yk().epsilon()),Gp}function Xs(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function cn(s,e){return ne(s,e)}function _i(s,e=-1){const t=s.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),R(s,t)}function xA(s,e){return P(()=>{if(s.shape.length!==2)throw new O(`repeat() expects a rank-2 tensor, but received a rank-${s.shape.length} tensor.`);const t=_i(s,1);return Wu(t,[1,e,1])})}function yA(s){const e=[Un(s.shape)];return R(s,e)}function bA(s){if(s.rank<=1)throw new O(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);const e=[s.shape[0],Un(s.shape,1)];return R(s,e)}function So(s,e,t){return P(()=>{switch(s.rank){case 1:return ip(s,e,t);case 2:return Yd(s,[e,0],[t,s.shape[1]]);case 3:return lp(s,[e,0,0],[t,s.shape[1],s.shape[2]]);case 4:return da(s,[e,0,0,0],[t,s.shape[1],s.shape[2],s.shape[3]]);case 5:return Te(s,[e,0,0,0,0],[t,s.shape[1],s.shape[2],s.shape[3],s.shape[4]]);case 6:return Te(s,[e,0,0,0,0,0],[t,s.shape[1],s.shape[2],s.shape[3],s.shape[4],s.shape[5]]);default:throw new O(`sliceAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}})}function Hp(s,e,t){return P(()=>{switch(s.rank){case 1:return ip(s,e,t);case 2:return Yd(s,[0,e],[s.shape[0],t]);case 3:return lp(s,[0,0,e],[s.shape[0],s.shape[1],t]);case 4:return da(s,[0,0,0,e],[s.shape[0],s.shape[1],s.shape[2],t]);default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function Xi(s,e,t,n){return P(()=>{switch(s.rank){case 1:return ip(s,e,t);case 2:switch(n){case 1:return So(s,e,t);case 2:return Hp(s,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return So(s,e,t);case 2:return lp(s,[0,e,0],[s.shape[0],t,s.shape[2]]);case 3:return Hp(s,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return So(s,e,t);case 2:return da(s,[0,e,0,0],[s.shape[0],t,s.shape[2],s.shape[3]]);case 3:return da(s,[0,0,e,0],[s.shape[0],s.shape[1],t,s.shape[3]]);case 4:return Hp(s,e,t);default:throw new O(`The axis is not within the rank of the tensor ${n}`)}default:throw new O(`sliceAlongLastAxis() received an unsupported tensor rank: ${s.rank}`)}})}function Bm(s,e=-1){let t;return e<0&&(t=s[0].rank,t!==0?e=t:e=0),e===s[0].rank&&(e=-1),pt(s,e)}function sg(s,e){switch(s.rank){case 1:return dx([s,e]);case 2:return mx([s,e],0);case 3:return fx([s,e],0);case 4:return gx([s,e],0);default:throw new O(`concatAlongFirstAxis() received an unsupported tensor rank: ${s.rank}`)}}function Wu(s,e){if(Array.isArray(e)||(e=[e]),s.rank!==e.length)throw new O(`The length of input n (${e.length}) does not match the number of dimensions in input x (${s.rank})`);return Ts(s,e)}function vp(s,e=0,t=1,n,o){return Vd(s,e,t,n,o)}function pn(s,e,t,n){if(s.rank<2||e.rank<2)throw new be(`dot requires both inputs to be rank >= 2 but got x shape = ${s.shape} and y shape = ${e.shape}`);if(e.rank>=3){const o=s.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(o!==r)throw new be(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${s.shape} and  y shape = ${e.shape}`)}if(s.rank===2&&e.rank===2)return zu({a:s,b:e,transposeA:!1,transposeB:!1,bias:n?Uu(s.rank,n,Xs()):null,activation:t});{const o=s.shape.slice(),r=o.pop();s=R(s,[-1,r]);const a=e.shape.slice(),i=a.pop(),l=a.pop(),c=[...a,i],p=Array.from({length:e.rank},(m,g)=>g===0?e.rank-2:g<=e.rank-2?g-1:g);e=R(Ee(e,p),[l,-1]);const u=[...o,...c];return R(zu({a:s,b:e,transposeA:!1,transposeB:!1,bias:n?Uu(s.rank,n,Xs()):null,activation:t}),u)}}function iy(s,e,t){return P(()=>(Array.isArray(e)?e=Bt(e,"int32"):e=ne(e,"int32"),Ni(s,e,t)))}function Di(s){return D(s,s)}function Uu(s,e,t){const n=e.shape;if(e.rank!==1&&e.rank!==s)throw new O(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${s}`);if(s===5){if(t==="channelsFirst")return n.length===1?R(e,[1,n[0],1,1,1]):R(e,[1,n[3],n[0],n[1],n[2]]);if(t==="channelsLast")return n.length===1?R(e,[1,1,1,1,n[0]]):R(e,[1].concat(n))}else if(s===4){if(t==="channelsFirst")return n.length===1?R(e,[1,n[0],1,1]):R(e,[1,n[2],n[0],n[1]]);if(t==="channelsLast")return n.length===1?R(e,[1,1,1,n[0]]):R(e,[1].concat(n))}else if(s===3){if(t==="channelsFirst")return n.length===1?R(e,[1,n[0],1]):R(e,[1,n[1],n[0]]);if(t==="channelsLast")return n.length===1?R(e,[1,1,n[0]]):R(e,[1].concat(n))}else if(s<3)return e;throw new O(`Unsupported input rank by biasAdd: ${e.rank}`)}function Qs(s,e,t){return P(()=>(t==null&&(t=Xs()),it(t),K(s,Uu(s.rank,e,t))))}function wA(s,e=1){if(e!==1)throw new be(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return $i(s)}function vA(s){return P(()=>ue(s,K(ut(s),1)))}function ly(s,e,t,n){return P(()=>Yx(s,e,t,n))}function kA(s){return P(()=>{const e=K(.5,D(.2,s));return os(e,0,1)})}function Ri(s,e,t=!1){return t?s():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const $A=["fanIn","fanOut","fanAvg"],IA=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function CA(s){Xo($A,"FanMode",s)}function NA(s){Xo(IA,"Distribution",s)}class Ls extends jr{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class cy extends Ls{apply(e,t){return ct(e,t)}}cy.className="Zeros";X(cy);class Mm extends Ls{apply(e,t){return ts(e,t)}}Mm.className="Ones";X(Mm);class py extends Ls{constructor(e){if(super(),typeof e!="object")throw new O(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new O(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return P(()=>D(me(this.value),ts(e,t)))}getConfig(){return{value:this.value}}}py.className="Constant";X(py);class uy extends Ls{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ho(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}uy.className="RandomUniform";X(uy);class hy extends Ls{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new be(`randomNormal does not support dType ${t}.`);return vp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}hy.className="RandomNormal";X(hy);class dy extends Ls{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new be(`truncatedNormal does not support dType ${t}.`);return em(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}dy.className="TruncatedNormal";X(dy);class my extends Ls{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return P(()=>{if(e.length!==2||e[0]!==e[1])throw new O("Identity matrix initializer can only be used for 2D square matrices.");return D(this.gain,Pd(e[0]))})}getConfig(){return{gain:this.gain}}}my.className="Identity";X(my);function SA(s,e="channelsLast"){let t,n;if(it(e),s.length===2)t=s[0],n=s[1];else if([3,4,5].indexOf(s.length)!==-1){if(e==="channelsFirst"){const o=Un(s,2);t=s[1]*o,n=s[0]*o}else if(e==="channelsLast"){const o=Un(s,0,s.length-2);t=s[s.length-2]*o,n=s[s.length-1]*o}}else{const o=Un(s);t=Math.sqrt(o),n=Math.sqrt(o)}return[t,n]}class is extends Ls{constructor(e){if(super(),e.scale<0)throw new O(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,CA(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,NA(this.distribution),this.seed=e.seed}apply(e,t){const n=SA(e),o=n[0],r=n[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(o+r)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new be(`${this.getClassName()} does not support dType ${t}.`);return em(e,0,i,t,this.seed)}else{const i=Math.sqrt(3*a);return Ho(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}is.className="VarianceScaling";X(is);class Vm extends is{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return is.className}}Vm.className="GlorotUniform";X(Vm);class Wm extends is{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return is.className}}Wm.className="GlorotNormal";X(Wm);class Um extends is{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return is.className}}Um.className="HeNormal";X(Um);class Gm extends is{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return is.className}}Gm.className="HeUniform";X(Gm);class Hm extends is{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return is.className}}Hm.className="LeCunNormal";X(Hm);class qm extends is{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return is.className}}qm.className="LeCunUniform";X(qm);class fy extends Ls{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return P(()=>{if(e.length<2)throw new be("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const n=W(e.slice(0,-1)),o=e[e.length-1],r=n*o;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const a=[Math.max(o,n),Math.min(o,n)],i=vp(a,0,1,t,this.seed),l=r1.qr(i,!1);let c=l[0];const u=l[1].flatten().stridedSlice([0],[Math.min(o,n)*Math.min(o,n)],[Math.min(o,n)+1]);return c=D(c,u.sign()),n<o&&(c=c.transpose()),D(me(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}fy.className="Orthogonal";X(fy);const ng={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function og(s,e={}){return Ai(s,Is.getMap().classNameMap,e,"initializer")}function Qe(s){return zm(s)}function Xe(s){if(typeof s=="string"){const e=s in ng?ng[s]:s;if(e==="GlorotNormal")return new Wm;if(e==="GlorotUniform")return new Vm;if(e==="HeNormal")return new Um;if(e==="HeUniform")return new Gm;if(e==="LeCunNormal")return new Hm;if(e==="LeCunUniform")return new qm;{const t={};return t.className=e,t.config={},og(t)}}else return s instanceof Ls?s:og(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gu(s){return Array.isArray(s)&&Array.isArray(s[0])}function $l(s){return s.length===0?[]:Array.isArray(s[0])?s:[s]}function xe(s){let e;if(Array.isArray(s)){if(s.length!==1)throw new O(`Expected Tensor length to be 1; got ${s.length}`);e=s[0]}else e=s;return e}function De(s){if(Array.isArray(s)&&Array.isArray(s[0])){if(s.length===1)return s=s,s[0];throw new O(`Expected exactly 1 Shape; got ${s.length}`)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Il(s){let e=0;for(const t of s)t.shape.length===0?e+=1:e+=t.shape.reduce((n,o)=>n*o);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const rg="Variable";class TA{constructor(e,t="float32",n=rg,o=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=sy(),n=n??rg,this.originalName=oy(n),this.name=ry(this.originalName),this.trainable_=o,this.constraint=r,this.val=Kx(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),EA(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function EA(s,e){if(s.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(s.shape)+" vs. "+JSON.stringify(e.shape))}function Hu(s){return s.map(e=>e.read())}function Km(s){s.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class dt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class hn{constructor(e,t,n,o,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=o,this.callArgs=r,this.outputTensorIndex=i,this.id=sy(),a!=null&&(this.originalName=oy(a),this.name=ry(this.originalName)),this.rank=t.length}}let AA=0;class kp{constructor(e,t){this.callArgs=t,this.id=AA++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let _A=0;class Ce extends jr{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_A++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const n=this.getClassName();t=yn(n)+"_"+wp(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Es(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new O(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Gt(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Gt(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new tn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new tn(`Layer ${this.name} is not connected, no input to return.`);return Gt(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new tn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new tn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Gt(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Le(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const n=Le(this.inputSpec);if(t.length!==n.length)throw new O(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let o=0;o<t.length;o++){const r=t[o],a=n[o];if(a==null)continue;const i=r.rank;if(a.ndim!=null&&i!==a.ndim)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(a.maxNDim!=null&&i>a.maxNDim)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(a.minNDim!=null&&i<a.minNDim)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(a.dtype!=null&&r.dtype!==a.dtype)throw new O(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const l=r.shape;for(const c in a.axes){const p=Number(c),u=a.axes[c],h=p>=0?l[p]:l[l.length+p];if(u!=null&&[u,null].indexOf(h)===-1)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected axis ${p} of input shape to have value ${u} but got shape ${l}.`)}}if(a.shape!=null)for(let l=0;l<a.shape.length;++l){const c=a.shape[l],p=r.shape[l];if(c!=null&&p!=null&&c!==p)throw new O(`Input ${o} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Le(e),o=OA(e),r=FA(e);if(o===r)throw new O("Arguments to apply() must be all SymbolicTensors or all Tensors");return No(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const i of Le(e))a.push(i.shape);this.build(Gt(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const i=Le(a),l=[];for(let c of i)n.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(a=Gt(l),this.activityRegularizer!=null)throw new be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=DA(e),i=this.computeOutputShape(a);let l;const c=RA(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?l=i.map((p,u)=>new hn(c,p,this,Le(e),t,this.name,u)):l=new hn(c,i,this,Le(e),t,this.name),this.addInboundNode(e,l,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new be("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&e[o]!=null&&e[o]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new tn(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new tn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Es(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Il(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Hu(e?this.trainableWeights:this.weights)}setWeights(e){P(()=>{const t=this.weights;if(t.length!==e.length)throw new O(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const n=[],o=Hu(t);for(let r=0;r<o.length;++r){const a=o[r],i=t[r],l=e[r];if(!Se(a.shape,l.shape))throw new O(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);n.push([i,l])}Km(n)})}addWeight(e,t,n,o,r,a,i,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new O(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=l!=null?l():Xe("zeros"));const c=o.apply(t,n),p=new TA(c,n,e,a,i);return c.dispose(),r!=null&&this.addLoss(()=>r.apply(p.read())),a==null&&(a=!0),a?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Le(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const o=this.computeMask(e,n);if(t instanceof Array&&o instanceof Array){if(t.length!==o.length)throw new Error(`${this.name} outputs ${t.length} tensors but ${o.length} masks for those tensors`);for(let r=0;r<t.length;r++)t[r].kerasMask=o[r]}else{if(o instanceof Array)throw new Error(`{this.name} outputs a single tensor but ${o.length} masks`);if(t instanceof Array)throw new Error(`{this.name} outputs ${t.length} tensors but only one mask`);t.kerasMask=o}}addInboundNode(e,t,n,o,r,a,i=null){const l=Le(e);t=Le(t),n=Le(n),o=Le(o),r=$l(r),a=$l(a);const c=[],p=[],u=[];for(const h of l)c.push(h.sourceLayer),p.push(h.nodeIndex),u.push(h.tensorIndex);new kp({outboundLayer:this,inboundLayers:c,nodeIndices:p,tensorIndices:u,inputTensors:l,outputTensors:t,inputMasks:n,outputMasks:o,inputShapes:r,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function DA(s){s=Le(s);const e=[];for(const t of s)e.push(t.shape);return Gt(e)}function RA(s){return"float32"}function gy(s,e,t){if((e==null||t!=null&&t>0)&&(e=s.sourceLayer,t=s.nodeIndex),e.inboundNodes.length===0)return[s];{const n=e.inboundNodes[t];if(n.inboundLayers.length===0)return n.inputTensors;{const o=[];for(let r=0;r<n.inboundLayers.length;r++){const a=n.inputTensors[r],i=n.inboundLayers[r],l=n.nodeIndices[r],c=gy(a,i,l);for(const p of c)o.indexOf(p)===-1&&o.push(p)}return o}}}function OA(s){let e=!0;for(const t of Le(s))if(!(t instanceof hn)){e=!1;break}return e}function FA(s){let e=!0;for(const t of Le(s))if(t instanceof hn){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Oi extends Ce{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:wp("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new O("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new O("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new O("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const o=new hn(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new kp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new O(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Oi.className="InputLayer";X(Oi);function PA(s){if(s.batchShape==null&&s.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(s.batchShape!=null&&s.shape!=null)throw new O("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=s.batchShape;s.shape!=null&&e==null&&(e=[null].concat(s.shape));let t=s.dtype;return t==null&&(t="float32"),new Oi({batchInputShape:e,name:s.name,dtype:t,sparse:s.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function LA(s,e){if(s.dtype==null||s.dtype===e.dtype)return e;try{return ne(e,s.dtype)}catch{throw new O(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}class zn{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof zn)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=LA(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new O(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof hn){if(this.id2Value[e.id]==null)throw new O(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new O(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&we(this.id2Mask)}}const Cl=new Q1,Nl=new Q1;function zA(s){Cl!=null&&Cl.setMaxEntries(s),Nl!=null&&Nl.setMaxEntries(s)}function sa(s,e,t,n){const o=t==null?!1:t.training,r=Array.isArray(s),a=r?s:[s],i=a.map(m=>m.name),l=[],c=e.names();for(const m of i)c.indexOf(m)!==-1?l.push(e.getValue(m)):l.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);const p=i.join(",")+"|"+e.names().sort().join(",");let u=Cl.get(p),h;if(u==null){const m=jA(a,e);u=m.sorted,h=m.recipientCounts,Cl.put(p,u),Nl.put(p,h)}h={},o||Object.assign(h,Nl.get(p));const d=new zn(e);for(let m=0;m<u.length;++m){if(n!=null){const T=Tu().numTensors;T>n.maxNumTensors&&(n.maxNumTensors=T),T<n.minNumTensors&&(n.minNumTensors=T)}const g=u[m],f=g.sourceLayer;if(f instanceof Oi)continue;const x=[],y=[],w=[];let b=!1;for(const T of g.inputs){const E=d.getValue(T),F=d.getMask(T);x.push(E),y.push(F),F!=null&&(b=!0),o||(h[T.name]--,h[T.name]===0&&!e.hasKey(T)&&i.indexOf(T.name)===-1&&!E.isDisposed&&T.sourceLayer.stateful!==!0&&w.push(E))}b&&(t=t||{},t.mask=y[0]);const k=Le(f.apply(x,t));let I=null;f.supportsMasking&&(I=f.computeMask(x,y));const N=MA(g),S=Array.isArray(N)?N:[N];for(let T=0;T<S.length;++T){d.hasKey(S[T])||d.add(S[T],k[T],Array.isArray(I)?I[0]:I);const E=i.indexOf(S[T].name);E!==-1&&(l[E]=k[T])}o||we(w)}return d.disposeMasks(),r?l:l[0]}function jA(s,e){$(s!=null&&s.length>0,()=>"Expected at least one fetch, got none");let t=[],n={};if(s.length===1){const o=ag(s[0],e);t=o.sorted,n=o.recipientMap}else{const o=new Set;for(const r of s){const{sorted:a,recipientMap:i}=ag(r,e);for(const l of a)o.has(l.name)||(t.push(l),o.add(l.name));for(const l in i)n[l]==null&&(n[l]=new Set),i[l].forEach(c=>n[l].add(c))}}return{sorted:t,recipientCounts:BA(n)}}function BA(s){const e={};for(const t in s)e[t]=s[t].size;return e}function ag(s,e){const t=new Set,n=[],o={};for(const i of e.names())t.add(i);const r=[],a=[];for(r.push(s);r.length>0;){const i=r[r.length-1];if(t.has(i.name)){r.pop();continue}const l=a[a.length-1]===r.length-1;if(i.inputs.length===0||l)r.pop(),n.push(i),t.add(i.name),l&&a.pop();else{a.push(r.length-1);for(const c of i.inputs)o[c.name]==null&&(o[c.name]=new Set),o[c.name].add(i.name),!t.has(c.name)&&r.push(c)}}return{sorted:n,recipientMap:o}}function MA(s){let e;if(s.sourceLayer.inboundNodes.length===1)e=s.sourceLayer.output;else{let t=null;for(let n=0;n<s.sourceLayer.inboundNodes.length;++n)for(const o of s.sourceLayer.inboundNodes[n].outputTensors)if(o.id===s.id){t=n;break}e=s.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA=L();VA.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,zA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xm(s,e){return P(()=>Ot(le(D(s,s),e,!0)))}class Fi extends jr{getConfig(){return{}}}class xy extends Fi{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return P(()=>{const t=Xm(e,this.axis),n=os(t,0,this.maxValue);return D(e,ue(n,K(ht(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}xy.className="MaxNorm";X(xy);class yy extends Fi{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return P(()=>ue(e,K(ht(),Xm(e,this.axis))))}getConfig(){return{axis:this.axis}}}yy.className="UnitNorm";X(yy);class by extends Fi{apply(e){return mn(e)}}by.className="NonNeg";X(by);class wy extends Fi{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return P(()=>{const t=Xm(e,this.axis),n=K(D(this.rate,os(t,this.minValue,this.maxValue)),D(1-this.rate,t));return D(e,ue(n,K(ht(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}wy.className="MinMaxNorm";X(wy);const ig={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ft(s){return zm(s)}function lg(s,e={}){return Ai(s,Is.getMap().classNameMap,e,"constraint")}function gt(s){if(s==null)return null;if(typeof s=="string"){const t={className:s in ig?ig[s]:s,config:{}};return lg(t)}else return s instanceof Fi?s:lg(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function go(s){if(s==null)return;const e=[],t=[],n=[];for(const o in s){const r=s[o];if(typeof r!="number"){const a=r;e.push(a.data()),t.push(o),n.push(a)}}if(e.length>0){const o=await Promise.all(e);for(let r=0;r<o.length;++r)s[t[r]]=o[r][0];we(n)}}function vy(s){if(s!=null)for(const e in s){const t=s[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var cg;(function(s){s[s.SILENT=0]="SILENT",s[s.VERBOSE=1]="VERBOSE"})(cg||(cg={}));const WA=125;class fa{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class UA{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class GA extends fa{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const n=t.size==null?0:t.size;this.seen+=n;for(const o in t){const r=t[o];if(typeof r=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+r*n;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;const i=P(()=>K(this.totals[o],D(r,n)));this.totals[o]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:P(()=>{const o=D(ue(1,this.seen),this.totals[n]);t[n]=o,this.totals[n].dispose(),wt(t[n])}))}}class HA extends fa{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const l=a[i];e.push(l.data()),t.push(r),n.push(i)}}const o=await Promise.all(e);for(let r=0;r<o.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=o[r][0]}}class qA extends fa{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||N1,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=WA),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");lu(this.yieldEvery)&&(this.maybeWait=aA(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const o=[];this.yield!=null&&(await go(n),o.push(this.yield(e,t,n))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await go(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];this.epochEnd!=null&&(await go(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await go(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];this.batchEnd!=null&&(await go(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):lu(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await go(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await go(e),await this.trainEnd(e))}}function ky(s,e){return s==null&&(s={}),s instanceof fa?[s]:Array.isArray(s)&&s[0]instanceof fa?s:Le(s).map(n=>new qA(n,e))}class ks{constructor(){}static registerCallbackConstructor(e,t){$(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),ks.checkForDuplicate(t),ks.constructors[e]==null&&(ks.constructors[e]=[]),ks.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ks.constructors)ks.constructors[+t].forEach(o=>{if(o===e)throw new O("Duplicate callback constructor.")})}static clear(){ks.constructors={}}static createCallbacks(e){const t=[];for(const n in ks.constructors){const o=+n;e>=o&&t.push(...ks.constructors[o])}return t.map(n=>new n)}}ks.constructors={};function $y(s,e,t,n,o,r,a,i,l){const c=new HA,p=[new GA,...ks.createCallbacks(e)];s!=null&&p.push(...s),p.push(c);const u=new UA(p);return u.setParams({epochs:t,initialEpoch:n,samples:o,steps:r,batchSize:a,verbose:e,doValidation:i,metrics:l}),{callbackList:u,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $n(s,e={},t=!1){return Ai(s,Is.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sl(s,e){return P(()=>{s.dtype!=="float32"&&(s=ne(s,"float32"));const t=le(Di(s),e,!0),n=Fr(t.shape,ht()),o=Ot(En(t,n));return ue(s,o)})}function $p(s,e){return P(()=>st(Di(ie(e,s)),-1))}function Ym(s,e){return P(()=>st(ut(ie(e,s)),-1))}function Zm(s,e){return P(()=>{const t=ie(s,e),n=os(ut(s),ht(),Number.MAX_VALUE),o=ut(ue(t,n));return D(100,st(o,-1))})}function KA(s,e){return P(()=>{const t=os(e,ht(),Number.MAX_VALUE),n=fs(K(1,t)),o=os(s,ht(),Number.MAX_VALUE),r=fs(K(1,o));return st(Di(ie(n,r)),-1)})}function XA(s,e){return P(()=>{const t=En(0,ie(1,D(s,e)));return st(Di(t),-1)})}function YA(s,e){return P(()=>{const t=En(0,ie(1,D(s,e)));return st(t,-1)})}function ZA(s,e){return P(()=>{const t=le(D(s,e),-1),n=Ds(D(ie(1,s),e),-1);return En(0,K(1,ie(n,t)))})}function JA(s,e){return P(()=>{const t=Math.log(2),n=ie(e,s),o=ie(K(n,Pr(D(-2,n))),t);return st(o,-1)})}function ga(s,e,t=!1){return P(()=>{if(t)e=cp(e);else{const n=le(e,e.shape.length-1,!0);e=ue(e,n)}return e=os(e,ht(),1-ht()),He(le(D(ne(s,"float32"),fs(e)),e.shape.length-1))})}function Tl(s,e,t=!1){return P(()=>{const n=ne(Ci(yA(s)),"int32");e=os(e,ht(),1-ht());const o=e.shape,r=R(Bd(n,o[o.length-1]),o);return ga(r,e,t)})}function QA(s,e){if(!Se(s.shape,e.shape))throw new O(`logits and labels must have the same shape, but got shapes ${JSON.stringify(s.shape)} and ${JSON.stringify(e.shape)}`);return P(()=>{const t=mn(e),n=He(ut(e));return K(ie(t,D(e,s)),Qc(rs(n)))})}function Ip(s,e){return P(()=>{let t;return t=os(e,ht(),1-ht()),t=fs(ue(t,ie(1,t))),st(QA(s,t),-1)})}function e6(s,e){return P(()=>{const t=os(s,ht(),1),n=os(e,ht(),1);return le(D(s,fs(ue(t,n))),-1)})}function t6(s,e){return P(()=>{const t=fs(K(ht(),e));return st(ie(e,D(s,t)),-1)})}function Iy(s,e){return P(()=>{const t=Sl(s,-1),n=Sl(e,-1),o=D(t,n);return He(le(o,-1))})}const El={meanSquaredError:$p,meanAbsoluteError:Ym,meanAbsolutePercentageError:Zm,meanSquaredLogarithmicError:KA,squaredHinge:XA,hinge:YA,categoricalHinge:ZA,logcosh:JA,categoricalCrossentropy:ga,sparseCategoricalCrossentropy:Tl,binaryCrossentropy:Ip,kullbackLeiblerDivergence:e6,poisson:t6,cosineProximity:Iy};function qp(s){if(typeof s=="string"){if(s in El)return El[s];let e=`Unknown loss ${s}`;throw s.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${s}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new O(e)}else return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cy(s,e){return P(()=>{const t=D(.5,gs(e)),n=cn(us(e,t),s.dtype);return st(qs(s,n),-1)})}function Ny(s,e){return P(()=>cn(qs(wr(s,-1),wr(e,-1)),"float32"))}function s6(s,e){return P(()=>ne(le(un(qs(s,1),qs(e,1))),"float32"))}function n6(s,e){return P(()=>ne(le(un(qs(s,0),qs(e,1))),"float32"))}function o6(s,e){return P(()=>{const t=s6(s,e),n=n6(s,e),o=K(t,n);return ne(Dt(us(o,0),ue(t,o),0),"float32")})}function r6(s,e){return Ip(s,e)}function a6(s,e){return s.rank===e.rank&&(s=qo(s,[s.rank-1])),e=wr(e,-1),e.dtype!==s.dtype&&(e=ne(e,s.dtype)),ne(qs(s,e),"float32")}const i6=$p,l6=$p,c6=Ym,p6=Ym,u6=Zm,h6=Zm,Sy=ga,d6=Iy,Ty=Tl,Al={binaryAccuracy:Cy,categoricalAccuracy:Ny,precision:o6,categoricalCrossentropy:Sy,sparseCategoricalCrossentropy:Ty,mse:i6,MSE:l6,mae:c6,MAE:p6,mape:u6,MAPE:h6,cosine:d6};function m6(s){if(typeof s=="string"&&s in Al)return Al[s];if(typeof s!="string"&&s!=null)return s;throw new O(`Unknown metric ${s}`)}function Yi(s){if(sn(s!==null,`Unknown LossOrMetricFn ${s}`),typeof s=="string")return s;{let e;for(const t of Object.keys(El))if(El[t]===s){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(Al))if(Al[t]===s){e=t;break}return e!==void 0?e:s.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function f6(s){const e={Adagrad:()=>tr.adagrad(.01),Adadelta:()=>tr.adadelta(1,.95,ht()),Adam:()=>tr.adam(.001,.9,.999,ht()),Adamax:()=>tr.adamax(.002,.9,.999,ht(),0),RMSProp:()=>tr.rmsprop(.001,.9,0,ht()),SGD:()=>tr.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,s in e)return e[s]();throw new O(`Unknown Optimizer ${s}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const pg=1*1024*1024;function ug(s,e,t=!1){if(s==null||typeof s!="object"||Object.getPrototypeOf(s)!==Object.prototype||!qu(s))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const n=JSON.stringify(s);n.length>pg&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${pg}.`)}}function qu(s){if(s===null)return!0;if(typeof s=="object")if(Object.getPrototypeOf(s)===Object.prototype){const e=Object.keys(s);for(const t of e)if(typeof t!="string"||!qu(s[t]))return!1;return!0}else if(Array.isArray(s)){for(const e of s)if(!qu(e))return!1;return!0}else return!1;else{const e=typeof s;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function g6(s,e,t,n=console.log){const o=y6(s),r=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(p=>Math.floor(e*p)));let a;if(!o){r.push("Receives inputs"),a=[];for(const p in s.nodesByDepth)a.push(...s.nodesByDepth[p])}n("_".repeat(e)),_l(r,t,n),n("=".repeat(e));const i=s.layers;for(let p=0;p<i.length;++p)o?b6(i[p],t,n):w6(i[p],t,a,n),n((p===i.length-1?"=":"_").repeat(e));s.checkTrainableWeightsConsistency();const l=x6(s),c=Il(s.nonTrainableWeights);n(`Total params: ${l+c}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${c}`),n("_".repeat(e))}function x6(s){let e;return s.collectedTrainableWeights!=null?e=Il(s.collectedTrainableWeights):e=Il(s.trainableWeights),e}function y6(s){let e=!0;const t=[],n=[];for(const o in s.nodesByDepth)t.push(s.nodesByDepth[o]);for(const o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}n.push(...o)}if(e)for(const o of s.layers){let r=!1;for(const a of o.inboundNodes)if(n.indexOf(a)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function _l(s,e,t=console.log){let n="";for(let o=0;o<s.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=s[o],n=n.slice(0,e[o]),n+=" ".repeat(e[o]-n.length);t(n)}function b6(s,e,t){let n,o;try{o=s.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(s.outputShape)}catch{n="multiple"}const r=s.name,a=s.getClassName(),i=[`${r} (${a})`,o,n,s.countParams().toString()];_l(i,e,t)}function w6(s,e,t,n){let o,r;try{r=s.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{r="multiple"}try{o=JSON.stringify(s.outputShape)}catch{o="multiple"}const a=[];for(const u of s.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(u)===-1))for(let h=0;h<u.inboundLayers.length;++h){const d=u.inboundLayers[h].name,m=u.nodeIndices[h],g=u.tensorIndices[h];a.push(`${d}[${m}][${g}]`)}const i=s.name,l=s.getClassName(),c=a.length===0?"":a[0],p=[`${i} (${l})`,r,o,s.countParams().toString(),c];_l(p,e,n);for(let u=1;u<a.length;++u)_l(["","","","",a[u]],e,n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ey(s,e,t){return(s==="inboundNodes"||s==="outputLayers"||s==="inputLayers")&&e===0&&typeof t=="string"}function Ku(s,e){if(s===null)return null;if(typeof s=="string")return wo(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const t=[],n=s.length;for(let o=0;o<n;++o){const r=s[o];Ey(e,o,r)?t.push(r):t.push(Ku(r,e))}return t}else{const t={};for(const n of Object.keys(s)){const o=s[n];if(n==="name"&&typeof o=="string")t[n]=o;else{const r=wo(n);t[r]=Ku(o,r)}}return t}}function Xu(s,e){if(s==null)return null;if(typeof s=="string")return yn(s);if(typeof s=="number"||typeof s=="boolean")return s;if(s instanceof Array){const t=[],n=s.length;for(let o=0;o<n;++o){const r=s[o];Ey(e,o,r)?t.push(r):t.push(Xu(r,e))}return t}else{const t={};for(const n of Object.keys(s)){const o=s[n],r=yn(n);(n==="name"||n==="className")&&typeof o=="string"?t[r]=o:t[r]=Xu(o,n)}return t}}/** @license See the LICENSE file. */const Ay="4.11.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const v6=s=>{const e=Object.keys(s);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class Ms extends Ce{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const y=this.getClassName().toLowerCase();this.name=wp(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Wn(this.inputs).length!==this.inputs.length)throw new O(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Wn(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const w=y.sourceLayer,b=y.nodeIndex,k=y.tensorIndex;this.outputLayers.push(w),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(k)}for(const y of this.inputs){const w=y.sourceLayer,b=y.nodeIndex,k=y.tensorIndex;sn(b===0,"input layer has >1 nodes"),sn(k===0,"input layer has >1 tensors"),this.inputLayers.push(w),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const w=this.inputLayers[y];if(!(w instanceof Oi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${w.getClassName()}.`);this.inputNames.push(w.name),this.feedInputShapes.push(w.batchInputShape),this.feedInputNames.push(w.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);const t={},n={},o={},r={},a={},i=[],l=(y,w,b,k,I,N)=>{(k==null||I==null||N==null)&&(k=y.sourceLayer,I=y.nodeIndex,N=y.tensorIndex);const S=k.inboundNodes[I];if(b.indexOf(S)!==-1)throw new Es(`The tensor ${y.name} at layer "${k.name}" is part of a cycle.`);if(w.indexOf(S)!==-1)return;this.containerNodes.add(Ms.nodeKey(k,I)),k.id in a||(a[k.id]=Object.keys(a).length),b.indexOf(S)===-1&&b.push(S);const T=S.inboundLayers.length;for(let E=0;E<T;E++){const F=S.inputTensors[E],z=S.inboundLayers[E],j=S.nodeIndices[E],B=S.tensorIndices[E];l(F,w,b,z,j,B)}for(w.push(S);b.indexOf(S)>=0;)b.splice(b.indexOf(S),1);i.push(S)},c=[],p=[];for(const y of this.outputs)l(y,c,p);const u=i.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let w=t[y.id];const b=o[y.outboundLayer.id]==null?0:o[y.outboundLayer.id];w=Math.max(w,b),o[y.outboundLayer.id]=w,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=w;for(let k=0;k<y.inboundLayers.length;k++){const I=y.inboundLayers[k],N=y.nodeIndices[k],S=I.inboundNodes[N],T=t[S.id]==null?0:t[S.id];t[S.id]=Math.max(w+1,T),n[S.id]=S}}const h={};for(const y in t){const w=t[y];w in h||(h[w]=[]),h[w].push(n[y])}const d={};for(const y in o){const w=o[y];w in d||(d[w]=[]),d[w].push(r[y])}let m=Object.keys(d).map(y=>parseInt(y,10)).sort(qi);this.layers=[];for(const y of m){const w=d[y];w.sort((b,k)=>{const I=a[b.id],N=a[k.id];return I<N?-1:I>N?1:0});for(const b of w)b instanceof Ms&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=d,m=Object.keys(h).map(y=>parseInt(y,10)).sort(qi);const g=this.inputs.slice(),f=[];for(const y of m)for(const w of h[y]){const b=w.outboundLayer;if(b!=null){for(const k of w.inputTensors)if(g.indexOf(k)===-1)throw new Es(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${b.name}". The following previous layers were accessed without issue: ${f}`);for(const k of w.outputTensors)g.push(k);f.push(b.name)}}this.nodesByDepth=h;const x=this.layers.map(y=>y.name);for(const y of x){const w=x.filter(b=>b===y).length;if(w!==1)throw new Es(`The name "${y}" is used ${w} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new kp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new O("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let o=0;const r=v6(e);r&&this.parseWeights(e);for(const i of this.layers)for(const[l,c]of i.weights.entries()){const p=r?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(n[p]!=null)throw new O(`Duplicate weight name: ${p}`);n[p]=c,o++}const a=[];for(const i in e){let l=i;if(n[i]==null){const c=i.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(n[l]!=null)a.push([n[l],e[i]]);else if(t)throw new O(`Provided weight data has no target variable: ${i}`);delete n[l]}if(t){const i=[];for(const l in n)i.push(l);if(i.length>0)throw new O(`${i.length} of ${o} weights are not set: ${i}`)}Km(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),o=["vars","layer_checkpoint_dependencies"],r=n.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!o.includes(a)).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Ay}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Xu(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return P(()=>{e=Le(e);const n=new zn;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],e[o]);return sa(this.outputs,n,t)})}computeMask(e,t){return P(()=>{e=Le(e);let n;return t==null?n=Po(null,e.length):n=Le(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=$l(e);if(t.length!==this.inputLayers.length)throw new O(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const l=this.inputLayers[i],c=t[i],p=l.name+"_0_0";n[p]=c}const o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(qi);if(o.length>1)for(const i of o){const l=this.nodesByDepth[i];for(const c of l){const p=c.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(p.id)!==-1)continue;const u=[];for(let g=0;g<c.inboundLayers.length;g++){const f=c.inboundLayers[g],x=c.nodeIndices[g],y=c.tensorIndices[g],w=`${f.name}_${x}_${y}`,b=n[w];u.push(b)}const h=p.computeOutputShape(Gt(u)),d=$l(h),m=p.inboundNodes.indexOf(c);for(let g=0;g<d.length;g++){const f=`${p.name}_${m}_${g}`;n[f]=d[g]}}}const r=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],c=this.outputLayersNodeIndices[i],p=this.outputLayersTensorIndices[i],u=`${l.name}_${c}_${p}`;a.push(u)}for(let i=0;i<a.length;i++){const l=a[i];sn(l in n),r.push(n[l])}return Gt(r)}runInternalGraph(e,t){t==null&&(t=Po(null,e.length));const n={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],p=e[l],u=t[l];n[c.id]=[p,u]}const o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(qi);for(const l of o){const c=this.nodesByDepth[l];for(const p of c){const u=p.outboundLayer,h=p.inputTensors,d=p.outputTensors,m=new Array;for(const g of h)g.id in n&&m.push(n[g.id]);if(m.length===h.length){let g={},f,x,y,w;if(p.callArgs!=null&&(g=p.callArgs),m.length===1){const[b,k]=m[0];g.mask==null&&(g.mask=k),y=Le(u.call(b,g)),w=Le(u.computeMask(b,k)),f=[b],x=[k]}else f=m.map(b=>b[0]),x=m.map(b=>b[1]),g.mask==null&&(g.mask=x),y=Le(u.call(f,g)),w=Le(u.computeMask(f,x));if(u.activityRegularizer)throw new be("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<d.length;++b){const k=d[b],I=y[b],N=w[b];n[k.id]=[I,N]}}}}const r=[],a=[],i=[];for(const l of this.outputs){sn(l.id in n,`Could not compute output ${l.name} : ${l.id}`);const[c,p]=n[l.id];i.push(c.shape),r.push(c),a.push(p)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const o of this.layers){n=o instanceof Ms?1:0;for(let r=0;r<o.inboundNodes.length;r++){const a=Ms.nodeKey(o,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new O("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new O(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new O(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return P(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const o=Ms.nodeKey(t,n);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const a of this.layers){const i=a.getClassName(),l=a.getConfig(),c=[];for(let u=0;u<a.inboundNodes.length;u++){const h=a.inboundNodes[u],d=Ms.nodeKey(a,u);let m={};if(this.containerNodes.has(d)){if(h.callArgs)try{JSON.stringify(h.callArgs),m=h.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),m={}}if(h.inboundLayers.length>0){const g=[];for(let f=0;f<h.inboundLayers.length;f++){const x=h.inboundLayers[f],y=h.nodeIndices[f],w=h.tensorIndices[f],b=Ms.nodeKey(x,y);let k=t[b];k==null&&(k=0),g.push([x.name,k,w,m])}c.push(g)}}}const p={};p.name=a.name,p.className=i,p.config=l,p.inboundNodes=c,n.push(p)}e.layers=n;const o=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],l=this.inputLayersNodeIndices[a],c=Ms.nodeKey(i,l);if(!this.containerNodes.has(c))continue;let p=t[c];p==null&&(p=0);const u=this.inputLayersTensorIndices[a];o.push([i.name,p,u])}e.inputLayers=o;const r=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],l=this.outputLayersNodeIndices[a],c=Ms.nodeKey(i,l);if(!this.containerNodes.has(c))continue;let p=t[c];p==null&&(p=0);const u=this.outputLayersTensorIndices[a];r.push([i.name,p,u])}return e.outputLayers=r,e}static fromConfig(e,t,n={},o=!1){const r={},a={};function i(f,x){f.name in a?a[f.name].push(x):a[f.name]=[x]}function l(f,x){const y=[];let w;for(const b of x){const k=b[0],I=b[1],N=b[2];if(w=b[3]==null?{}:b[3],!(k in r)){i(f,x);return}const S=r[k];if(S.inboundNodes.length<=I){i(f,x);return}const T=S.inboundNodes[I];y.push(T.outputTensors[N])}y.length>0&&f.apply(Gt(y),w)}function c(f){const x=f.name,y=$n(f,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(o),r[x]=y,f.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new O(`Corrupted configuration, expected array for nodeData: ${b}`);i(y,b)})}const p=t.name,u=t.layers;for(const f of u)c(f);for(;!rA(a);)for(const f of u){const x=r[f.name];if(x.name in a){const y=a[x.name];delete a[x.name];for(const w of y)l(x,w)}}const h=[],d=[],m=t.inputLayers;for(const f of m){const x=f[0],y=f[1],w=f[2];sn(x in r);const k=r[x].inboundNodes[y].outputTensors;h.push(k[w])}const g=t.outputLayers;for(const f of g){const x=f[0],y=f[1],w=f[2];sn(x in r);const k=r[x].inboundNodes[y].outputTensors;d.push(k[w])}return new e({inputs:h,outputs:d,name:p})}get stateful(){if(this._stateful)throw new O("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){P(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function k6(s,e,t){const n=e.length;if(s==null||Array.isArray(s)&&s.length===0)return e.map(o=>null);if(n===1)return Array.isArray(s)&&s.length===1?s:typeof s=="object"&&e[0]in s?[s[e[0]]]:[s];if(Array.isArray(s)){if(s.length!==n)throw new Error(`Provided ${t} is an array of ${s.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return s}else if(typeof s=="object"&&Object.keys(s).length>0&&typeof s[Object.keys(s)[0]]=="object"){const o=[];return e.forEach(r=>{r in s?o.push(s[r]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${t} must be either an array with ${n} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(s)}`)}function _y(s,e){return k6(s,e,"classWeight")}async function Dy(s,e,t,n){if(e!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){const o=P(()=>{if(s.shape.length===1)return kn(s);if(s.shape.length===2){if(s.shape[1]>1)return wr(s,1);if(s.shape[1]===1)return R(s,[s.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${s.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${s.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await o.data());we(o);const a=[];return r.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Bt(a,"float32")}else return null}function $6(s,e){return D(s,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const I6=32;function Ry(s,e){let t,n;const o=e;t=o.xs,n=o.ys,$(t!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=hg("input",s.inputNames,t),a=hg("output",s.outputNames,n),i=r[0].shape[0];$(r.length===s.inputs.length,()=>`LayersModel has ${s.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(s.inputNames)})`),$(a.length===s.outputs.length,()=>`LayersModel has ${s.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(s.outputNames)})`);for(let l=0;l<r.length;l++)$(r[l].shape[0]===i,()=>`Batch size mismatch: input ${s.inputNames[l]} has ${r[l].shape[0]}; expected  ${i} based on input ${s.inputNames[0]}.`);for(let l=0;l<a.length;l++)$(a[l].shape[0]===i,()=>`Batch size mismatch: output ${s.outputNames[l]} has ${a[l].shape[0]}; expected  ${i} based on input ${s.inputNames[0]}.`);return{xs:r,ys:a}}function hg(s,e,t){if(t instanceof Ke)return[t];if(Array.isArray(t))return $(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${s} keys ${e}.`),t;{const n=[];for(const o of e){if(t[o]==null)throw new O(`The feature data generated by the dataset lacks the required ${s} key '${o}'.`);n.push(t[o])}return n}}function C6(s){if(s.length===3)throw new be("Validation with sample weights is not implemented yet.");return{xs:s[0],ys:s[1]}}async function N6(s,e,t){const n=t.batchesPerEpoch!=null;if($(s.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),$(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),$(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),$(!n||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),$(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;try{const o=t.validationData!=null;let r,a;if(o)if(dg(t.validationData))$(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const f=C6(t.validationData);r=f.xs,a=f.ys}const i=s.makeTrainFunction(),l=s.getDedupedMetricsNames();let c;o?c=l.slice().concat(l.map(f=>"val_"+f)):c=l.slice();const p=ky(t.callbacks,t.yieldEvery),u=t.verbose==null?1:t.verbose,{callbackList:h,history:d}=$y(p,u,t.epochs,null,null,S6(e,t),null,o,c);h.setModel(s),s.history=d,await h.onTrainBegin(),s.stopTraining_=!1;let m=t.initialEpoch==null?0:t.initialEpoch,g=await e.iterator();for(;m<t.epochs;){const f={};await h.onEpochBegin(m);let x=0,y=0;for(n||(g=await e.iterator());!n||x<t.batchesPerEpoch;){const w=await g.next();if(n&&w.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(w.value!=null){const{xs:b,ys:k}=Ry(s,w.value),I={};I.batch=y,I.size=b[0].shape[0],await h.onBatchBegin(y,I);const N=[];if(t.classWeight!=null){const E=_y(t.classWeight,s.outputNames);for(let F=0;F<E.length;++F)N.push(await Dy(k[F],null,E[F]))}const S=b.concat(k).concat(N),T=i(S);we(S);for(let E=0;E<l.length;++E){const F=l[E],z=T[E];I[F]=z,wt(z)}await h.onBatchEnd(y,I),vy(I),y++,x++}if(n?x>=t.batchesPerEpoch:w.done){if(o){let b;dg(t.validationData)?b=Le(await s.evaluateDataset(t.validationData,{batches:t.validationBatches})):b=Le(s.evaluate(r,a,{batchSize:t.validationBatchSize==null?I6:t.validationBatchSize,verbose:0}));for(let k=0;k<s.metricsNames.length;++k)f[`val_${s.metricsNames[k]}`]=b[k]}break}if(s.stopTraining_)break}if(await h.onEpochEnd(m,f),m++,s.stopTraining_)break}return await h.onTrainEnd(),await s.history.syncData(),s.history}finally{s.isTraining=!1}}function S6(s,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(s.size)&&(t=s.size),t}function dg(s){return typeof s.iterator=="function"}function T6(s){return typeof s.next=="function"}async function E6(s,e,t){t=t||{};const n=t.batches!=null,o=s.testFunction;let r=[];if(t.verbose>0)throw new be("Verbose mode is not implemented yet.");$(!n||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=T6(e)?e:await e.iterator();let i=0,l=0;for(;!n||l<t.batches;){const c=await a.next();if(r=P(()=>{if(c.value){const{xs:p,ys:u}=Ry(s,c.value),h=p.concat(u),d=P(()=>o(h));if(we(h),l===0)for(let g=0;g<d.length;++g)r.push(me(0));const m=h[0].shape[0];for(let g=0;g<d.length;++g){const f=d[g],x=r[g];r[g]=P(()=>K(r[g],D(m,f))),l>0&&we(x)}we(d),i+=m,++l}return r}),c.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<r.length;++c){const p=r[c];r[c]=ue(r[c],i),we(p)}return Gt(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kp(s){$(s>0&&Number.isInteger(s),()=>`batchSize is required to be a positive integer, but got ${s}`)}function Zr(s,e,t){return s==null?[null]:Array.isArray(s)?s.map(n=>So(n,e,t-e)):So(s,e,t-e)}function Yu(s,e){return P(()=>s==null?null:Array.isArray(s)?s.map(t=>Yu(t,e)):iy(s,e.dtype==="int32"?e:ne(e,"int32")))}function Xp(s,e){const t=[];let n=0,o=null;for(;n<s;)o=n+e,o>=s&&(o=s),t.push([n,o]),n=o;return t}function Oy(s){const e=[];s instanceof Ke&&(s=[s]);for(let t=0;t<s.length;++t){const n=s[t];if(n.rank===1)e.push(_i(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(n)}}return e}function Bs(s,e){if(s==null)return;const t=[];if(e instanceof Ke)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(const o in e){const r=e[o];t.push(r.id)}const n=[];if(s instanceof Ke)t.indexOf(s.id)===-1&&n.push(s);else if(Array.isArray(s))s.forEach(o=>{t.indexOf(o.id)===-1&&n.push(o)});else if(s!=null)for(const o in s){const r=s[o];t.indexOf(r.id)===-1&&n.push(r)}n.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function A6(s){return s instanceof Ke}function Zu(s){return Array.isArray(s)}function mg(s){return!A6(s)&&!Zu(s)}function fg(s,e,t,n=!0,o=""){if(e==null||e.length===0){if(s!=null){let a=!1;if(Zu(s)&&s.length>0)a=!0;else if(mg(s)){for(const i in s)if(s.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new O(`Error when checking model ${o} expected no data, but got ${s}`)}return[]}if(s==null)return e.map(a=>null);let r;if(mg(s)){s=s,r=[];for(const a of e){if(s[a]==null)throw new O(`No data provided for "${a}". Need data for each key in: ${e}`);r.push(s[a])}}else if(Zu(s)){if(s=s,s.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${s}`);r=s}else{if(s=s,e.length>1)throw new O(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${s.shape}`);r=[s]}if(r=Oy(r),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=r[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let l=0;l<t[a].length;++l){if(l===0&&!n)continue;const c=i.shape[l],p=t[a][l];if(p!=null&&p>=0&&c!==p)throw new O(`${o} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return r}function _6(s,e,t){const n=Wn(s.map(r=>r.shape[0]));n.sort();const o=Wn(e.map(r=>r.shape[0]));if(o.sort(),n.length>1)throw new O(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(s.map(r=>r.shape))}`);if(o.length>1)throw new O(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(n.length>0&&o.length>0&&!Se(n,o))throw new O(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function D6(s,e,t){const n=[$p,Ip,ga];for(let o=0;o<s.length;++o){const r=s[o],a=e[o],i=t[o];if(a!=null){if(a===ga&&r.shape[r.shape.length-1]===1)throw new O(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(a)!==-1){const l=r.shape.slice(1),c=i.slice(1);for(let p=0;p<l.length;++p){const u=l[p],h=c[p];if(h!=null&&u!==h)throw new O(`A target Tensor with shape ${r.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function gg(s,e,t,n=!0,o=""){let r;if(Array.isArray(s)){if(s.length!==e.length)throw new O(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${s.length} Tensors(s).`);r=s}else{if(e.length>1)throw new O(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(s.shape)}.`);r=[s]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=r[a];if(i.shape.length!==t[a].length)throw new O(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let l=0;l<t[a].length;++l){if(l===0&&!n)continue;const c=i.shape[l],p=t[a][l];if(p!=null&&p!==c)throw new O(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function R6(s,e){if(s==null||Array.isArray(s)&&s.length===0)return e.map(n=>[]);let t;if(typeof s=="string"||typeof s=="function")t=[s];else if(Array.isArray(s)||typeof s=="object")t=s;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${s}`);if(Array.isArray(t))return e.map(n=>t);{const n=[];for(const o of e){let r=t.hasOwnProperty(o)?t[o]:[];Array.isArray(r)||(r=[r]),n.push(r)}return n}}const O6="layers-model";class fr extends Ms{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new O("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");g6(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=f6(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof co))throw new O("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new O(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(qp(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new O(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>qp(i))}else{const a=qp(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],No("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const o=R6(e.metrics,this.outputNames),r=(a,i,l)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([l,a])};No("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;const i=o[a];(c=>{const p="";let u,h,d;for(const m of c){if(typeof m=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(m)!==-1){const f=this.internalOutputShapes[a];f[f.length-1]===1||this.lossFunctions[a]===Ip?["accuracy","acc"].indexOf(m)!==-1?h=Cy:["crossentropy","ce"].indexOf(m)!==-1&&(h=r6):this.lossFunctions[a]===Tl?["accuracy","acc"].indexOf(m)!==-1?h=a6:["crossentropy","ce"].indexOf(m)!==-1&&(h=Ty):["accuracy","acc"].indexOf(m)!==-1?h=Ny:["crossentropy","ce"].indexOf(m)!==-1&&(h=Sy);let x;["accuracy","acc"].indexOf(m)!==-1?x="acc":["crossentropy","ce"].indexOf(m)!==-1&&(x="ce"),d=h,u=p+x}else d=m6(m),u=p+Yi(m);let g;No(u,()=>{g=d}),r(a,u,g)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const o=n.batchSize==null?32:n.batchSize;Kp(o);const r=!0,a=this.standardizeUserDataXY(e,t,r,o);try{const i=a[0].concat(a[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,i,o,n.verbose,n.steps);return Gt(c)}finally{Bs(a[0],e),Bs(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),E6(this,e,t)}checkNumSamples(e,t,n,o="steps"){let r;if(n!=null){if(r=null,t!=null)throw new O(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new O(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new O("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),o=n?t:[t],r=this.retrieveSymbolicTensors(o),a=new zn;if(e instanceof Ke&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new O(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(const l of this.inputs){const c=e[l.name];if(c==null)throw new O(`No value is provided for the model's input ${l.name}`);a.add(l,c)}const i=sa(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Po(null,e.length);let n=e.length;for(const o of this.layers){const r=Array.isArray(o.output)?o.output:[o.output],a=r.map(i=>i.name);for(let i=0;i<e.length;++i){const l=a.indexOf(e[i]);if(l!==-1&&(t[i]=r[l],n--),n===0)break}if(n===0)break}if(n>0){const o=[];throw t.forEach((r,a)=>{r==null&&o.push(e[a])}),new O(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,n=!1){return P(()=>{const o=this.checkNumSamples(e);if(n)throw new be("Verbose predictLoop() is not implemented yet.");const r=Xp(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<r.length;++i)P(()=>{const c=r[i][0],p=r[i][1],u=Zr(e,c,p),h=[];if(Array.isArray(u))for(let m=0;m<u.length;++m)h.push({key:this.inputs[m],value:u[m]});else h.push({key:this.inputs[0],value:u});const d=new zn(h);return sa(this.outputs,d)}).forEach((c,p)=>a[p].push(c));return Gt(a.map(i=>pt(i,0)))})}predict(e,t={}){const n=Oy(e);gg(n,this.inputNames,this.feedInputShapes,!1);try{const o=t.batchSize==null?32:t.batchSize;return Kp(o),this.predictLoop(n,o)}finally{Bs(n,e)}}predictOnBatch(e){gg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,o){if(this.optimizer_==null)throw new Es("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===Tl?r.push(i.slice(0,i.length-1).concat([1])):r.push(i)}if(e=fg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=fg(t,this.feedOutputNames,r,!1,"target"),_6(e,t),D6(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new O(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,o,r=!0,a){const[i,l]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let c=null;if(o!=null){const p=_y(o,this.outputNames);c=[];for(let u=0;u<p.length;++u)c.push(await Dy(l[u],null,p[u]))}return[i,l,c]}testLoop(e,t,n,o=0,r){return P(()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(o>0)throw new be("Verbose mode is not implemented yet.");if(r!=null)throw new be("steps mode in testLoop() is not implemented yet");{const l=Xp(a,n),c=Bt(Ks(0,a));for(let p=0;p<l.length;++p){const u=l[p][0],h=l[p][1],d=So(c,u,h-u),m=Yu(t,d),g=e(m);if(p===0)for(let f=0;f<g.length;++f)i.push(me(0));for(let f=0;f<g.length;++f){const x=g[f];i[f]=K(i[f],D(h-u,x))}}for(let p=0;p<i.length;++p)i[p]=ue(i[p],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const o=e[n];let r=o;if(eg(e,o)>1){const a=eg(e.slice(0,n),o);r+=`_${a}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const u=[];for(let g=0;g<this.inputs.length;++g)u.push({key:this.inputs[g],value:n[g]});const h=new zn(u),d=sa(this.outputs,h,{training:!0});let m;for(let g=0;g<this.lossFunctions.length;++g){const f=this.lossFunctions[g];let x=f(o[g],d[g]);r[g]!=null&&(x=$6(x,r[g]));const y=st(x);t.push(y),g===0?m=x:m=K(m,x)}for(let g=0;g<this.metricsTensors.length;++g){let f;if(this.outputs.length>1&&g<this.outputs.length)f=t[g];else{const x=this.metricsTensors[g][0],y=this.metricsTensors[g][1];f=st(x(o[y],d[y]))}wt(f),a.push(f)}return m=st(m),this.calculateLosses().forEach(g=>{m=K(m,g)}),m},l=this.collectedTrainableWeights.map(u=>u.read()),c=!0;return[this.optimizer_.minimize(i,c,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>P(()=>{const t=[];let n;const o=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:o[c]});const i=new zn(a),l=sa(this.outputs,i);for(let c=0;c<this.lossFunctions.length;++c){const p=this.lossFunctions[c],u=st(p(r[c],l[c]));c===0?n=u:n=K(n,u),t.push(n)}for(let c=0;c<this.metricsTensors.length;++c){const p=this.metricsTensors[c][0],u=this.metricsTensors[c][1],h=st(p(r[u],l[u]));t.push(h)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let o,r,a,i,l,c,p,u,h;try{const d=n.batchSize==null?32:n.batchSize;Kp(d);const m=!1,g=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,m,d);o=g[0],r=g[1],h=g[2];let f=!1,x;if(n.validationData!=null&&n.validationData.length>0){if(f=!0,n.validationData.length===2)l=n.validationData[0],c=n.validationData[1];else throw n.validationData.length===3?new be("validationData including sample weights is not supported yet."):new O(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);const T=!0,E=await this.standardizeUserData(l,c,null,null,T,d);p=E[0],u=E[1],x=p.concat(u)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){f=!0;const T=Math.floor(o[0].shape[0]*(1-n.validationSplit)),E=o[0].shape[0];p=Zr(o,T,E),a=o,o=Zr(o,0,T),u=Zr(r,T,E),i=r,r=Zr(r,0,T),x=p.concat(u)}else n.validationSteps!=null&&(f=!0);const y=o.concat(r).concat(h);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let k,I;f?(this.makeTestFunction(),k=this.testFunction,I=b.slice().concat(b.map(T=>"val_"+T))):(k=null,x=[],I=b.slice());const N=ky(n.callbacks,n.yieldEvery);return await this.fitLoop(w,y,b,d,n.epochs,n.verbose,N,k,x,n.shuffle,I,n.initialEpoch,null,null)}finally{this.isTraining=!1,Bs(o,e),Bs(r,t),Bs(a,e),Bs(i,t),Bs(p,l),Bs(u,c),h!=null&&we(h)}}async fitLoop(e,t,n,o,r,a,i,l,c,p,u,h,d,m){o==null&&(o=32),r==null&&(r=1),p==null&&(p=!0),h==null&&(h=0);let g=!1;if(l!=null&&c!=null&&(g=!0),m!=null&&(g=!0,d==null))throw new O("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const f=this.checkNumSamples(t,o,d,"steps_per_epoch");let x;f!=null&&(x=Ks(0,f)),a==null&&(a=1);const{callbackList:y,history:w}=$y(i,a,r,h,f,d,o,g,u);y.setModel(this),this.history=w,await y.onTrainBegin(),this.stopTraining_=!1;for(let b=h;b<r;++b){await y.onEpochBegin(b);const k={};if(d!=null)throw new be("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new be("batch shuffling is not implemneted yet");p&&Tv(x);const I=Bt(x),N=Xp(f,o);for(let S=0;S<N.length;++S){const T={};if(await y.onBatchBegin(S,T),P(()=>{const E=N[S][0],F=N[S][1],z=So(I,E,F-E);T.batch=S,T.size=F-E;const j=Yu(t,z),B=e(j);for(let M=0;M<n.length;++M){const V=n[M],H=B[M];T[V]=H,wt(H)}if(S===N.length-1&&g){const M=this.testLoop(l,c,o);for(let V=0;V<n.length;++V){const H=n[V],G=M[V];wt(G),k["val_"+H]=G}}}),await y.onBatchEnd(S,T),vy(T),this.stopTraining_)break}I.dispose()}if(await y.onEpochEnd(b,k),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return N6(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),o=n[0],r=n[1],i=this.makeTrainFunction()(o.concat(r)),l=[];for(const c of i){const p=await c.data();l.push(p[0])}return we(i),Bs(n[0],e),Bs(n[1],t),Gt(l)}getNamedWeights(e){const t=[],n=e!=null&&e.trainableOnly,o=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<o.length;++a)n&&!o[a].trainable||t.push({name:o[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=Tu().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Tu().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=yn(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>yn(t))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const o of t)if(typeof n[o]=="string")e[o]=yn(n[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[yn(Yi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>yn(Yi(e)));{const e={};for(const t in this.metrics)e[t]=yn(Yi(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ku(e.optimizer_config),n=$n(t);let o;if(typeof e.loss=="string")o=wo(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>wo(a));else if(e.loss!=null){o={};for(const a in e.loss)o[a]=wo(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>wo(a));else if(e.metrics!=null){r={};for(const a in e.metrics)r[a]=wo(e.metrics[a])}this.compile({loss:o,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){const c=W0(e);if(c.length===0)throw new O(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new O(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new O("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Iu(this.getNamedWeights(t)),o=!1,r=null,i={modelTopology:this.toJSON(r,o),format:O6,generatedBy:`TensorFlow.js tfjs-layers v${Ay}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:p,specs:u}=await Iu(await this.optimizer.getWeights(),c);n.specs.push(...u),n.data=j0([n.data,p])}return this.userDefinedMetadata!=null&&(ug(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){ug(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}fr.className="Model";X(fr);class Fy extends fr{}Fy.className="Functional";X(Fy);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class xa extends fr{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:wp("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new O(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof xa||e instanceof fr;let n;if(t){if(n=e,n.outputs.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new O("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new O("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=PA({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new O(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new O("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=gy(this.outputs[0])}this.inboundNodes=[],new kp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Po(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(De(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new fr({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Es("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Es("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Es("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Es("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},o=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new O("Legacy serialization format not supported yet.");r=t}else $(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof xa))throw new be(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const l of r){const p=$n(l,void 0,o);o&&p.setFastWeightInitDuringBuild(!0),i.add(p)}return i}set stopTraining(e){if(this.model==null)throw new O("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new O("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}xa.className="Sequential";X(xa);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Xt=class extends jr{getConfig(){return{}}};class Py extends Xt{apply(e,t=1){return wA(e,t)}}Py.className="elu";X(Py);class Ly extends Xt{apply(e){return Hd(e)}}Ly.className="selu";X(Ly);class zy extends Xt{apply(e){return mn(e)}}zy.className="relu";X(zy);class jy extends Xt{apply(e){return P(()=>Oo(6,mn(e)))}}jy.className="relu6";X(jy);class By extends Xt{apply(e){return e}}By.className="linear";X(By);class My extends Xt{apply(e){return an(e)}}My.className="sigmoid";X(My);class Vy extends Xt{apply(e){return kA(e)}}Vy.className="hardSigmoid";X(Vy);class Wy extends Xt{apply(e){return Pr(e)}}Wy.className="softplus";X(Wy);class Uy extends Xt{apply(e){return vA(e)}}Uy.className="softsign";X(Uy);class Gy extends Xt{apply(e){return vr(e)}}Gy.className="tanh";X(Gy);let Jm=class extends Xt{apply(e,t=-1){return cp(e,t)}};Jm.className="softmax";X(Jm);class Hy extends Xt{apply(e,t=-1){return Ld(e,t)}}Hy.className="logSoftmax";X(Hy);class qy extends Xt{apply(e,t=1){return P(()=>D(an(D(e,t)),e))}}qy.className="swish";X(qy);class Ky extends Xt{apply(e){return P(()=>D(e,vr(Pr(e))))}}Ky.className="mish";X(Ky);function Zn(s){return s.getClassName()}function Yp(s,e={}){return Ai(s,Is.getMap().classNameMap,e,"activation")}function Jn(s){if(s==null){const e={};return e.className="linear",e.config={},Yp(e)}if(typeof s=="string"){const e={};return e.className=s,e.config={},Yp(e)}else return s instanceof Xt?s:Yp(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function F6(s){if(s!=null&&typeof s!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${s}`)}class Xy extends jr{}class Yy extends Xy{constructor(e){super(),F6(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return P(()=>{let t=ct([1]);return this.hasL1&&(t=K(t,le(D(this.l1,ut(e))))),this.hasL2&&(t=K(t,le(D(this.l2,Di(e))))),R(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Yy.className="L1L2";X(Yy);const xg={l1l2:"L1L2"};function je(s){return zm(s)}function yg(s,e={}){return Ai(s,Is.getMap().classNameMap,e,"regularizer")}function Ye(s){if(s==null)return null;if(typeof s=="string"){const t={className:s in xg?xg[s]:s,config:{}};return yg(t)}else return s instanceof Xy?s:yg(s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Zy extends Ce{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=xe(e);let n=mn(e);return this.maxValue!=null&&(n=os(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Zy.className="ReLU";X(Zy);class Jy extends Ce{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=xe(e);return Jc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Jy.className="LeakyReLU";X(Jy);class Qy extends Ce{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Xe(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ye(e.alphaRegularizer),this.alphaConstraint=gt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new O(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=De(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)n[o]=e[o];this.inputSpec=[new dt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=xe(e),rp(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Qe(this.alphaInitializer),alphaRegularizer:je(this.alphaRegularizer),alphaConstraint:ft(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Qy.className="PReLU";X(Qy);let eb=class extends Ce{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new be(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=xe(e);return $i(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};eb.className="ELU";X(eb);class tb extends Ce{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const n=xe(e);return D(n,ne(us(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}tb.className="ThresholdedReLU";X(tb);class sb extends Ce{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Jm().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return P(()=>{let n=xe(e);const o=t.mask;if(o!=null){const r=D(ie(ts(n.shape),ne(o,n.dtype)),me(-1e9));n=K(n,r)}return this.axis instanceof Array?this.axis.length>1?rs(ie(n,ep(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}sb.className="Softmax";X(sb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gr(s,e,t){if(typeof s=="number")return Po(s,e);if(s.length!==e)throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${s.length} elements.`);for(let n=0;n<e;++n){const o=s[n];if(!gA(o))throw new O(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(s)} including a non-integer number ${o}`)}return s}function Hs(s,e,t,n,o=1){if(s==null)return s;const r=e+(e-1)*(o-1);let a;return t==="same"?a=s:a=s-r+1,Math.floor((a+n-1)/n)}function nn(s,e,t,n){if(s==null)return null;if(n==="valid")s=s*e+Yn([t-e,0]);else if(n==="same")s=s*e;else throw new O(`Unsupport padding mode: ${n}.`);return s}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Qm(s,e){return P(()=>(it(e),e==="channelsFirst"?Ee(s,[0,2,3,1]):s))}function nb(s,e){return P(()=>(it(e),e==="channelsFirst"?Ee(s,[0,2,3,4,1]):s))}function P6(s,e,t,n=1,o="valid",r,a=1){return P(()=>{if(r==null&&(r=Xs()),it(r),s.shape.length!==3)throw new O(`The input of a conv1dWithBias operation should be 3, but is ${s.shape.length} instead.`);if(e.shape.length!==3)throw new O(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new O(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(r==="channelsFirst"&&(s=Ee(s,[0,2,1])),o==="causal")throw new be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Ad(s,e,n,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=Qs(i,t)),i})}function bg(s,e,t,n=[1,1],o="valid",r,a,i=null){return P(()=>{if(r==null&&(r=Xs()),it(r),s.rank!==3&&s.rank!==4)throw new O(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${s.rank}.`);if(e.rank!==3&&e.rank!==4)throw new O(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${s.rank}.`);let l=Qm(s,r);if(o==="causal")throw new be("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Jx({x:l,filter:e,strides:n,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),r==="channelsFirst"&&(l=Ee(l,[0,3,1,2])),l})}function L6(s,e,t,n=[1,1,1],o="valid",r,a){return P(()=>{if(r==null&&(r=Xs()),it(r),s.rank!==4&&s.rank!==5)throw new O(`conv3dWithBias expects input to be of rank 4 or 5, but received ${s.rank}.`);if(e.rank!==4&&e.rank!==5)throw new O(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${s.rank}.`);let i=nb(s,r);if(o==="causal")throw new be("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=xx(i,e,n,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=Qs(i,t)),r==="channelsFirst"&&(i=Ee(i,[0,4,1,2,3])),i})}class Cp extends Ce{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Cp.verifyArgs(t),this.rank=e,vt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new be(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=gr(t.kernelSize,e,"kernelSize"),this.strides=gr(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,ys(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,it(this.dataFormat),this.activation=Jn(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gt(t.biasConstraint),this.biasRegularizer=Ye(t.biasRegularizer),this.activityRegularizer=Ye(t.activityRegularizer),this.dilationRate=gr(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new O(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new O(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new O(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(sn("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!jm(e.kernelSize,"number",1,3))throw new O(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Zn(this.activation),useBias:this.useBias,biasInitializer:Qe(this.biasInitializer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),biasConstraint:ft(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Br extends Cp{constructor(e,t){super(e,t),this.kernel=null,Br.verifyArgs(t),this.filters=t.filters,vt(this.filters,"filters"),this.kernelInitializer=Xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gt(t.kernelConstraint),this.kernelRegularizer=Ye(t.kernelRegularizer)}build(e){e=De(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return P(()=>{e=xe(e);let n;const o=this.bias==null?null:this.bias.read(),r=ty(this.activation.getClassName());if(r!=null&&this.rank===2)n=bg(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=P6(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=bg(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=L6(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new be("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=De(e);const t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const a=Hs(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){const e={filters:this.filters,kernelInitializer:Qe(this.kernelInitializer),kernelRegularizer:je(this.kernelRegularizer),kernelConstraint:ft(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new O(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Pi extends Br{constructor(e){super(2,e),Pi.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!jm(e.kernelSize,"number",1,2))throw new O(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Pi.className="Conv2D";X(Pi);class Li extends Br{constructor(e){super(3,e),Li.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new O(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Li.className="Conv3D";X(Li);class ob extends Pi{constructor(e){if(super(e),this.inputSpec=[new dt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=De(e),e.length!==4)throw new O("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new dt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return P(()=>{let n=xe(e);if(n.shape.length!==4)throw new O(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const o=n.shape,r=o[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const l=o[a],c=o[i],p=this.kernelSize[0],u=this.kernelSize[1],h=this.strides[0],d=this.strides[1],m=nn(l,h,p,this.padding),g=nn(c,d,u,this.padding),f=[r,m,g,this.filters];this.dataFormat!=="channelsLast"&&(n=Ee(n,[0,2,3,1]));let x=Dd(n,this.kernel.read(),f,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(x=Ee(x,[0,3,1,2])),this.bias!=null&&(x=Qs(x,this.bias.read(),this.dataFormat)),this.activation!=null&&(x=this.activation.apply(x)),x})}computeOutputShape(e){e=De(e);const t=e.slice();let n,o,r;this.dataFormat==="channelsFirst"?(n=1,o=2,r=3):(n=3,o=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[o]=nn(t[o],l,a,this.padding),t[r]=nn(t[r],c,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ob.className="Conv2DTranspose";X(ob);class rb extends Li{constructor(e){if(super(e),this.inputSpec=[new dt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new O(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=De(e),e.length!==5)throw new O("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new O("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],o=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new dt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return P(()=>{let n=xe(e);if(n.shape.length!==5)throw new O(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);const o=n.shape,r=o[0];let a,i,l;this.dataFormat==="channelsFirst"?(l=2,a=3,i=4):(l=1,a=2,i=3);const c=o[l],p=o[a],u=o[i],h=this.kernelSize[0],d=this.kernelSize[1],m=this.kernelSize[2],g=this.strides[0],f=this.strides[1],x=this.strides[2],y=nn(c,g,h,this.padding),w=nn(p,f,d,this.padding),b=nn(u,x,m,this.padding),k=[r,y,w,b,this.filters];this.dataFormat!=="channelsLast"&&(n=Ee(n,[0,2,3,4,1]));let I=bx(n,this.kernel.read(),k,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=Ee(I,[0,4,1,2,3])),this.bias!==null&&(I=Qs(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(e){e=De(e);const t=e.slice();let n,o,r,a;this.dataFormat==="channelsFirst"?(n=1,o=2,r=3,a=4):(n=4,o=1,r=2,a=3);const i=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],p=this.strides[0],u=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[o]=nn(t[o],p,i,this.padding),t[r]=nn(t[r],u,l,this.padding),t[a]=nn(t[a],h,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}rb.className="Conv3DTranspose";X(rb);class ab extends Br{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new O("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new O("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new O(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Xe(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ye(t.depthwiseRegularizer),this.depthwiseConstraint=gt(t.depthwiseConstraint),this.pointwiseInitializer=Xe(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ye(t.pointwiseRegularizer),this.pointwiseConstraint=gt(t.pointwiseConstraint)}build(e){if(e=De(e),e.length<this.rank+2)throw new O(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],o=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new dt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return P(()=>{e=xe(e);let n;if(this.rank===1)throw new be("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ee(e,[0,2,3,1])),n=qd(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Qs(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ee(n,[0,3,1,2])),n})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Qe(this.depthwiseInitializer),e.pointwiseInitializer=Qe(this.pointwiseInitializer),e.depthwiseRegularizer=je(this.depthwiseRegularizer),e.pointwiseRegularizer=je(this.pointwiseRegularizer),e.depthwiseConstraint=ft(this.depthwiseConstraint),e.pointwiseConstraint=ft(this.pointwiseConstraint),e}}ab.className="SeparableConv";class ib extends ab{constructor(e){super(2,e)}}ib.className="SeparableConv2D";X(ib);class Np extends Br{constructor(e){super(1,e),Np.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!jm(e.kernelSize,"number",1,1))throw new O(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Np.className="Conv1D";X(Np);class lb extends Ce{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return P(()=>{if(e=xe(e),this.dataFormat==="channelsLast"){const n=Xi(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Xi(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const n=Xi(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Xi(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}lb.className="Cropping2D";X(lb);class cb extends Ce{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,it(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,dA(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{const t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return P(()=>{let n=xe(e);const o=n.shape;if(this.dataFormat==="channelsFirst"){n=Ee(n,[0,2,3,1]);const r=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?Us.resizeNearestNeighbor(n,[r,a]):Us.resizeBilinear(n,[r,a]);return Ee(i,[0,3,1,2])}else{const r=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?Us.resizeNearestNeighbor(n,[r,a]):Us.resizeBilinear(n,[r,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}cb.className="UpSampling2D";X(cb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function z6(s,e,t=[1,1],n="valid",o,r){return P(()=>{o==null&&(o=Xs()),it(o);let a=Qm(s,o);if(s.rank!==4)throw new O(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(e.rank!==4)throw new O(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=ki(a,e,t,n==="same"?"same":"valid","NHWC",r),o==="channelsFirst"&&(a=Ee(a,[0,3,1,2])),a})}class pb extends Cp{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Xe(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gt(e.depthwiseConstraint),this.depthwiseRegularizer=Ye(e.depthwiseRegularizer)}build(e){if(e=De(e),e.length<4)throw new O(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new O(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],o=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return P(()=>{e=xe(e);let n=z6(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Qs(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=De(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Hs(t,this.kernelSize[0],this.padding,this.strides[0]),a=Hs(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,r,a]:[e[0],r,a,o]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Qe(this.depthwiseInitializer),e.depthwiseRegularizer=je(this.depthwiseRegularizer),e.depthwiseConstraint=ft(this.depthwiseRegularizer),e}}pb.className="DepthwiseConv2D";X(pb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ub(s,e,t,n){if(Array.isArray(s)){if(e!=null||t!=null)throw new O("When inputs is an array, neither initialState or constants should be provided");n!=null&&(t=s.slice(s.length-n,s.length),s=s.slice(0,s.length-n)),s.length>1&&(e=s.slice(1,s.length)),s=s[0]}function o(r){return r==null||Array.isArray(r)?r:[r]}return e=o(e),t=o(t),{inputs:s,initialState:e,constants:t}}function hb(s,e,t,n=!1,o,r,a=!1,i=!1){return P(()=>{const l=e.shape.length;if(l<3)throw new O(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(Ks(2,l));if(e=Ee(e,c),r!=null)throw new be("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=ne(ne(o,"bool"),"float32"),o.rank===l-1&&(o=zt(o,-1)),o=Ee(o,c)),n&&(e=Os(e,0),o!=null&&(o=Os(o,0)));const p=[];let u,h=t;const d=e.shape[0],m=Fs(e);let g;o!=null&&(g=Fs(o));for(let x=0;x<d;++x){const y=m[x],w=P(()=>s(y,h));if(o==null)u=w[0],h=w[1];else{const b=P(()=>{const k=g[x],I=ie(gs(k),k),N=K(D(w[0],k),D(h[0],I)),S=h.map((T,E)=>K(D(w[1][E],k),D(T,I)));return{output:N,newStates:S}});u=b.output,h=b.newStates}i&&p.push(u)}let f;return i&&(f=as(p,1)),[u,f,h]})}class po extends Ce{constructor(e){super(e);let t;if(e.cell==null)throw new O("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new sf({cells:e.cell}):t=e.cell,t.stateSize==null)throw new O("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new dt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ks(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Gu(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let o;if(this.returnSequences?o=[e[0],e[1],n]:o=[e[0],n],this.returnState){const r=[];for(const a of t)r.push([e[0],a]);return[o].concat(r)}else return o}computeMask(e,t){return P(()=>{Array.isArray(t)&&(t=t[0]);const n=this.returnSequences?t:null;if(this.returnState){const o=this.states.map(r=>null);return[n].concat(o)}else return n})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new be("Constants support is not implemented in RNN yet.");Gu(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new dt({shape:[t,null,...n]});const o=[e[0]].concat(e.slice(2));this.cell.build(o);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Se(this.stateSpec.map(a=>a.shape[a.shape.length-1]),r))throw new O(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(a=>new dt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){P(()=>{if(!this.stateful)throw new tn("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(n==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>ct([n,o])):this.states_=[ct([n,this.cell.stateSize])];else if(e==null)we(this.states_),this.keptStates!=null&&(we(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>ct([n,o])):this.states_[0]=ct([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):we(this.states_);for(let o=0;o<this.states_.length;++o){const r=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[n,a];if(!Se(r.shape,i))throw new O(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[o]=r}}this.states_=this.states_.map(o=>wt(o.clone()))})}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const r=ub(e,n,o,this.numConstants);e=r.inputs,n=r.initialState,o=r.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const c of n)this.stateSpec.push(new dt({shape:c.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof hn){const c=[e].concat(a),p=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=p;const h=super.apply(c,t);return this.inputSpec=u,h}else return super.apply(e,t)}call(e,t){return P(()=>{const n=t==null?null:t.mask,o=t==null?null:t.training;let r=t==null?null:t.initialState;e=xe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new O(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:o},c=hb((m,g)=>{const f=this.cell.call([m].concat(g),i);return[f[0],f.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),p=c[0],u=c[1],h=c[2];this.stateful&&this.resetStates(h,o);const d=this.returnSequences?u:p;return this.returnState?[d].concat(h):d})}getInitialState(e){return P(()=>{let t=ct(e.shape);return t=le(t,[1,2]),t=_i(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?Wu(t,[1,n]):t):this.cell.stateSize>1?[Wu(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===po.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const o=t.cell,r=$n(o,n);return new e(Object.assign(t,{cell:r}))}}po.className="RNN";X(po);class Sp extends Ce{}class ef extends Sp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,vt(this.units,"units"),this.activation=Jn(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Xe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xe(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ye(e.kernelRegularizer),this.recurrentRegularizer=Ye(e.recurrentRegularizer),this.biasRegularizer=Ye(e.biasRegularizer),this.kernelConstraint=gt(e.kernelConstraint),this.recurrentConstraint=gt(e.recurrentConstraint),this.biasConstraint=gt(e.biasConstraint),this.dropout=Cr([1,Yn([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Cr([1,Yn([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=De(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return P(()=>{if(e=e,e.length!==2)throw new O(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Qn({ones:()=>gs(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Qn({ones:()=>gs(n),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let r;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?r=pn(D(e,a),this.kernel.read()):r=pn(e,this.kernel.read()),this.bias!=null&&(r=Qs(r,this.bias.read())),i!=null&&(n=D(n,i));let l=K(r,pn(n,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Zn(this.activation),useBias:this.useBias,kernelInitializer:Qe(this.kernelInitializer),recurrentInitializer:Qe(this.recurrentInitializer),biasInitializer:Qe(this.biasInitializer),kernelRegularizer:je(this.kernelRegularizer),recurrentRegularizer:je(this.recurrentRegularizer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),kernelConstraint:ft(this.kernelConstraint),recurrentConstraint:ft(this.recurrentConstraint),biasConstraint:ft(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}ef.className="SimpleRNNCell";X(ef);class db extends po{constructor(e){e.cell=new ef(e),super(e)}call(e,t){return P(()=>{this.cell.dropoutMask!=null&&(we(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(we(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:r})})}static fromConfig(e,t){return new e(t)}}db.className="SimpleRNN";X(db);class tf extends Sp{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new O("GRUCell does not support reset_after parameter set to true.");this.units=e.units,vt(this.units,"units"),this.activation=Jn(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Jn(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Xe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xe(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ye(e.kernelRegularizer),this.recurrentRegularizer=Ye(e.recurrentRegularizer),this.biasRegularizer=Ye(e.biasRegularizer),this.kernelConstraint=gt(e.kernelConstraint),this.recurrentConstraint=gt(e.recurrentConstraint),this.biasConstraint=gt(e.biasConstraint),this.dropout=Cr([1,Yn([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Cr([1,Yn([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=De(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return P(()=>{if(e=e,e.length!==2)throw new O(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training==null?!1:t.training;let o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Qn({ones:()=>gs(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Qn({ones:()=>gs(o),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,l,c;0<this.dropout&&this.dropout<1&&(e=D(e,r[0]));let p=pn(e,this.kernel.read());this.useBias&&(p=Qs(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=D(o,a[0]));const u=this.recurrentKernel.read(),[h,d]=ss(u,[2*this.units,this.units],u.rank-1),m=pn(o,h),[g,f,x]=ss(p,3,p.rank-1),[y,w]=ss(m,2,m.rank-1);i=this.recurrentActivation.apply(K(g,y)),l=this.recurrentActivation.apply(K(f,w));const b=pn(D(l,o),d);c=this.activation.apply(K(x,b));const k=K(D(i,o),D(K(1,He(i)),c));return[k,k]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Zn(this.activation),recurrentActivation:Zn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Qe(this.kernelInitializer),recurrentInitializer:Qe(this.recurrentInitializer),biasInitializer:Qe(this.biasInitializer),kernelRegularizer:je(this.kernelRegularizer),recurrentRegularizer:je(this.recurrentRegularizer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),kernelConstraint:ft(this.kernelConstraint),recurrentConstraint:ft(this.recurrentConstraint),biasConstraint:ft(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}tf.className="GRUCell";X(tf);class mb extends po{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new tf(e),super(e)}call(e,t){return P(()=>{this.cell.dropoutMask!=null&&(we(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(we(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}mb.className="GRU";X(mb);class Tp extends Sp{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,vt(this.units,"units"),this.activation=Jn(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Jn(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Xe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xe(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ye(e.kernelRegularizer),this.recurrentRegularizer=Ye(e.recurrentRegularizer),this.biasRegularizer=Ye(e.biasRegularizer),this.kernelConstraint=gt(e.kernelConstraint),this.recurrentConstraint=gt(e.recurrentConstraint),this.biasConstraint=gt(e.biasConstraint),this.dropout=Cr([1,Yn([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Cr([1,Yn([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=De(e);const n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,a=this.units;o=new(t=class extends Ls{apply(l,c){const p=r.apply([a]),u=new Mm().apply([a]),h=r.apply([a*2]);return sg(sg(p,u),h)}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return P(()=>{const n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new O(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Qn({ones:()=>gs(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Qn({ones:()=>gs(o),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let l,c,p,u;0<this.dropout&&this.dropout<1&&(e=D(e,a[0]));let h=pn(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=D(o,i[0])),h=K(h,pn(o,this.recurrentKernel.read())),this.useBias&&(h=Qs(h,this.bias.read()));const[d,m,g,f]=ss(h,4,h.rank-1);l=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(m),p=K(D(c,r),D(l,this.activation.apply(g))),u=this.recurrentActivation.apply(f);const x=D(u,this.activation.apply(p));return[x,x,p]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Zn(this.activation),recurrentActivation:Zn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Qe(this.kernelInitializer),recurrentInitializer:Qe(this.recurrentInitializer),biasInitializer:Qe(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:je(this.kernelRegularizer),recurrentRegularizer:je(this.recurrentRegularizer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),kernelConstraint:ft(this.kernelConstraint),recurrentConstraint:ft(this.recurrentConstraint),biasConstraint:ft(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Tp.className="LSTMCell";X(Tp);class fb extends po{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Tp(e),super(e)}call(e,t){return P(()=>{this.cell.dropoutMask!=null&&(we(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(we(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}fb.className="LSTM";X(fb);class sf extends Sp{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return P(()=>{e=e;let n=e.slice(1);const o=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(n.splice(0,i.stateSize.length)):o.push(n.splice(0,1));o.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const l=this.cells[i];n=o[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=l.call(a,t),r.push(a.slice(1))}n=[];for(const i of r.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){Gu(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,o)=>{No(`RNNCell_${o}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),o={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),o)}static fromConfig(e,t,n={}){const o=[];for(const r of t.cells)o.push($n(r,n));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Hu(e)}setWeights(e){const t=[];for(const n of this.cells){const o=n.weights.length,r=e.splice(o);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}Km(t)}}sf.className="StackedRNNCells";X(sf);function Qn(s){const{ones:e,rate:t,training:n=!1,count:o=1,dropoutFunc:r}=s,a=()=>r!=null?r(e(),t):ly(e(),t),i=()=>Ri(a,e,n);return!o||o<=1?wt(i().clone()):Array(o).fill(void 0).map(i).map(c=>wt(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var j6=globalThis&&globalThis.__rest||function(s,e){var t={};for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&e.indexOf(n)<0&&(t[n]=s[n]);if(s!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,n=Object.getOwnPropertySymbols(s);o<n.length;o++)e.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(s,n[o])&&(t[n[o]]=s[n[o]]);return t};class gb extends po{constructor(e){if(e.unroll)throw new be("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new be("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new dt({ndim:5})]}call(e,t){return P(()=>{if(this.cell.dropoutMask!=null&&(we(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(we(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new O("ConvRNN2D cell does not support constants");const n=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:o,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return P(()=>{const{stateSize:t}=this.cell,n=e.shape,o=this.computeSingleOutputShape(n),r=[o[0],...o.slice(2)],a=ct(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){P(()=>{if(!this.stateful)throw new tn("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,o=this.computeSingleOutputShape(n),r=[o[0],...o.slice(2)];if(n[0]==null)throw new O("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ct(r)):this.states_=[ct(r)];else if(e==null)we(this.states_),this.keptStates!=null&&(we(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>ct(r)):this.states_[0]=ct(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new O(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):we(this.states_);for(let i=0;i<this.states_.length;++i){const l=e[i],c=r;if(!Se(l.shape,c))throw new O(`State ${i} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[i]=l}}this.states_=this.states_.map(i=>wt(i.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:o,padding:r,strides:a,dilationRate:i}=this.cell,l=t==="channelsFirst",c=e[l?3:2],p=e[l?4:3],u=Hs(c,o[0],r,a[0],i[0]),h=Hs(p,o[1],r,a[1],i[1]);return[...e.slice(0,2),...l?[n,u,h]:[u,h,n]]}}gb.className="ConvRNN2D";class nf extends Tp{constructor(e){const{filters:t,kernelSize:n,strides:o,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,vt(this.filters,"filters"),this.kernelSize=gr(n,2,"kernelSize"),this.kernelSize.forEach(l=>vt(l,"kernelSize")),this.strides=gr(o||1,2,"strides"),this.strides.forEach(l=>vt(l,"strides")),this.padding=r||"valid",ys(this.padding),this.dataFormat=a||"channelsLast",it(this.dataFormat),this.dilationRate=gr(i||1,2,"dilationRate"),this.dilationRate.forEach(l=>vt(l,"dilationRate"))}build(e){var t;e=De(e);const n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new O(`The channel dimension of the input should be defined. Found ${e[n]}`);const o=e[n],r=4,a=this.kernelSize.concat([o,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,p=this.filters;l=new(t=class extends Ls{apply(h,d){const m=c.apply([p]),g=ts([p]),f=c.apply([p*2]);return Bm([m,g,f])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return P(()=>{if(e.length!==3)throw new O(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,o=e[0],r=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Qn({ones:()=>gs(o),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(Y,Z,Q)=>!Z||!Z[Q]?Y:D(Z[Q],Y);let p=c(o,l,0),u=c(o,l,1),h=c(o,l,2),d=c(o,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Qn({ones:()=>gs(r),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));const m=this.recurrentDropoutMask;let g=c(r,m,0),f=c(r,m,1),x=c(r,m,2),y=c(r,m,3);const w=3,[b,k,I,N]=ss(this.kernel.read(),i,w),[S,T,E,F]=this.useBias?ss(this.bias.read(),i):[null,null,null,null];p=this.inputConv(p,b,S,this.padding),u=this.inputConv(u,k,T,this.padding),h=this.inputConv(h,I,E,this.padding),d=this.inputConv(d,N,F,this.padding);const[z,j,B,M]=ss(this.recurrentKernel.read(),i,w);g=this.recurrentConv(g,z),f=this.recurrentConv(f,j),x=this.recurrentConv(x,B),y=this.recurrentConv(y,M);const V=this.recurrentActivation.apply(K(p,g)),H=this.recurrentActivation.apply(K(u,f)),G=K(D(H,a),D(V,this.activation.apply(K(h,x)))),q=D(this.recurrentActivation.apply(K(d,y)),this.activation.apply(G));return[q,q,G]})}getConfig(){const e=super.getConfig(),t=j6(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),n)}inputConv(e,t,n,o){const r=Kn(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?Qs(r,n,this.dataFormat):r}recurrentConv(e,t){return Kn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}nf.className="ConvLSTM2DCell";X(nf);class xb extends gb{constructor(e){const t=new nf(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}xb.className="ConvLSTM2D";X(xb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class of extends Ce{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,n=[];for(let o=0;o<this.noiseShape.length;++o)n.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return n}call(e,t){return P(()=>{this.invokeCallHook(e,t);const n=xe(e);if(0<this.rate&&this.rate<1){const o=t.training==null?!1:t.training,r=this.getNoiseShape(n);return Ri(()=>ly(n,this.rate,r,this.seed),()=>n,o)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}of.className="Dropout";X(of);class yb extends of{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}yb.className="SpatialDropout1D";X(yb);class bb extends Ce{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,vt(this.units,"units"),this.activation=Jn(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Xe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Xe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gt(e.kernelConstraint),this.biasConstraint=gt(e.biasConstraint),this.kernelRegularizer=Ye(e.kernelRegularizer),this.biasRegularizer=Ye(e.biasRegularizer),this.activityRegularizer=Ye(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=De(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=De(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return P(()=>{this.invokeCallHook(e,t);const n=xe(e),o=ty(this.activation.getClassName());let r;return o!=null?r=pn(n,this.kernel.read(),o,this.bias?this.bias.read():null):(r=pn(n,this.kernel.read()),this.bias!=null&&(r=Qs(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:Zn(this.activation),useBias:this.useBias,kernelInitializer:Qe(this.kernelInitializer),biasInitializer:Qe(this.biasInitializer),kernelRegularizer:je(this.kernelRegularizer),biasRegularizer:je(this.biasRegularizer),activityRegularizer:je(this.activityRegularizer),kernelConstraint:ft(this.kernelConstraint),biasConstraint:ft(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}bb.className="Dense";X(bb);class wb extends Ce{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=De(e);for(const t of e.slice(1))if(t==null)throw new O(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Un(e,1)]}call(e,t){return P(()=>{this.invokeCallHook(e,t);let n=xe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){const o=[0];for(let r=2;r<n.rank;++r)o.push(r);o.push(1),n=Ee(n,o)}return bA(n)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}wb.className="Flatten";X(wb);class vb extends Ce{constructor(e){super(e),this.supportsMasking=!0,this.activation=Jn(e.activation)}call(e,t){return P(()=>{this.invokeCallHook(e,t);const n=xe(e);return this.activation.apply(n)})}getConfig(){const e={activation:Zn(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}vb.className="Activation";X(vb);class kb extends Ce{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return P(()=>(e=xe(e),xA(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}kb.className="RepeatVector";X(kb);class $b extends Ce{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",o=t.slice();let r=1,a=null;for(let l=0;l<o.length;++l){const c=o[l];if(this.isUnknown(c))if(a===null)a=l;else throw new O("Can only specifiy one unknown dimension.");else r*=c}const i=Un(e);if(a!==null){if(r===0||i%r!==0)throw new O(n);o[a]=i/r}else if(i!==r)throw new O(n);return o}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return P(()=>{this.invokeCallHook(e,t);const n=xe(e),o=n.shape,r=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return R(n,r)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}$b.className="Reshape";X($b);class Ib extends Ce{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ks(1,e.dims.length+1);if(!Se(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new dt({ndim:this.dims.length+1})]}computeOutputShape(e){e=De(e);const t=e.slice();return this.dims.forEach((n,o)=>{t[o+1]=e[n]}),t}call(e,t){return Ee(xe(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Ib.className="Permute";X(Ib);class Cb extends Ce{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=xe(e),o=-1;return vl($r(n,this.maskValue),o)}call(e,t){return P(()=>{this.invokeCallHook(e,t);const n=xe(e),o=-1,r=!0,a=vl($r(n,this.maskValue),o,r);return D(n,ne(a,n.dtype))})}}Cb.className="Masking";X(Cb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Nb extends Ce{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Le(e.inputLength))}this.inputDim=e.inputDim,vt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,vt(this.outputDim,"outputDim"),this.embeddingsInitializer=Xe(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ye(e.embeddingsRegularizer),this.activityRegularizer=Ye(e.activityRegularizer),this.embeddingsConstraint=gt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return P(()=>this.maskZero?(e=xe(e),$r(e,Ae(e))):null)}computeOutputShape(e){if(e=De(e),this.inputLength==null)return[...e,this.outputDim];const t=Le(this.inputLength);if(t.length!==e.length-1)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let o=0;o<t.length;++o){const r=t[o],a=e[o+1];if(r!=null&&a!=null&&r!==a)throw new O(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return P(()=>{this.invokeCallHook(e,t);let n=xe(e);n.dtype!=="int32"&&(n=cn(n,"int32"));const o=iy(this.embeddings.read(),R(n,[n.size]));return R(o,De(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Qe(this.embeddingsInitializer),embeddingsRegularizer:je(this.embeddingsRegularizer),activityRegularizer:je(this.activityRegularizer),embeddingsConstraint:ft(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Nb.className="Embedding";X(Nb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Yo extends Ce{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new be}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const n=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){const r=e[e.length-t.length+o],a=t[o];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new O("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[De(e)]),e=e,e.length<2)throw new O(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Wn(t),t.length>1)throw new O(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}const o=e.map(r=>r.length);e.indexOf(null)===-1&&Wn(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return P(()=>{if(e=e,this.reshapeRequired){const n=[],o=e.map(r=>r.rank);if(o.indexOf(null)===-1){const r=Yn(o);for(let a of e){const i=a.rank;for(let l=0;l<r-i;++l)a=_i(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(const l of e){const c=l.rank;if(c==null){const p=l.shape,u=p[0],h=p.slice(1).concat([u]);let d=R(l,[u].concat(Un(p.slice(1))));d=Ee(d,[1,0]),d=R(d,h),n.push(d),r=!0}else if(c>1){const p=Ks(1,c).concat([0]);n.push(Ee(l,p)),r=!0}else n.push(l)}let a=this.mergeFunction(n);const i=a.rank;if(r){if(i==null){const l=a.shape,c=l.length,p=l[c-1],u=[p].concat(l.slice(0,l.length-1));a=R(Ee(R(a,[-1,p]),[1,0]),u)}else if(i>1){const l=[i-1].concat(Ks(0,i-1));a=Ee(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){const r=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const o of e)o!=null&&o[0]!==null&&n.push(o[0]);return n=Wn(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return P(()=>{if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an Array");if(!Array.isArray(e))throw new O("`inputs` should be an Array");if(t.length!==e.length)throw new O(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:zt(o,0));let n=t[0];for(let o=1;o<t.length-1;++o)n=un(n,t[o]);return n})}}class Sb extends Yo{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=K(t,e[n]);return t})}}Sb.className="Add";X(Sb);class Tb extends Yo{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=D(t,e[n]);return t})}}Tb.className="Multiply";X(Tb);class Eb extends Yo{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=K(t,e[n]);return D(1/e.length,t)})}}Eb.className="Average";X(Eb);class Ab extends Yo{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=En(t,e[n]);return t})}}Ab.className="Maximum";X(Ab);class _b extends Yo{constructor(e){super(e)}mergeFunction(e){return P(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Oo(t,e[n]);return t})}}_b.className="Minimum";X(_b);class Db extends Yo{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new O("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const o of e)if(o!=null){t=!1;break}if(t)return;const n=[];for(let o=0;o<e.length;++o){const r=e[o].slice();r.splice(this.axis,1);let a=!1;for(const i of n)if(Se(i,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new O("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return P(()=>Bm(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new O("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),o=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(n[o]==null||r[o]==null){n[o]=null;break}n[o]+=r[o]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new O("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new O("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new O(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return P(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;const o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(ne(gs(e[a]),"bool")):t[a].rank<e[a].rank?o.push(zt(t[a],-1)):o.push(t[a]);const r=pt(o,this.axis);return Td(r,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Db.className="Concatenate";X(Db);function Jr(s,e){for(;s<0;)s+=e;return s}function B6(s,e,t){if(s.shape.length>3||e.shape.length>3)throw new be("batchDot is not implemented for tensors of 4D or higher rank yet");if($(s.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${s.shape.length}`),$(s.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),s.dtype==="complex64"||e.dtype==="complex64")throw new be("batchDot is not implemented for complex64-type Tensors yet.");const n=s.shape.length,o=e.shape.length;t==null&&(t=[n-1,o-2]);const r=t;return P(()=>{let a;if(n>o){a=n-o;const l=[];for(let c=0;c<a;++c)l.push(1);e=R(e,e.shape.concat(l))}else if(o>n){a=o-n;const l=[];for(let c=0;c<a;++c)l.push(1);s=R(s,s.shape.concat(l))}else a=0;let i;if(s.shape.length===2&&e.shape.length===2)r[0]===r[1]?i=le(D(s,e),r[0]):i=le(D(Ee(s,[1,0]),e),r[1]);else{const l=r[0]!==s.shape.length-1,c=r[1]===e.shape.length-1;i=Ne(s,e,l,c)}if(a>0){let l;n>o?l=n+o-3:l=n-1;const c=[];for(let p=l;p<l+a;++p)c.push(p);i=qo(i,c)}return i.shape.length===1&&(i=zt(i,1)),i})}class Rb extends Yo{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){$(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new be("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,n);if(t[o[0]]!==n[o[1]])throw new O(`Dimension incompatibility: ${t[o[0]]} !== ${n[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new O(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((r,a)=>Jr(r,e[a].shape.length)):o=[Jr(this.axes,t.shape.length),Jr(this.axes,n.shape.length)],this.normalize&&(t=Sl(t,o[0]),n=Sl(n,o[1])),B6(t,n,o)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Jr(this.axes,e.length),Jr(this.axes,t.length)],n}computeOutputShape(e){$(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new be("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,n);t.splice(o[0],1),n.splice(o[1],1),n.splice(0,1);const r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Rb.className="Dot";X(Rb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ob extends Ce{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return P(()=>{this.invokeCallHook(e,t);const n=xe(e);return Ri(()=>K(vp(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}Ob.className="GaussianNoise";X(Ob);class Fb extends Ce{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return P(()=>{this.invokeCallHook(e,t);const n=xe(e);return this.rate>0&&this.rate<1?Ri(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return D(n,vp(n.shape,1,r))},()=>n,t.training||!1):n})}}Fb.className="GaussianDropout";X(Fb);class Pb extends Ce{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||xe(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return P(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Ri(()=>{const r=xe(e),a=1.6732632423543772,i=1.0507009873554805,l=-a*i;let c=io(Ho(n),this.rate);c=cn(c,"float32");const p=((1-this.rate)*(1+this.rate*l**2))**-.5,u=-p*l*this.rate,h=K(D(r,c),D(K(c,-1),l));return K(D(h,p),u)},()=>xe(e),t.training||!1)}return e})}}Pb.className="AlphaDropout";X(Pb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ya(s,e,t,n,o,r=.001){let a;if(s.rank===2)a=lx(s,e,t,n,o,r);else if(s.rank===3)a=cx(s,e,t,n,o,r);else if(s.rank===4)a=px(s,e,t,n,o,r);else throw new be(`batchNormalization is not implemented for array of rank ${s.rank} yet`);return a}function M6(s,e,t,n,o=.001){return P(()=>{const r=np(s,n),a=r.mean,i=r.variance;return[ya(s,a,i,t,e,o),a,i]})}function V6(s,e,t,n,o=.001){return P(()=>{const r=np(s,n),a=r.mean,i=r.variance,l=[];for(const m of Ks(0,s.rank))n.indexOf(m)!==-1?l.push(1):l.push(s.shape[m]);const c=R(a,l),p=R(i,l),u=e==null?null:R(e,l),h=t==null?null:R(t,l);return[ya(s,c,p,h,u,o),a,i]})}function W6(s,e,t,n,o=.001){return Se(n.slice().sort(),Ks(0,s.rank-1))?M6(s,e,t,n,o):V6(s,e,t,n,o)}class Lb extends Ce{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Xe(e.betaInitializer||"zeros"),this.gammaInitializer=Xe(e.gammaInitializer||"ones"),this.movingMeanInitializer=Xe(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Xe(e.movingVarianceInitializer||"ones"),this.betaConstraint=gt(e.betaConstraint),this.gammaConstraint=gt(e.gammaConstraint),this.betaRegularizer=Ye(e.betaRegularizer),this.gammaRegularizer=Ye(e.gammaRegularizer)}build(e){e=De(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new O(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new dt({ndim:e.length,axes:{[t]:n}})];const o=[n];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return P(()=>{const n=t.training==null?!1:t.training,o=xe(e),r=o.shape,a=r.length,i=Ks(0,a),l=this.axis>=0?this.axis:this.axis+a;i.splice(l,1);const c=Po(1,a);c[l]=r[l];const p=i.slice();p.sort();const u=!Se(p,Ks(0,a).slice(0,a-1)),h=()=>{if(u){const y=R(this.movingMean.read(),c),w=R(this.movingVariance.read(),c),b=this.center?R(this.beta.read(),c):null,k=this.scale?R(this.gamma.read(),c):null;return ya(o,y,w,b,k,this.epsilon)}else return ya(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return h();const[d,m,g]=W6(o,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(y,w,b)=>{P(()=>{const k=1-b,I=y.read(),N=D(ie(I,w),k);y.write(ie(I,N))})};return(()=>{f(this.movingMean,m,this.momentum),f(this.movingVariance,g,this.momentum)})(),d})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Qe(this.betaInitializer),gammaInitializer:Qe(this.gammaInitializer),movingMeanInitializer:Qe(this.movingMeanInitializer),movingVarianceInitializer:Qe(this.movingVarianceInitializer),betaRegularizer:je(this.betaRegularizer),gammaRegularizer:je(this.gammaRegularizer),betaConstraint:ft(this.betaConstraint),gammaConstraint:ft(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Lb.className="BatchNormalization";X(Lb);class zb extends Ce{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Xe(e.betaInitializer||"zeros"),this.gammaInitializer=Xe(e.gammaInitializer||"ones"),this.betaRegularizer=Ye(e.betaRegularizer),this.gammaRegularizer=Ye(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=De(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Wn(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(r=>e[r]),o=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){const n=xe(e),o=n.shape,r=o.length;return P(()=>{let{mean:i,variance:l}=np(n,this.axis,!0);const c=Po(1,r);for(const g of this.axis)c[g]=o[g];const p=g=>g!=null&&g.shape.length!==r?R(g,c):g;let u=this.scale?p(this.gamma.read()):null,h=this.center?p(this.beta.read()):null;const d=[],m=[];for(let g=0;g<r;++g)this.axis.indexOf(g)!==-1?(d.push(o[g]),m.push(1)):(d.push(1),m.push(o[g]));return i=Ts(i,d),l=Ts(l,d),u!=null&&(u=Ts(u,m)),h!=null&&(h=Ts(h,m)),ya(n,i,l,h,u,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Qe(this.betaInitializer),gammaInitializer:Qe(this.gammaInitializer),betaRegularizer:je(this.betaRegularizer),gammaRegularizer:je(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}zb.className="LayerNormalization";X(zb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function U6(s,e,t){return P(()=>{if(s.rank!==4)throw new O(`temporalPadding expects input tensor to be 4-D, but received a ${s.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new O("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Xs()),t!=="channelsLast"&&t!=="channelsFirst")throw new O(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return t==="channelsFirst"?n=[[0,0],[0,0],e[0],e[1]]:n=[[0,0],e[0],e[1],[0,0]],lo(s,n)})}class jb extends Ce{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Xs():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new O(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new O(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new O(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new dt({ndim:4})]}computeOutputShape(e){e=De(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return P(()=>U6(xe(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}jb.className="ZeroPadding2D";X(jb);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ep(s,e,t,n,o,r){return P(()=>{it(o),ny(r),ys(n),t==null&&(t=[1,1]),n==null&&(n="valid"),o==null&&(o=Xs()),r==null&&(r="max"),s=Qm(s,o);let a;const i=n==="same"?"same":"valid";return r==="max"?a=sp(s,e,t,i):a=Kc(s,e,t,i),o==="channelsFirst"&&(a=Ee(a,[0,3,1,2])),a})}function Bb(s,e,t,n,o,r){return P(()=>{it(o),ny(r),ys(n),t==null&&(t=[1,1,1]),n==null&&(n="valid"),o==null&&(o=Xs()),r==null&&(r="max"),s=nb(s,o);let a;const i=n==="same"?"same":"valid";return r==="max"?a=Fx(s,e,t,i):a=ix(s,e,t,i),o==="channelsFirst"&&(a=Ee(a,[0,4,1,2,3])),a})}class Mb extends Ce{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new O(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(vt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new O(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);vt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,ys(this.padding),this.inputSpec=[new dt({ndim:3})]}computeOutputShape(e){e=De(e);const t=Hs(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return P(()=>{this.invokeCallHook(e,t),e=_i(xe(e),2);const n=this.poolingFunction(xe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return qo(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Vb extends Mb{constructor(e){super(e)}poolingFunction(e,t,n,o,r){return it(r),ys(o),Ep(e,t,n,o,r,"max")}}Vb.className="MaxPooling1D";X(Vb);class Wb extends Mb{constructor(e){super(e)}poolingFunction(e,t,n,o,r){return it(r),ys(o),Ep(e,t,n,o,r,"avg")}}Wb.className="AveragePooling1D";X(Wb);class Ub extends Ce{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new O(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];vt(this.poolSize,"poolSize"),vt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,it(this.dataFormat),ys(this.padding),this.inputSpec=[new dt({ndim:4})]}computeOutputShape(e){e=De(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Hs(t,this.poolSize[0],this.padding,this.strides[0]),n=Hs(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return P(()=>(this.invokeCallHook(e,t),this.poolingFunction(xe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Gb extends Ub{constructor(e){super(e)}poolingFunction(e,t,n,o,r){return it(r),ys(o),Ep(e,t,n,o,r,"max")}}Gb.className="MaxPooling2D";X(Gb);class Hb extends Ub{constructor(e){super(e)}poolingFunction(e,t,n,o,r){return it(r),ys(o),Ep(e,t,n,o,r,"avg")}}Hb.className="AveragePooling2D";X(Hb);class qb extends Ce{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new O(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];vt(this.poolSize,"poolSize"),vt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,it(this.dataFormat),ys(this.padding),this.inputSpec=[new dt({ndim:5})]}computeOutputShape(e){e=De(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Hs(t,this.poolSize[0],this.padding,this.strides[0]),n=Hs(n,this.poolSize[1],this.padding,this.strides[1]),o=Hs(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,o]:[e[0],t,n,o,e[4]]}call(e,t){return P(()=>(this.invokeCallHook(e,t),this.poolingFunction(xe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Kb extends qb{constructor(e){super(e)}poolingFunction(e,t,n,o,r){return it(r),ys(o),Bb(e,t,n,o,r,"max")}}Kb.className="MaxPooling3D";X(Kb);class Xb extends qb{constructor(e){super(e)}poolingFunction(e,t,n,o,r){return it(r),ys(o),Bb(e,t,n,o,r,"avg")}}Xb.className="AveragePooling3D";X(Xb);class Yb extends Ce{constructor(e){super(e),this.inputSpec=[new dt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new be}}class Zb extends Yb{constructor(e){super(e||{})}call(e,t){return P(()=>{const n=xe(e);return st(n,1)})}}Zb.className="GlobalAveragePooling1D";X(Zb);class Jb extends Yb{constructor(e){super(e||{})}call(e,t){return P(()=>{const n=xe(e);return Ds(n,1)})}}Jb.className="GlobalMaxPooling1D";X(Jb);class Qb extends Ce{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,it(this.dataFormat),this.inputSpec=[new dt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new be}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ew extends Qb{call(e,t){return P(()=>{const n=xe(e);return this.dataFormat==="channelsLast"?st(n,[1,2]):st(n,[2,3])})}}ew.className="GlobalAveragePooling2D";X(ew);class tw extends Qb{call(e,t){return P(()=>{const n=xe(e);return this.dataFormat==="channelsLast"?Ds(n,[1,2]):Ds(n,[2,3])})}}tw.className="GlobalMaxPooling2D";X(tw);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class sw extends Ce{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const o=t.layer,r=$n(o,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class nw extends sw{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=De(e),e.length<3)throw new O(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=De(e);const t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),o=e[1];return[n[0],o].concat(n.slice(1))}call(e,t){return P(()=>(e=xe(e),hb((a,i)=>[xe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}nw.className="TimeDistributed";X(nw);function G6(s){Xo(hA,"BidirectionalMergeMode",s)}const H6="concat";class ow extends sw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=$n(n),t.goBackwards=t.goBackwards!==!0;const o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=$n(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?H6:e.mergeMode,G6(this.mergeMode),e.weights)throw new be("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,o,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,o=[n]):this.mergeMode==null?o=[n,n.slice()]:o=[n],this.returnState?this.mergeMode==null?o.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):Gt(o)}apply(e,t){let n=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const r=ub(e,n,o,this.numConstants);if(e=r.inputs,n=r.initialState,o=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&o==null)return super.apply(e,t);const a=[],i=[];if(n!=null){const c=n.length;if(c%2>0)throw new O("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const p=n.map(u=>new dt({shape:u.shape}));this.forwardLayer.stateSpec=p.slice(0,c/2),this.backwardLayer.stateSpec=p.slice(c/2),i.push(...p)}if(o!=null)throw new be("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof hn;for(const c of a)if(c instanceof hn!==l)throw new O("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[e].concat(a),p=this.inputSpec.concat(i),u=this.inputSpec;this.inputSpec=p;const h=super.apply(c,t);return this.inputSpec=u,h}else return super.apply(e,t)}call(e,t){return P(()=>{const n=t.initialState;let o,r;if(n==null)o=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const l=n.slice(0,n.length/2),c=n.slice(n.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(r.slice(1))),o=o[0],r=r[0]),this.returnSequences&&(r=Os(r,1));let i;return this.mergeMode==="concat"?i=Bm([o,r]):this.mergeMode==="sum"?i=K(o,r):this.mergeMode==="ave"?i=D(.5,K(o,r)):this.mergeMode==="mul"?i=D(o,r):this.mergeMode==null&&(i=[o,r]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){No(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),No(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){const r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=$n(t.layer);if(delete t.layer,t.numConstants!=null)throw new be("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=t;return o.layer=n,new e(o)}}ow.className="Bidirectional";X(ow);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class rw extends Ce{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return P(()=>(e=xe(e),e.dtype!=="float32"&&(e=cn(e,"float32")),K(D(e,this.scale),this.offset)))}}rw.className="Rescaling";X(rw);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:q6,cropAndResize:K6}=Us;class aw extends Ce{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,o,r,a,i,l){return P(()=>{let c,p=!1;const u=t/a,h=n/i,d=(o+t)/a,m=(r+n)/i,g=[u,h,d,m],f=[];e.rank===3?(p=!0,c=as([e])):c=e;for(let k=0;k<c.shape[0];k++)f.push(g);const x=Gs(f,[f.length,4]),y=Ir(0,f.length,1,"int32"),b=K6(c,x,y,[o,r],"nearest");return cn(p?xe(Fs(b)):b,l)})}upsize(e,t,n,o){return P(()=>{const r=q6(e,[t,n]);return cn(r,o)})}call(e,t){return P(()=>{const n=xe(e),o=n.dtype,r=n.shape,a=r[r.length-3],i=r[r.length-2];let l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let c=0;return i!==this.width&&(c=Math.floor((i-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(n,l,c,this.height,this.width,a,i,o):this.upsize(e,this.height,this.width,o)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=De(e);const t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}aw.className="CenterCrop";X(aw);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function X6(s,e,t,n){let o=xe(s);if(o.dtype!=="int32"&&(o=cn(o,"int32")),e==="int")return o;const r=o.shape;if(o.rank===0&&(o=zt(o,-1)),e==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=zt(o,-1)),o.rank>2)throw new O(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${r} which would result in output rank ${o.rank}.`);const a=["multiHot","oneHot"].includes(e),i=o;let l;if(typeof n<"u"&&e==="count"?l=Au(i,n,t,a):l=Au(i,[],t,a),e!=="tfIdf")return l;if(n)return D(l,n);throw new O("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class iw extends Ce{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=De(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return P(()=>{e=xe(e),e.dtype!=="int32"&&(e=cn(e,"int32"));let n;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new O(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);n=xe(t.countWeights)}const o=Ds(e),r=pa(e),a=us(this.numTokens,o).bufferSync().get(0),i=io(r,0).bufferSync().get(0);if(!(a&&i))throw new O(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return X6(e,this.outputMode,this.numTokens,n)})}}iw.className="CategoryEncoding";X(iw);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Y6=["bilinear","nearest"],wg=new Set(Y6);class lw extends Ce{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(wg.has(e.interpolation))this.interpolation=e.interpolation;else throw new O(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=De(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return P(()=>{const n=[this.height,this.width];if(this.interpolation==="bilinear")return Us.resizeBilinear(e,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Us.resizeNearestNeighbor(e,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...wg]} are supported`)})}}lw.className="Resizing";X(lw);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class cw{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}cw.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pw extends Ce{constructor(e){super(e),this.randomGenerator=new cw(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}pw.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Z6=["bilinear","nearest"],vg=new Set(Z6);class uw extends pw{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new O(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new O(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new O(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n)if(vg.has(n))this.interpolation=n;else throw new O(`Invalid interpolation parameter: ${n} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=De(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return P(()=>{const n=xe(e);this.imgHeight=n.shape[n.shape.length-3];const o=n.shape[n.shape.length-2];this.widthFactor=Ho([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*o;r=Math.round(r);const a=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return Us.resizeBilinear(e,a);case"nearest":return Us.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...vg]} are supported`)}})}}uw.className="RandomWidth";X(uw);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6=L();J6.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,s=>{s&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var vs;(function(s){s[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_QINT16=15]="DT_QINT16",s[s.DT_QUINT16=16]="DT_QUINT16",s[s.DT_UINT16=17]="DT_UINT16",s[s.DT_COMPLEX128=18]="DT_COMPLEX128",s[s.DT_HALF=19]="DT_HALF",s[s.DT_RESOURCE=20]="DT_RESOURCE",s[s.DT_VARIANT=21]="DT_VARIANT",s[s.DT_UINT32=22]="DT_UINT32",s[s.DT_UINT64=23]="DT_UINT64",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",s[s.DT_QINT16_REF=115]="DT_QINT16_REF",s[s.DT_QUINT16_REF=116]="DT_QUINT16_REF",s[s.DT_UINT16_REF=117]="DT_UINT16_REF",s[s.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",s[s.DT_HALF_REF=119]="DT_HALF_REF",s[s.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",s[s.DT_VARIANT_REF=121]="DT_VARIANT_REF",s[s.DT_UINT32_REF=122]="DT_UINT32_REF",s[s.DT_UINT64_REF=123]="DT_UINT64_REF"})(vs||(vs={}));var kg;(function(s){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(s.CheckpointFormatVersion||(s.CheckpointFormatVersion={}))})(kg||(kg={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6={};function hw(s){return Q6[s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v(s,e,t,n,o){const r=e.inputParams[s];if(r&&r.inputIndexStart!==void 0){const i=r.inputIndexStart,l=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?i+1:r.inputIndexEnd,c=i<0?e.inputNames.length+i:i;if(r.type==="tensor")return Ct(e.inputNames[c],t,n,o);if(r.type==="tensors"){const h=e.inputs.slice(i,l);return e.inputNames.slice(i,l).filter((m,g)=>{var f;return((f=h[g])===null||f===void 0?void 0:f.op)!=="NoOp"}).map(m=>Ct(m,t,n,o))}const p=Ct(e.inputNames[c],t,n,o),u=p.dataSync();return r.type==="number"?u[0]:_s(p.shape,u)}const a=e.attrParams[s];return a&&a.value}function Ct(s,e,t,n){const[o,r]=Jt(s,t);if(n!=null){const i=n.getHashTableHandleByName(o);if(i!=null)return i}const a=t.currentContextIds.find(i=>!!e[Dl(o,i)]);return a!==void 0?e[Dl(o,a)][r]:void 0}function $g(s,e,t){return e[Dl(s,t.currentContextId)]}function bn(s,e){const[t,n,o]=Jt(s,e);return[Dl(t,e&&e.currentContextId),n,o]}function Dl(s,e){return e?`${s}-${e}`:s}function Jt(s,e){if(s==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const r=e.parseNodeNameCache.get(s);if(r!=null)return r}const n=s.split(":");let o;if(n.length===1)o=[s,0,void 0];else{const r=n[0],a=n.length===3?n[1]:void 0,i=Number(n[n.length-1]);o=[r,i,a]}return t&&e.parseNodeNameCache.set(s,o),o}function pl(s,e,t){let n=v("pad",s,e,t);if(n==="explicit"){n=v("explicitPaddings",s,e,t);const o=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)o[r][0]=n[r*2],o[r][1]=n[r*2+1];return o}return n}function wn(s){return s.kept?s:kn(s)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e_=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],t_=Object.freeze(Object.defineProperty({__proto__:null,json:e_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s_=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],n_=Object.freeze(Object.defineProperty({__proto__:null,json:s_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o_=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],r_=Object.freeze(Object.defineProperty({__proto__:null,json:o_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a_=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],i_=Object.freeze(Object.defineProperty({__proto__:null,json:a_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l_=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],c_=Object.freeze(Object.defineProperty({__proto__:null,json:l_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p_=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],u_=Object.freeze(Object.defineProperty({__proto__:null,json:p_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h_=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],d_=Object.freeze(Object.defineProperty({__proto__:null,json:h_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m_=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],f_=Object.freeze(Object.defineProperty({__proto__:null,json:m_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g_=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],x_=Object.freeze(Object.defineProperty({__proto__:null,json:g_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y_=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],b_=Object.freeze(Object.defineProperty({__proto__:null,json:y_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w_=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],v_=Object.freeze(Object.defineProperty({__proto__:null,json:w_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k_=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],$_=Object.freeze(Object.defineProperty({__proto__:null,json:k_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I_=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],C_=Object.freeze(Object.defineProperty({__proto__:null,json:I_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N_=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],S_=Object.freeze(Object.defineProperty({__proto__:null,json:N_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T_=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],E_=Object.freeze(Object.defineProperty({__proto__:null,json:T_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A_=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],__=Object.freeze(Object.defineProperty({__proto__:null,json:A_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D_=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],R_=Object.freeze(Object.defineProperty({__proto__:null,json:D_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O_=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],F_=Object.freeze(Object.defineProperty({__proto__:null,json:O_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P_=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],L_=Object.freeze(Object.defineProperty({__proto__:null,json:P_},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ig{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[t_,n_,r_,i_,c_,u_,d_,f_,x_,b_,v_,$_,C_,S_,E_,__,R_,F_,L_],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(e,t={}){const n=e.node,o=[],r=[],a=[],i=n.reduce((g,f)=>(g[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?o.push(g[f.name]):f.op==="Const"?r.push(g[f.name]):(f.input==null||f.input.length===0)&&a.push(g[f.name]),g),{});let l=[];const c=[];let p={},u={};t!=null&&(p=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach(g=>{const f=i[g];f.inputNames.forEach((x,y)=>{const[w,,b]=bn(x),k=i[w];if(k.outputs!=null){const I=k.outputs.indexOf(b);if(I!==-1){const N=`${w}:${I}`;f.inputNames[y]=N}}f.inputs.push(k),k.children.push(f)})}),Object.keys(u).length===0?h.forEach(g=>{const f=i[g];f.children.length===0&&c.push(f)}):Object.keys(u).forEach(g=>{const[f]=bn(g),x=i[f];x!=null&&(x.signatureKey=u[g],c.push(x))}),Object.keys(p).length>0?Object.keys(p).forEach(g=>{const[f]=bn(g),x=i[f];x&&(x.signatureKey=p[g],l.push(x))}):l=o;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((g,f)=>(g[f.signature.name]=this.mapFunction(f),g),{}));const m={nodes:i,inputs:l,outputs:c,weights:r,placeholders:o,signature:t,functions:d};return a.length>0&&(m.initNodes=a),m}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=hw(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((o,r)=>(o[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},o),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((o,r)=>{const a=r.type;let i;switch(r.type){case"string":i=Ju(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Ju(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=rh(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=rh(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=eh(e.attr,r.tfName,r.defaultValue||0),i===void 0&&r.tfDeprecatedName&&(i=eh(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=oh(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=oh(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=Qu(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Qu(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=ih(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=ih(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=nh(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=nh(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=ah(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=ah(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=th(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=th(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=sh(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=sh(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=Cg(e.attr,r.tfName,r.defaultValue),i===void 0&&r.tfDeprecatedName&&(i=Cg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return o[r.name]={value:i,type:a},o},{})),n}mapFunction(e){const t=e.nodeDef,n=[],o=[];let r={};t!=null&&(r=t.reduce((u,h)=>(u[h.name]=this.mapNode(h),h.op==="Const"&&o.push(u[h.name]),u),{}));const a=[],i=[];e.signature.inputArg.forEach(u=>{const[h]=bn(u.name),d={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:rf(u.type),type:"dtype"}},children:[]};d.signatureKey=u.name,a.push(d),r[h]=d}),Object.keys(r).forEach(u=>{const h=r[u];h.inputNames.forEach((d,m)=>{const[g,,f]=bn(d),x=r[g];if(x.outputs!=null){const y=x.outputs.indexOf(f);if(y!==-1){const w=`${g}:${y}`;h.inputNames[m]=w}}h.inputs.push(x),x.children.push(h)})});const c=e.ret;e.signature.outputArg.forEach(u=>{const[h,d]=bn(c[u.name]),m=r[h];m!=null&&(m.defaultOutput=d,i.push(m))});const p=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:i,weights:o,placeholders:n,signature:p}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}}function z_(s){if(L().global,typeof globalThis.atob<"u")return globalThis.atob(s);if(typeof Buffer<"u")return new Buffer(s,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function dw(s,e){const t=Array.isArray(s)?String.fromCharCode.apply(null,s):z_(s);return e?t:t.toLowerCase()}function Ju(s,e,t,n=!1){const o=s[e];return o!=null?dw(o.s,n):t}function Qu(s,e,t){const n=s[e];return n?n.b:t}function eh(s,e,t){const n=s[e]||{},o=n.i!=null?n.i:n.f!=null?n.f:t;return typeof o=="number"?o:parseInt(o,10)}function rf(s){switch(typeof s=="string"&&(s=vs[s]),s){case vs.DT_FLOAT:case vs.DT_HALF:return"float32";case vs.DT_INT32:case vs.DT_INT64:case vs.DT_INT8:case vs.DT_UINT8:return"int32";case vs.DT_BOOL:return"bool";case vs.DT_DOUBLE:return"float32";case vs.DT_STRING:return"string";default:return null}}function Cg(s,e,t){const n=s[e];return n&&n.func?n.func.name:t}function th(s,e,t){const n=s[e];return n&&n.type?rf(n.type):t}function sh(s,e,t){const n=s[e];return n&&n.list&&n.list.type?n.list.type.map(o=>rf(o)):t}function mw(s){if(!s.unknownRank)return s.dim!=null?s.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function nh(s,e,t){const n=s[e];return n&&n.shape?mw(n.shape):t}function oh(s,e,t){const n=s[e];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):t}function rh(s,e,t,n=!1){const o=s[e];return o&&o.list&&o.list.s?o.list.s.map(r=>dw(r,n)):t}function ah(s,e,t){const n=s[e];return n&&n.list&&n.list.shape?n.list.shape.map(o=>mw(o)):t}function ih(s,e,t){const n=s[e];return n&&n.list&&n.list.b?n.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j_{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(o=>this.getInput(o)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((o,r)=>(o[r]=this.getAttr(r),o),{}))}getInput(e){return Ct(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(n.tensor!=null)return Ct(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return eh(this.node.rawAttrs,e,t);if(n.s!=null)return Ju(this.node.rawAttrs,e,t);if(n.b!=null)return Qu(this.node.rawAttrs,e,t);if(n.shape!=null)return nh(this.node.rawAttrs,e,t);if(n.type!=null)return th(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return oh(this.node.rawAttrs,e,t);if(n.list.s!=null)return rh(this.node.rawAttrs,e,t);if(n.list.shape!=null)return ah(this.node.rawAttrs,e,t);if(n.list.b!=null)return ih(this.node.rawAttrs,e,t);if(n.list.type!=null)return sh(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const At=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:L0,abs:ut,acos:Q0,acosh:ex,add:K,addN:r$,all:Td,any:vl,argMax:wr,argMin:tx,asin:sx,asinh:nx,atan:ox,atan2:rx,atanh:ax,avgPool:Kc,avgPool3d:ix,basicLSTMCell:T$,batchNorm:vi,batchNorm2d:lx,batchNorm3d:cx,batchNorm4d:px,batchToSpaceND:Xc,bincount:ux,bitwiseAnd:L$,booleanMaskAsync:bS,broadcastArgs:j$,broadcastTo:mr,buffer:ke,cast:ne,ceil:hx,clipByValue:os,clone:kn,complex:Hn,concat:pt,concat1d:dx,concat2d:mx,concat3d:fx,concat4d:gx,conv1d:Ad,conv2d:Kn,conv2dTranspose:Dd,conv3d:xx,conv3dTranspose:bx,cos:Yc,cosh:Rd,cosineWindow:nm,cumprod:kl,cumsum:Od,denseBincount:Au,depthToSpace:wx,depthwiseConv2d:ki,diag:lI,dilation2d:vx,div:ue,divNoNan:kx,dot:$x,dropout:Yx,einsum:lr,elu:$i,enclosingPowerOfTwo:Zx,ensureShape:yI,equal:qs,erf:Ix,euclideanNorm:Sx,exp:rs,expandDims:zt,expm1:Tx,eye:Pd,fft:pp,fill:Fr,floor:Ci,floorDiv:Sd,fused:MS,gather:Ni,gatherND:ES,greater:us,greaterEqual:io,ifft:ma,imag:Zc,image:Us,inTopKAsync:RS,irfft:Zd,isFinite:Ex,isInf:Ax,isNaN:_x,leakyRelu:Jc,less:ua,lessEqual:Uo,linalg:r1,linspace:UI,localResponseNormalization:Dx,log:fs,log1p:Qc,logSigmoid:Rx,logSoftmax:Ld,logSumExp:ep,logicalAnd:un,logicalNot:tp,logicalOr:zd,logicalXor:Ox,losses:y3,lowerBound:aC,matMul:Ne,max:Ds,maxPool:sp,maxPool3d:Fx,maxPoolWithArgmax:pC,maximum:En,mean:st,meshgrid:dC,min:pa,minimum:Oo,mirrorPad:Px,mod:Lx,moments:np,movingAverage:kS,mul:D,multiRNNCell:bC,multinomial:vC,neg:He,norm:Ii,notEqual:$r,oneHot:Bd,ones:ts,onesLike:gs,op:A,outerProduct:NC,pad:lo,pad1d:EC,pad2d:_C,pad3d:RC,pad4d:FC,pool:zx,pow:Xn,prelu:rp,print:Z0,prod:jx,raggedGather:WC,raggedRange:GC,raggedTensorToTensor:qC,rand:XC,randomGamma:fN,randomNormal:Vd,randomStandardNormal:yN,randomUniform:Ho,randomUniformInt:vN,range:Ir,real:ha,reciprocal:Bx,relu:mn,relu6:Wd,reshape:R,reverse:Os,reverse1d:TN,reverse2d:AN,reverse3d:DN,reverse4d:ON,rfft:up,round:Ud,rsqrt:Gd,scalar:me,scatterND:IS,searchSorted:jd,selu:Hd,separableConv2d:qd,setdiff1dAsync:BN,sigmoid:an,sign:Mx,signal:x3,sin:Kd,sinh:Xd,slice:Te,slice1d:ip,slice2d:Yd,slice3d:lp,slice4d:da,softmax:cp,softplus:Pr,spaceToBatchND:op,sparse:b3,sparseToDense:SS,spectral:g3,split:ss,sqrt:Ot,square:ze,squaredDifference:Jd,squeeze:qo,stack:as,step:Lr,stridedSlice:Vx,string:w3,sub:ie,sum:le,tan:Wx,tanh:vr,tensor:Gs,tensor1d:Bt,tensor2d:aa,tensor3d:Ux,tensor4d:aS,tensor5d:iS,tensor6d:lS,tensorScatterUpdate:pS,tile:Ts,topk:Hx,transpose:Ee,truncatedNormal:em,unique:qx,unsortedSegmentSum:tm,unstack:Fs,upperBound:gS,variable:Kx,where:Dt,whereAsync:Xx,zeros:ct,zerosLike:Ae},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B_=(s,e,t,n=At)=>{switch(s.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(v("a",s,e,t),v("b",s,e,t))];case"AddN":return[n.addN(v("tensors",s,e,t))];case"FloorMod":case"Mod":return[n.mod(v("a",s,e,t),v("b",s,e,t))];case"Mul":return[n.mul(v("a",s,e,t),v("b",s,e,t))];case"RealDiv":case"Div":return[n.div(v("a",s,e,t),v("b",s,e,t))];case"DivNoNan":return[n.divNoNan(v("a",s,e,t),v("b",s,e,t))];case"FloorDiv":return[n.floorDiv(v("a",s,e,t),v("b",s,e,t))];case"Sub":return[n.sub(v("a",s,e,t),v("b",s,e,t))];case"Minimum":return[n.minimum(v("a",s,e,t),v("b",s,e,t))];case"Maximum":return[n.maximum(v("a",s,e,t),v("b",s,e,t))];case"Pow":return[n.pow(v("a",s,e,t),v("b",s,e,t))];case"SquaredDifference":return[n.squaredDifference(v("a",s,e,t),v("b",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M_=(s,e,t,n=At)=>{switch(s.op){case"Abs":case"ComplexAbs":return[n.abs(v("x",s,e,t))];case"Acos":return[n.acos(v("x",s,e,t))];case"Acosh":return[n.acosh(v("x",s,e,t))];case"Asin":return[n.asin(v("x",s,e,t))];case"Asinh":return[n.asinh(v("x",s,e,t))];case"Atan":return[n.atan(v("x",s,e,t))];case"Atan2":return[n.atan2(v("x",s,e,t),v("y",s,e,t))];case"Atanh":return[n.atanh(v("x",s,e,t))];case"Ceil":return[n.ceil(v("x",s,e,t))];case"Complex":return[n.complex(v("real",s,e,t),v("imag",s,e,t))];case"Cos":return[n.cos(v("x",s,e,t))];case"Cosh":return[n.cosh(v("x",s,e,t))];case"Elu":return[n.elu(v("x",s,e,t))];case"Erf":return[n.erf(v("x",s,e,t))];case"Exp":return[n.exp(v("x",s,e,t))];case"Expm1":return[n.expm1(v("x",s,e,t))];case"Floor":return[n.floor(v("x",s,e,t))];case"Log":return[n.log(v("x",s,e,t))];case"Log1p":return[n.log1p(v("x",s,e,t))];case"Imag":return[n.imag(v("x",s,e,t))];case"Neg":return[n.neg(v("x",s,e,t))];case"Reciprocal":return[n.reciprocal(v("x",s,e,t))];case"Real":return[n.real(v("x",s,e,t))];case"Relu":return[n.relu(v("x",s,e,t))];case"Round":return[n.round(v("x",s,e,t))];case"Selu":return[n.selu(v("x",s,e,t))];case"Sigmoid":return[n.sigmoid(v("x",s,e,t))];case"Sin":return[n.sin(v("x",s,e,t))];case"Sign":return[n.sign(v("x",s,e,t))];case"Sinh":return[n.sinh(v("x",s,e,t))];case"Softplus":return[n.softplus(v("x",s,e,t))];case"Sqrt":return[n.sqrt(v("x",s,e,t))];case"Square":return[n.square(v("x",s,e,t))];case"Tanh":return[n.tanh(v("x",s,e,t))];case"Tan":return[n.tan(v("x",s,e,t))];case"ClipByValue":return[n.clipByValue(v("x",s,e,t),v("clipValueMin",s,e,t),v("clipValueMax",s,e,t))];case"Relu6":return[n.relu6(v("x",s,e,t))];case"Rsqrt":return[n.rsqrt(Ct(s.inputNames[0],e,t))];case"LeakyRelu":return[n.leakyRelu(v("x",s,e,t),v("alpha",s,e,t))];case"Prelu":return[n.prelu(v("x",s,e,t),v("alpha",s,e,t))];case"IsNan":return[n.isNaN(Ct(s.inputNames[0],e,t))];case"IsInf":return[n.isInf(Ct(s.inputNames[0],e,t))];case"IsFinite":return[n.isFinite(Ct(s.inputNames[0],e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(s,e,t=""){if(!(typeof s=="number"||typeof e=="number")){$(s.length===e.length,()=>t+` Shapes ${s} and ${e} must match`);for(let n=0;n<s.length;n++){const o=s[n],r=e[n];$(o<0||r<0||o===r,()=>t+` Shapes ${s} and ${e} must match`)}}}function Ng(s){return!(typeof s=="number"||s.some(e=>e<0))}function Qr(s,e,t){let n=lh(s,t);const o=!Ng(n);if(o&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&e.forEach(r=>{n=lh(r.shape,n)}),!Ng(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function lh(s,e){if(typeof s=="number")return e;if(typeof e=="number")return s;if(s.length!==e.length)throw new Error(`Incompatible ranks during merge: ${s} vs. ${e}`);const t=[];for(let n=0;n<s.length;++n){const o=s[n],r=e[n];if(o>=0&&r>=0&&o!==r)throw new Error(`Incompatible shape during merge: ${s} vs. ${e}`);t[n]=o>=0?o:r}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V_{constructor(e,t,n,o,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=o,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=me(0),wt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),$s(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,wt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,o)=>this.write(n,t[o]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let o=0;o<this.size();o++)e.push(o)}if(e.length===0)return Gs([],[0].concat(this.elementShape));const n=this.readMany(e);return $s(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),as(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Gs([],[0].concat(this.elementShape));const t=[];for(let o=0;o<this.size();o++)t.push(o);const n=this.readMany(t);return $s(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),pt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Fs(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const o=e.map(l=>(n+=l,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=n===0?0:t.size/n,a=[];P(()=>{t=R(t,[1,n,r]);for(let l=0;l<e.length;++l){const p=[0,l===0?0:o[l-1],0],u=[1,e[l],r];a[l]=R(Te(t,p,u),this.elementShape)}return a});const i=[];for(let l=0;l<e.length;l++)i[l]=l;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lo{get id(){return this.idTensor.id}constructor(e,t,n,o=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);$s(t,r.shape,"TensorList shape mismatch: "),wt(r)}),this.idTensor=me(0),this.maxNumElements=o,wt(this.idTensor)}copy(){return new Lo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);$s(e,this.elementShape,"TensorList shape mismatch: ");const o=Qr(this.elementShape,this.tensors,e);return P(()=>{const r=this.tensors.map(a=>R(a,o));return as(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const n=Qr(this.elementShape,this.tensors,e),o=this.tensors.pop();return o.kept=!1,$s(o.shape,e,"TensorList shape mismatch: "),R(o,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if($s(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");wt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Lo([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);$s(this.tensors[e].shape,t,"TensorList shape mismatch: ");const o=Qr(this.elementShape,this.tensors,t);return R(this.tensors[e],o)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);$s(this.elementShape,t.shape,"TensorList shape mismatch: "),wt(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);$s(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const o=Qr(this.elementShape,this.tensors,n);return e.length===0?Gs([],[0].concat(o)):P(()=>{const r=e.map(a=>R(this.tensors[a],o));return as(r,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);$s(this.elementShape,t,"TensorList shape mismatch: ");const n=Qr(this.elementShape,this.tensors,t);return this.size()===0?Gs([],[0].concat(n)):P(()=>{const o=this.tensors.map(r=>R(r,n));return pt(o,0)})}}function W_(s,e,t){const n=s.dtype;if(s.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${s.shape}`);if(s.dtype!==t)throw new Error(`Invalid data types; op elements ${s.dtype}, but list elements ${t}`);const o=s.shape.slice(1);$s(o,e,"TensorList shape mismatch: ");const r=Fs(s);return new Lo(r,e,n)}function U_(s,e,t,n){return new Lo([],s,e,n)}function G_(s,e,t,n){if(e.length!==s.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${s.shape[0]}`);const o=Math.max(...e);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);const r=new Lo([],t,s.dtype,n),a=Fs(s,0);return e.forEach((i,l)=>{r.setItem(i,a[l])}),r}function H_(s,e,t){let n=0;const o=e.map(p=>(n+=p,n));if(n!==s.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${s.shape}`);const r=s.shape.slice(1),a=lh(r,t),i=n===0?0:s.size/n,l=P(()=>{const p=[];s=R(s,[1,n,i]);for(let u=0;u<e.length;++u){const d=[0,u===0?0:o[u-1],0],m=[1,e[u],i];p[u]=R(Te(s,d,m),a)}return s.dispose(),p}),c=new Lo([],t,s.dtype,e.length);for(let p=0;p<l.length;p++)c.setItem(p,l[p]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q_=async(s,e,t)=>{switch(s.op){case"If":case"StatelessIf":{const n=v("thenBranch",s,e,t),o=v("elseBranch",s,e,t),r=v("cond",s,e,t),a=v("args",s,e,t);return(await r.data())[0]?t.functionMap[n].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[o].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const n=v("body",s,e,t),o=v("cond",s,e,t),r=v("args",s,e,t),a=await t.functionMap[o].executeFunctionAsync(r,t.tensorArrayMap,t.tensorListMap),i=r.map(p=>p.id);let l=await a[0].data();a.forEach(p=>{!p.kept&&i.indexOf(p.id)===-1&&p.dispose()});let c=r;for(;l[0];){const p=c;c=await t.functionMap[n].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const u=c.map(d=>d.id);p.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&u.indexOf(d.id)===-1&&d.dispose()});const h=await t.functionMap[o].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);l=await h[0].data(),h.forEach(d=>{!d.kept&&i.indexOf(d.id)===-1&&u.indexOf(d.id)===-1&&d.dispose()})}return c}case"LoopCond":{const n=v("pred",s,e,t);return[wn(n)]}case"Switch":{const n=v("pred",s,e,t);let o=v("data",s,e,t);return o.kept||(o=wn(o)),(await n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{const n=s.inputNames.find(o=>Ct(o,e,t)!==void 0);if(n){const o=Ct(n,e,t);return[wn(o)]}return}case"Enter":{const n=v("frameName",s,e,t),o=v("tensor",s,e,t);return t.enterFrame(n),[wn(o)]}case"Exit":{const n=v("tensor",s,e,t);return t.exitFrame(),[wn(n)]}case"NextIteration":{const n=v("tensor",s,e,t);return t.nextIteration(),[wn(n)]}case"TensorArrayV3":{const n=v("size",s,e,t),o=v("dtype",s,e,t),r=v("elementShape",s,e,t),a=v("dynamicSize",s,e,t),i=v("clearAfterRead",s,e,t),l=v("identicalElementShapes",s,e,t),c=v("name",s,e,t),p=new V_(c,o,n,r,l,a,i);return t.addTensorArray(p),[p.idTensor,me(1)]}case"TensorArrayWriteV3":{const n=v("tensorArrayId",s,e,t),o=v("index",s,e,t),r=v("tensor",s,e,t),a=t.getTensorArray(n.id);return a.write(o,r),[a.idTensor]}case"TensorArrayReadV3":{const n=v("tensorArrayId",s,e,t),o=v("index",s,e,t);return[t.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{const n=v("tensorArrayId",s,e,t),o=v("indices",s,e,t),r=v("dtype",s,e,t);return[t.getTensorArray(n.id).gather(o,r)]}case"TensorArrayScatterV3":{const n=v("tensorArrayId",s,e,t),o=v("indices",s,e,t),r=v("tensor",s,e,t),a=t.getTensorArray(n.id);return a.scatter(o,r),[a.idTensor]}case"TensorArrayConcatV3":{const n=v("tensorArrayId",s,e,t),o=t.getTensorArray(n.id),r=v("dtype",s,e,t);return[o.concat(r)]}case"TensorArraySplitV3":{const n=v("tensorArrayId",s,e,t),o=v("tensor",s,e,t),r=v("lengths",s,e,t),a=t.getTensorArray(n.id);return a.split(r,o),[a.idTensor]}case"TensorArraySizeV3":{const n=v("tensorArrayId",s,e,t),o=t.getTensorArray(n.id);return[me(o.size(),"int32")]}case"TensorArrayCloseV3":{const n=v("tensorArrayId",s,e,t),o=t.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{const n=v("tensorListId",s,e,t),o=v("index",s,e,t),r=v("tensor",s,e,t),a=t.getTensorList(n.id);return a.setItem(o,r),[a.idTensor]}case"TensorListGetItem":{const n=v("tensorListId",s,e,t),o=v("index",s,e,t),r=v("elementShape",s,e,t),a=v("elementDType",s,e,t);return[t.getTensorList(n.id).getItem(o,r,a)]}case"TensorListScatterV2":case"TensorListScatter":{const n=v("indices",s,e,t),o=v("tensor",s,e,t),r=v("elementShape",s,e,t),a=v("numElements",s,e,t),i=G_(o,n,r,a);return t.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const n=v("elementShape",s,e,t),o=v("elementDType",s,e,t);let r;s.op==="TensorListReserve"?r="numElements":r="maxNumElements";const a=v(r,s,e,t),i=s.op==="TensorListReserve"?-1:a,l=U_(n,o,a,i);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const n=v("tensorListId",s,e,t),o=v("indices",s,e,t),r=v("elementShape",s,e,t),a=v("elementDType",s,e,t);return[t.getTensorList(n.id).gather(o,a,r)]}case"TensorListStack":{const n=v("tensorListId",s,e,t),o=v("elementShape",s,e,t),r=v("elementDType",s,e,t),a=v("numElements",s,e,t);return[t.getTensorList(n.id).stack(o,r,a)]}case"TensorListFromTensor":{const n=v("tensor",s,e,t),o=v("elementShape",s,e,t),r=v("elementDType",s,e,t),a=W_(n,o,r);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const n=v("tensorListId",s,e,t),o=t.getTensorList(n.id),r=v("dtype",s,e,t),a=v("elementShape",s,e,t);return[o.concat(r,a)]}case"TensorListPushBack":{const n=v("tensorListId",s,e,t),o=v("tensor",s,e,t),r=t.getTensorList(n.id);return r.pushBack(o),[r.idTensor]}case"TensorListPopBack":{const n=v("tensorListId",s,e,t),o=v("elementShape",s,e,t),r=v("elementDType",s,e,t);return[t.getTensorList(n.id).popBack(o,r)]}case"TensorListSplit":{const n=v("tensor",s,e,t),o=v("elementShape",s,e,t),r=v("lengths",s,e,t),a=H_(n,r,o);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const n=v("tensorListId",s,e,t),o=t.getTensorList(n.id);return[me(o.size(),"int32")]}case"TensorListResize":{const n=v("tensorListId",s,e,t),o=v("size",s,e,t),a=t.getTensorList(n.id).resize(o);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sg(s,e,t){const[n,o]=v("fusedOps",s,e,t),r=n==="biasadd",a=!r,i=o==="prelu",l=n==="fusedbatchnorm",c=v("numArgs",s,e,t);if(r){if(i&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&r&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const p=v("strides",s,e,t),u=pl(s,e,t),h=v("dataFormat",s,e,t).toUpperCase(),d=v("dilations",s,e,t);let[m,g]=v("args",s,e,t);a&&(g=m,m=void 0);const f=v("leakyreluAlpha",s,e,t);return{stride:p,pad:u,dataFormat:h,dilations:d,biasArg:m,preluArg:g,activationFunc:o,leakyreluAlpha:f}}const K_=(s,e,t,n=At)=>{switch(s.op){case"Conv1D":{const o=v("stride",s,e,t),r=v("pad",s,e,t),a=v("dataFormat",s,e,t).toUpperCase(),i=v("dilation",s,e,t);return[n.conv1d(v("x",s,e,t),v("filter",s,e,t),o,r,a,i)]}case"Conv2D":{const o=v("strides",s,e,t),r=pl(s,e,t),a=v("dataFormat",s,e,t).toUpperCase(),i=v("dilations",s,e,t);return[n.conv2d(v("x",s,e,t),v("filter",s,e,t),[o[1],o[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:o,pad:r,dataFormat:a,dilations:i,biasArg:l,preluArg:c,activationFunc:p,leakyreluAlpha:u}=Sg(s,e,t);return[n.fused.conv2d({x:v("x",s,e,t),filter:v("filter",s,e,t),strides:[o[1],o[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:l,activation:p,preluActivationWeights:c,leakyreluAlpha:u})]}case"FusedDepthwiseConv2dNative":{const{stride:o,pad:r,dataFormat:a,dilations:i,biasArg:l,preluArg:c,activationFunc:p,leakyreluAlpha:u}=Sg(s,e,t);return[n.fused.depthwiseConv2d({x:v("x",s,e,t),filter:v("filter",s,e,t),strides:[o[1],o[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:l,activation:p,preluActivationWeights:c,leakyreluAlpha:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const o=v("outputShape",s,e,t),r=v("strides",s,e,t),a=pl(s,e,t);return[n.conv2dTranspose(v("x",s,e,t),v("filter",s,e,t),o,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const o=v("strides",s,e,t),r=pl(s,e,t),a=v("dilations",s,e,t),i=v("dataFormat",s,e,t).toUpperCase();return[n.depthwiseConv2d(v("input",s,e,t),v("filter",s,e,t),[o[1],o[2]],r,i,[a[1],a[2]])]}case"Conv3D":{const o=v("strides",s,e,t),r=v("pad",s,e,t),a=v("dataFormat",s,e,t).toUpperCase(),i=v("dilations",s,e,t);return[n.conv3d(v("x",s,e,t),v("filter",s,e,t),[o[1],o[2],o[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{const o=v("strides",s,e,t),r=v("pad",s,e,t),a=v("kernelSize",s,e,t);return[n.avgPool(v("x",s,e,t),[a[1],a[2]],[o[1],o[2]],r)]}case"MaxPool":{const o=v("strides",s,e,t),r=v("pad",s,e,t),a=v("kernelSize",s,e,t);return[n.maxPool(v("x",s,e,t),[a[1],a[2]],[o[1],o[2]],r)]}case"MaxPoolWithArgmax":{const o=v("strides",s,e,t),r=v("pad",s,e,t),a=v("kernelSize",s,e,t),i=v("includeBatchInIndex",s,e,t),{result:l,indexes:c}=n.maxPoolWithArgmax(v("x",s,e,t),[a[1],a[2]],[o[1],o[2]],r,i);return[l,c]}case"AvgPool3D":{const o=v("strides",s,e,t),r=v("pad",s,e,t),a=v("kernelSize",s,e,t);return[n.avgPool3d(v("x",s,e,t),[a[1],a[2],a[3]],[o[1],o[2],o[3]],r)]}case"MaxPool3D":{const o=v("strides",s,e,t),r=v("pad",s,e,t),a=v("kernelSize",s,e,t);return[n.maxPool3d(v("x",s,e,t),[a[1],a[2],a[3]],[o[1],o[2],o[3]],r)]}case"Dilation2D":{const o=v("strides",s,e,t),r=v("pad",s,e,t),a=v("dilations",s,e,t),i=o[1],l=o[2],c=a[1],p=a[2];return[n.dilation2d(v("x",s,e,t),v("filter",s,e,t),[i,l],r,[c,p],"NHWC")]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X_=(s,e,t,n=At)=>{switch(s.op){case"Fill":{const o=v("shape",s,e,t),r=v("dtype",s,e,t),a=v("value",s,e,t);return[n.fill(o,a,r)]}case"LinSpace":{const o=v("start",s,e,t),r=v("stop",s,e,t),a=v("num",s,e,t);return[n.linspace(o,r,a)]}case"Multinomial":{const o=v("logits",s,e,t),r=v("numSamples",s,e,t),a=v("seed",s,e,t);return[n.multinomial(o,r,a)]}case"OneHot":{const o=v("indices",s,e,t),r=v("depth",s,e,t),a=v("onValue",s,e,t),i=v("offValue",s,e,t),l=v("dtype",s,e,t);return[n.oneHot(o,r,a,i,l)]}case"Ones":return[n.ones(v("shape",s,e,t),v("dtype",s,e,t))];case"OnesLike":return[n.onesLike(v("x",s,e,t))];case"RandomStandardNormal":return[n.randomStandardNormal(v("shape",s,e,t),v("dtype",s,e,t),v("seed",s,e,t))];case"RandomUniform":return[n.randomUniform(v("shape",s,e,t),v("minval",s,e,t),v("maxval",s,e,t),v("dtype",s,e,t))];case"RandomUniformInt":return[n.randomUniformInt(v("shape",s,e,t),v("minval",s,e,t),v("maxval",s,e,t),v("seed",s,e,t))];case"Range":{const o=v("start",s,e,t),r=v("stop",s,e,t),a=v("step",s,e,t);return[n.range(o,r,a,v("dtype",s,e,t))]}case"TruncatedNormal":{const o=v("shape",s,e,t),r=v("mean",s,e,t),a=v("stdDev",s,e,t),i=v("seed",s,e,t);return[n.truncatedNormal(o,r,a,v("dtype",s,e,t),i)]}case"Zeros":return[n.zeros(v("shape",s,e,t),v("dtype",s,e,t))];case"ZerosLike":return[n.zerosLike(v("x",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zp(s,e,t){const n=v("boxes",s,e,t),o=v("scores",s,e,t),r=v("maxOutputSize",s,e,t),a=v("iouThreshold",s,e,t),i=v("scoreThreshold",s,e,t),l=v("softNmsSigma",s,e,t);return{boxes:n,scores:o,maxOutputSize:r,iouThreshold:a,scoreThreshold:i,softNmsSigma:l}}const Y_=async(s,e,t,n,o=At)=>{switch(s.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:l,scoreThreshold:c,softNmsSigma:p}=Zp(s,e,t),u=await o.image.nonMaxSuppressionWithScoreAsync(r,a,i,l,c,p);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:l,scoreThreshold:c}=Zp(s,e,t),p=v("padToMaxOutputSize",s,e,t),u=await o.image.nonMaxSuppressionPaddedAsync(r,a,i,l,c,p);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:l,scoreThreshold:c}=Zp(s,e,t);return[await o.image.nonMaxSuppressionAsync(r,a,i,l,c)]}case"Where":{const r=o.cast(v("condition",s,e,t),"bool"),a=[await o.whereAsync(r)];return r.dispose(),a}case"ListDiff":return o.setdiff1dAsync(v("x",s,e,t),v("y",s,e,t));default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z_=(s,e,t,n=At)=>{switch(s.op){case"LowerBound":{const o=v("sortedSequence",s,e,t),r=v("values",s,e,t);return[n.lowerBound(o,r)]}case"TopKV2":{const o=v("x",s,e,t),r=v("k",s,e,t),a=v("sorted",s,e,t),i=n.topk(o,r,a);return[i.values,i.indices]}case"UpperBound":{const o=v("sortedSequence",s,e,t),r=v("values",s,e,t);return[n.upperBound(o,r)]}case"Unique":{const o=v("x",s,e,t),r=n.unique(o);return[r.values,r.indices]}case"UniqueV2":{const o=v("x",s,e,t),r=v("axis",s,e,t),a=n.unique(o,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J_=(s,e,t,n=At)=>{switch(s.op){case"Const":return e[s.name];case"PlaceholderWithDefault":const o=v("default",s,e,t);return[Ct(s.name,e,t)||o];case"Placeholder":return[Ct(s.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const p=v("x",s,e,t);return[wn(p)]}case"IdentityN":return v("x",s,e,t).map(p=>wn(p));case"Snapshot":const r=v("x",s,e,t);return[wn(r)];case"Shape":return[n.tensor1d(v("x",s,e,t).shape,"int32")];case"ShapeN":return v("x",s,e,t).map(p=>n.tensor1d(p.shape));case"Size":return[n.scalar(v("x",s,e,t).size,"int32")];case"Rank":return[n.scalar(v("x",s,e,t).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":const a=v("x",s,e,t),i=v("data",s,e,t),l=v("message",s,e,t),c=v("summarize",s,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let p=0;p<i.length;p++)console.log(Array.prototype.slice.call(i[p].dataSync()).slice(0,c));return[a];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q_{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=me(0),this.tensorMap=new Map,wt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return me(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),P(()=>{const o=Fs(t),r=n.length,a=o.length;$(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let i=0;i<r;i++){const l=n[i],c=o[i];wt(c),this.tensorMap.set(l,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return P(()=>{const o=[];for(let r=0;r<n.length;r++){const a=n[r],i=this.findWithDefault(a,t);o.push(i)}return as(o)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return n??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eD=async(s,e,t,n)=>{switch(s.op){case"HashTable":case"HashTableV2":{const o=n.getHashTableHandleByName(s.name);if(o!=null)return[o];{const r=v("keyDType",s,e,t),a=v("valueDType",s,e,t),i=new Q_(r,a);return n.addHashTable(s.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const o=v("tableHandle",s,e,t,n),r=v("keys",s,e,t),a=v("values",s,e,t);return[await n.getHashTableById(o.id).import(r,a)]}case"LookupTableFind":case"LookupTableFindV2":{const o=v("tableHandle",s,e,t,n),r=v("keys",s,e,t),a=v("defaultValue",s,e,t);return[await n.getHashTableById(o.id).find(r,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const o=v("tableHandle",s,e,t,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tD=(s,e,t,n=At)=>{switch(s.op){case"ResizeBilinear":{const o=v("images",s,e,t),r=v("size",s,e,t),a=v("alignCorners",s,e,t),i=v("halfPixelCenters",s,e,t);return[n.image.resizeBilinear(o,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{const o=v("images",s,e,t),r=v("size",s,e,t),a=v("alignCorners",s,e,t),i=v("halfPixelCenters",s,e,t);return[n.image.resizeNearestNeighbor(o,[r[0],r[1]],a,i)]}case"CropAndResize":{const o=v("image",s,e,t),r=v("boxes",s,e,t),a=v("boxInd",s,e,t),i=v("cropSize",s,e,t),l=v("method",s,e,t),c=v("extrapolationValue",s,e,t);return[n.image.cropAndResize(o,r,a,i,l,c)]}case"ImageProjectiveTransformV3":{const o=v("images",s,e,t),r=v("transforms",s,e,t),a=v("outputShape",s,e,t),i=v("fillValue",s,e,t),l=v("interpolation",s,e,t),c=v("fillMode",s,e,t);return[n.image.transform(o,r,l.toLowerCase(),c.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sD=(s,e,t,n=At)=>{switch(s.op){case"Equal":return[n.equal(v("a",s,e,t),v("b",s,e,t))];case"NotEqual":return[n.notEqual(v("a",s,e,t),v("b",s,e,t))];case"Greater":return[n.greater(v("a",s,e,t),v("b",s,e,t))];case"GreaterEqual":return[n.greaterEqual(v("a",s,e,t),v("b",s,e,t))];case"Less":return[n.less(v("a",s,e,t),v("b",s,e,t))];case"LessEqual":return[n.lessEqual(v("a",s,e,t),v("b",s,e,t))];case"LogicalAnd":return[n.logicalAnd(v("a",s,e,t),v("b",s,e,t))];case"LogicalNot":return[n.logicalNot(v("a",s,e,t))];case"LogicalOr":return[n.logicalOr(v("a",s,e,t),v("b",s,e,t))];case"Select":case"SelectV2":return[n.where(v("condition",s,e,t),v("a",s,e,t),v("b",s,e,t))];case"BitwiseAnd":return[n.bitwiseAnd(v("a",s,e,t),v("b",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nD=(s,e,t,n=At)=>{switch(s.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(v("a",s,e,t),v("b",s,e,t),v("transposeA",s,e,t),v("transposeB",s,e,t))];case"Einsum":return[n.einsum(v("equation",s,e,t),...v("tensors",s,e,t))];case"Transpose":return[n.transpose(v("x",s,e,t),v("perm",s,e,t))];case"_FusedMatMul":const[o,r]=v("fusedOps",s,e,t),a=o==="biasadd",i=r==="prelu",l=v("numArgs",s,e,t),c=v("leakyreluAlpha",s,e,t);if(a){if(i&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[p,u]=v("args",s,e,t);return[n.fused.matMul({a:v("a",s,e,t),b:v("b",s,e,t),transposeA:v("transposeA",s,e,t),transposeB:v("transposeB",s,e,t),bias:p,activation:r,preluActivationWeights:u,leakyreluAlpha:c})];case"MatrixBandPart":return[n.linalg.bandPart(v("a",s,e,t),v("numLower",s,e,t),v("numUpper",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oD=(s,e,t,n=At)=>{switch(s.op){case"EuclideanNorm":return[n.euclideanNorm(v("x",s,e,t),v("axis",s,e,t),v("keepDims",s,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(v("x",s,e,t),v("mean",s,e,t),v("variance",s,e,t),v("offset",s,e,t),v("scale",s,e,t),v("epsilon",s,e,t))];case"FusedBatchNormV3":return[n.batchNorm(v("x",s,e,t),v("mean",s,e,t),v("variance",s,e,t),v("offset",s,e,t),v("scale",s,e,t),v("epsilon",s,e,t))];case"LRN":return[n.localResponseNormalization(v("x",s,e,t),v("radius",s,e,t),v("bias",s,e,t),v("alpha",s,e,t),v("beta",s,e,t))];case"Softmax":return[n.softmax(v("x",s,e,t))];case"LogSoftmax":return[n.logSoftmax(v("x",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rD=(s,e,t,n=At)=>{switch(s.op){case"RaggedGather":{const{outputNestedSplits:o,outputDenseValues:r}=n.raggedGather(v("paramsNestedSplits",s,e,t),v("paramsDenseValues",s,e,t),v("indices",s,e,t),v("outputRaggedRank",s,e,t));return o.concat(r)}case"RaggedRange":{const{rtNestedSplits:o,rtDenseValues:r}=n.raggedRange(v("starts",s,e,t),v("limits",s,e,t),v("splits",s,e,t));return[o,r]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(v("shape",s,e,t),v("values",s,e,t),v("defaultValue",s,e,t),v("rowPartitionTensors",s,e,t),v("rowPartitionTypes",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aD=(s,e,t,n=At)=>{switch(s.op){case"Max":{const i=v("axis",s,e,t),l=v("keepDims",s,e,t);return[n.max(v("x",s,e,t),i,l)]}case"Mean":{const i=v("axis",s,e,t),l=v("keepDims",s,e,t);return[n.mean(v("x",s,e,t),i,l)]}case"Min":{const i=v("axis",s,e,t),l=v("keepDims",s,e,t);return[n.min(v("x",s,e,t),i,l)]}case"Sum":{const i=v("axis",s,e,t),l=v("keepDims",s,e,t);return[n.sum(v("x",s,e,t),i,l)]}case"All":{const i=v("axis",s,e,t),l=v("keepDims",s,e,t);return[n.all(v("x",s,e,t),i,l)]}case"Any":{const i=v("axis",s,e,t),l=v("keepDims",s,e,t);return[n.any(v("x",s,e,t),i,l)]}case"ArgMax":{const i=v("axis",s,e,t);return[n.argMax(v("x",s,e,t),i)]}case"ArgMin":{const i=v("axis",s,e,t);return[n.argMin(v("x",s,e,t),i)]}case"Prod":{const i=v("axis",s,e,t),l=v("keepDims",s,e,t);return[n.prod(v("x",s,e,t),i,l)]}case"Cumprod":{const i=v("axis",s,e,t),l=v("exclusive",s,e,t),c=v("reverse",s,e,t);return[n.cumprod(v("x",s,e,t),i,l,c)]}case"Cumsum":{const i=v("axis",s,e,t),l=v("exclusive",s,e,t),c=v("reverse",s,e,t);return[n.cumsum(v("x",s,e,t),i,l,c)]}case"Bincount":const o=v("x",s,e,t),r=v("weights",s,e,t),a=v("size",s,e,t);return[n.bincount(o,r,a)];case"DenseBincount":{const i=v("x",s,e,t),l=v("weights",s,e,t),c=v("size",s,e,t),p=v("binaryOutput",s,e,t);return[n.denseBincount(i,l,c,p)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iD=(s,e,t,n=At)=>{switch(s.op){case"ConcatV2":case"Concat":{const o=v("n",s,e,t),r=v("axis",s,e,t);let a=v("tensors",s,e,t);return a=a.slice(0,o),[n.concat(a,r)]}case"Gather":{const o=v("x",s,e,t),r=v("indices",s,e,t);return[n.gather(o,n.cast(r,"int32"),0)]}case"GatherV2":{const o=v("axis",s,e,t),r=v("batchDims",s,e,t),a=v("x",s,e,t),i=v("indices",s,e,t);return[n.gather(a,n.cast(i,"int32"),o,r)]}case"Reverse":{const o=v("dims",s,e,t),r=[];for(let i=0;i<o.length;i++)o[i]&&r.push(i);const a=v("x",s,e,t);return[n.reverse(a,r)]}case"ReverseV2":{const o=v("axis",s,e,t),r=v("x",s,e,t);return[n.reverse(r,o)]}case"Slice":{const o=v("begin",s,e,t),r=v("size",s,e,t);return[n.slice(v("x",s,e,t),o,r)]}case"StridedSlice":{const o=v("begin",s,e,t),r=v("end",s,e,t),a=v("strides",s,e,t),i=v("beginMask",s,e,t),l=v("endMask",s,e,t),c=v("ellipsisMask",s,e,t),p=v("newAxisMask",s,e,t),u=v("shrinkAxisMask",s,e,t),h=v("x",s,e,t);return[n.stridedSlice(h,o,r,a,i,l,c,p,u)]}case"Pack":return P(()=>{const o=v("axis",s,e,t),r=v("tensors",s,e,t),a=r[0].shape,i=n.squeeze(r[0]).shape,l=r.map(c=>{const p=Se(c.shape,a);if(!p&&!Se(n.squeeze(c).shape,i))throw new Error("the input tensors shape does not match");return p?c:n.reshape(c,a)});return[n.stack(l,o)]});case"Unpack":{const o=v("axis",s,e,t),r=v("tensor",s,e,t);return n.unstack(r,o)}case"Tile":{const o=v("reps",s,e,t);return[n.tile(v("x",s,e,t),o)]}case"Split":case"SplitV":{const o=v("axis",s,e,t),r=v("numOrSizeSplits",s,e,t),a=v("x",s,e,t);return n.split(a,r,o)}case"ScatterNd":{const o=v("indices",s,e,t),r=v("values",s,e,t),a=v("shape",s,e,t);return[n.scatterND(o,r,a)]}case"GatherNd":{const o=v("x",s,e,t),r=v("indices",s,e,t);return[n.gatherND(o,r)]}case"SparseToDense":{const o=v("sparseIndices",s,e,t),r=v("outputShape",s,e,t),a=v("sparseValues",s,e,t),i=v("defaultValue",s,e,t);return[n.sparseToDense(o,a,r,a.dtype===i.dtype?i:n.cast(i,a.dtype))]}case"TensorScatterUpdate":{const o=v("indices",s,e,t),r=v("values",s,e,t),a=v("tensor",s,e,t);return[n.tensorScatterUpdate(a,o,r)]}default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lD=(s,e,t,n=At)=>{switch(s.op){case"SparseFillEmptyRows":{const{outputIndices:o,outputValues:r,emptyRowIndicator:a,reverseIndexMap:i}=n.sparse.sparseFillEmptyRows(v("indices",s,e,t),v("values",s,e,t),v("denseShape",s,e,t),v("defaultValue",s,e,t));return[o,r,a,i]}case"SparseReshape":{const{outputIndices:o,outputShape:r}=n.sparse.sparseReshape(v("inputIndices",s,e,t),v("inputShape",s,e,t),v("newShape",s,e,t));return[o,r]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(v("data",s,e,t),v("indices",s,e,t),v("segmentIds",s,e,t))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(v("data",s,e,t),v("indices",s,e,t),v("segmentIds",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cD=(s,e,t,n=At)=>{switch(s.op){case"FFT":return[n.fft(v("x",s,e,t))];case"IFFT":return[n.ifft(v("x",s,e,t))];case"RFFT":return[n.rfft(v("x",s,e,t))];case"IRFFT":return[n.irfft(v("x",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pD=(s,e,t,n=At)=>{switch(s.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(v("input",s,e,t),v("pattern",s,e,t),v("rewrite",s,e,t),v("replaceGlobal",s,e,t))];case"StringNGrams":{const{nGrams:o,nGramsSplits:r}=n.string.stringNGrams(v("data",s,e,t),v("dataSplits",s,e,t),v("separator",s,e,t),v("nGramWidths",s,e,t),v("leftPad",s,e,t),v("rightPad",s,e,t),v("padWidth",s,e,t),v("preserveShortSequences",s,e,t));return[o,r]}case"StringSplit":{const{indices:o,values:r,shape:a}=n.string.stringSplit(v("input",s,e,t),v("delimiter",s,e,t),v("skipEmpty",s,e,t));return[o,r,a]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(v("input",s,e,t),v("numBuckets",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uD=(s,e,t,n=At)=>{switch(s.op){case"Cast":return[n.cast(v("x",s,e,t),v("dtype",s,e,t))];case"ExpandDims":{const o=v("axis",s,e,t);return[n.expandDims(v("x",s,e,t),o)]}case"Squeeze":{const o=v("axis",s,e,t);return[n.squeeze(v("x",s,e,t),o)]}case"Reshape":return[n.reshape(v("x",s,e,t),v("shape",s,e,t))];case"EnsureShape":return[n.ensureShape(v("x",s,e,t),v("shape",s,e,t))];case"MirrorPad":return[n.mirrorPad(v("x",s,e,t),v("padding",s,e,t),v("mode",s,e,t))];case"PadV2":case"Pad":return[n.pad(v("x",s,e,t),v("padding",s,e,t),v("constantValue",s,e,t))];case"SpaceToBatchND":{const o=v("blockShape",s,e,t),r=v("paddings",s,e,t);return[n.spaceToBatchND(v("x",s,e,t),o,r)]}case"BatchToSpaceND":{const o=v("blockShape",s,e,t),r=v("crops",s,e,t);return[n.batchToSpaceND(v("x",s,e,t),o,r)]}case"DepthToSpace":{const o=v("blockSize",s,e,t),r=v("dataFormat",s,e,t).toUpperCase();return[n.depthToSpace(v("x",s,e,t),o,r)]}case"BroadcastTo":return[n.broadcastTo(v("x",s,e,t),v("shape",s,e,t))];case"BroadcastArgs":return[n.broadcastArgs(v("s0",s,e,t),v("s1",s,e,t))];default:throw TypeError(`Node type ${s.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tg(s,e,t,n,o=P){const r=((a,i,l)=>{switch(a.category){case"arithmetic":return o(()=>B_(a,i,l));case"basic_math":return o(()=>M_(a,i,l));case"control":return q_(a,i,l);case"convolution":return o(()=>K_(a,i,l));case"creation":return o(()=>X_(a,i,l));case"dynamic":return Y_(a,i,l);case"evaluation":return o(()=>Z_(a,i,l));case"image":return o(()=>tD(a,i,l));case"graph":return o(()=>J_(a,i,l));case"logical":return o(()=>sD(a,i,l));case"matrices":return o(()=>nD(a,i,l));case"normalization":return o(()=>oD(a,i,l));case"ragged":return o(()=>rD(a,i,l));case"reduction":return o(()=>aD(a,i,l));case"slice_join":return o(()=>iD(a,i,l));case"sparse":return o(()=>lD(a,i,l));case"spectral":return o(()=>cD(a,i,l));case"string":return o(()=>pD(a,i,l));case"transformation":return o(()=>uD(a,i,l));case"hash_table":return eD(a,i,l,n);case"custom":const c=hw(a.op);if(c&&c.customExecutor)return c.customExecutor(new j_(a,i,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(s,e,t);return Eo(r)?r.then(a=>[].concat(a)):[].concat(r)}class Eg{constructor(e={},t={},n={},o={},r){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=o,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ag(s,e,t,n){const o=new Set,r=[];let a=null,i=null;const l=new Set,c=new Set(Object.keys(s).map(h=>Jt(h)[0]));n=n||[];const p=new Set(n.map(h=>Jt(h.name)[0])),u=[...e];for(;u.length>0;){const h=u.pop();if((vo(h)||bD(h)||wD(h))&&a==null&&(a=h,i=a.children.map(d=>d.name).filter(d=>o.has(d))),o.add(h.name),t[h.name]==null&&!c.has(h.name)&&!p.has(h.name)){if(h.inputs.length===0){r.push(h.name);continue}h.inputs.forEach(d=>{l.has(d.name)||(l.add(d.name),u.push(d))})}}return{inputs:s,outputs:e,usedNodes:o,missingInputs:r,dynamicNode:a,syncInputs:i}}function hD(s,e){const{usedNodes:t,inputs:n}=e,o=Object.keys(n).map(f=>Jt(f)[0]).map(f=>s.nodes[f]),r=s.initNodes||[],a=f=>t.has(typeof f=="string"?f:f.name);function i(f){return[...new Map(f.map(x=>[x.name,x])).values()]}const l=i([...o,...s.weights,...r]).filter(a),c=i([...l,...Object.values(s.nodes)]).filter(a),p=new Map(c.map(f=>[f.name,f])),u={};for(const f of c){u[f.name]=u[f.name]||0;for(const x of f.children)a(x)||(u[x.name]=Number.POSITIVE_INFINITY),u[x.name]=(u[x.name]||0)+1}const h=Object.entries(u).filter(([,f])=>f===0).map(([f])=>f),d=[...h];for(;h.length>0;){const f=h.pop(),x=p.get(f);for(const y of x.children.filter(a))--u[y.name]===0&&(d.push(y.name),h.push(y.name))}const m=d.map(f=>p.get(f)),g=dD(m,l);return mD(g,l),g}function dD(s,e){const t=new Map(s.map(a=>[a.name,a])),n=e.map(a=>a.name),o=new Set(n);for(;n.length>0;){const a=n.pop(),i=t.get(a);for(const l of i.children)!t.has(l.name)||o.has(l.name)||(o.add(l.name),n.push(l.name))}return s.filter(a=>o.has(a.name))}class Zi extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function mD(s,e){const t=new Map(s.map((i,l)=>[i.name,l])),n=new Set(e.map(i=>i.name)),o=i=>n.has(typeof i=="string"?i:i.name),r=new Set(s.map(i=>i.name)),a=i=>r.has(typeof i=="string"?i:i.name);for(const i of s){for(const l of i.children.filter(a)){if(!t.has(l.name))throw new Zi(`Child ${l.name} of node ${i.name} is unreachable.`);if(t.get(i.name)>t.get(l.name))throw new Zi(`Node ${i.name} is scheduled to run after its child ${l.name}.`)}if(!o(i))for(const l of i.inputs){if(!t.has(l.name))throw new Zi(`Input ${l.name} of node ${i.name} is unreachable.`);if(t.get(l.name)>t.get(i.name))throw new Zi(`Node ${i.name} is scheduled to run before its input ${l.name}.`)}}}function fD(s){const e=new Map(s.map((i,l)=>[i.name,l])),t=Number.MAX_SAFE_INTEGER,n=s.map((i,l)=>vo(i)?t:l),o=i=>{const l=n[e.get(i.name)];return l??-1},r=s.map((i,l)=>i.children.map(o).reduce((c,p)=>Math.max(c,p),n[l])),a=new Map;for(let i=0;i<s.length;++i){const l=r[i];if(l===t)continue;const c=s[i],p=s[l];a.has(p.name)||a.set(p.name,[]),a.get(p.name).push(c)}return a}const gD=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),xD=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),yD=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function vo(s){return gD.has(s.op)}function bD(s){return xD.has(s.op)}function wD(s){return yD.has(s.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rl{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(n=>e[n].map(o=>o.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Rl(e.functions[n],this)})}getCompilationKey(e,t){const n=e.map(r=>r.name).sort(),o=t.map(r=>r.name).sort();return n.join(this.SEPARATOR)+"--"+o.join(this.SEPARATOR)}compile(e,t){const n=Ag(e,t,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(o.length>0){const c=t.map(u=>u.name),p=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${p}]. Missing the following inputs: [${o}]`)}const i=hD(this.graph,n),l=fD(i);return{orderedNodes:i,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return wt(t),t}cloneTensorList(e){return e?e.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,n])=>[t,this.cloneTensorList(n)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const o=n.map(h=>this.graph.nodes[Jt(h)[0]]),r=t.map(h=>Jt(h)[0]),a=new Set(r);let i=r.map(h=>this.graph.nodes[h]);i.length===0&&(i=this._outputs);const l=this.getCompilationKey(o,i);let c=this.compiledMap.get(l);c==null&&(c=this.compile(e,i),this.compiledMap.set(l,c));try{this.keepIntermediateTensors=L().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const p={},u={};return P(()=>{const h=new Eg(this.weightMap,p,u,this.functionExecutorMap,this.parseNodeNameCache),d=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(x=>{const[y,w]=Jt(x,h),b=[];b[w]=e[x],d[y]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[y]=this.cloneTensorList(b))});const m=this.getFrozenTensorIds(d),{orderedNodes:g,nodeLiveUntilMap:f}=c;for(const x of g){if(d[x.name])continue;const y=Tg(x,d,h,this._resourceManager);if(Eo(y))throw new Error(`The execution of the op '${x.op}' returned a promise. Please use model.executeAsync() instead.`);d[x.name]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[x.name]=this.cloneTensorList(y)),this.checkTensorForDisposalWithNodeLiveUntilInfo(x,d,h,m,a,f.get(x.name))}return this.parent==null&&h.dispose(m),t.map(x=>Ct(x,d,h))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(o=>o.id)));return new Set(t)}checkTensorForDisposal(e,t,n,o,r,a,i){if(!(vo(t)||a.has(e))){for(const l of n[e])l!=null&&(i[l.id]=(i[l.id]||0)+t.children.length);for(const l of t.inputs){if(vo(l))continue;const c=$g(l.name,n,o);if(c!=null)for(const p of c){if(!p||p.kept||r.has(p.id))continue;const u=i[p.id];u===1?(p.dispose(),delete i[p.id]):u!=null&&i[p.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,o,r,a){function i(l){return vo(l)||r.has(l.name)}if(!(vo(e)||a==null))for(const l of a){if(i(l))continue;const c=$g(l.name,t,n);for(const p of c)!p||p.kept||o.has(p.id)||p.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,o={},r={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=L().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const a=new Eg(this.weightMap,o,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),l=t.map(h=>Ct(h,i,a)),c=l.map(h=>h.id),p=Object.keys(e).map(h=>e[h].id),u=new Set([...c,...p,...this.weightIds]);return Object.values(i).forEach(h=>{h.forEach(d=>{d&&!d.isDisposed&&!u.has(d.id)&&d.dispose()})}),this.parent==null&&a.dispose(u),l}async executeFunctionAsync(e,t,n){const o=e.reduce((r,a,i)=>(r[this.inputs[i].name]=a,r),{});return this._executeAsync(o,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,o){const r=Object.keys(e),a=r.map(b=>this.graph.nodes[Jt(b)[0]]),i=n.map(b=>Jt(b)[0]),l=new Set(i);let c=i.map(b=>this.graph.nodes[b]);c.length===0&&(c=this._outputs);const{usedNodes:p,missingInputs:u,dynamicNode:h,syncInputs:d}=Ag(e,c,this.weightMap,this._initNodes),m=[...a,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:t.currentContext})),g=Object.assign({},this.weightMap);Object.keys(e).forEach(b=>{const[k,I]=Jt(b),N=[];N[I]=e[b],g[k]=N});const f={},x=this.getFrozenTensorIds(g),y={};for(;m.length>0;){const b=this.processStack(a,m,t,g,y,x,l,f,p);await Promise.all(b)}h==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const w=c.filter(b=>!vo(b)&&!Ct(b.name,g,t)).map(b=>b.name);if(w.length>0){let b="";throw h!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${w}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${b}`)}return g}processStack(e,t,n,o,r,a,i,l,c){const p=[];for(;t.length>0;){const u=t.pop();n.currentContext=u.contexts;let h="";if(u.node.op==="Enter"&&v("isConstant",u.node,o,n)&&([h]=bn(u.node.name,n)),o[u.node.name]==null){const d=Tg(u.node,o,n,this._resourceManager);h||([h]=bn(u.node.name,n));const m=n.currentContext;Eo(d)?p.push(d.then(g=>(o[h]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(g)),n.currentContext=m,this.checkTensorForDisposal(h,u.node,o,n,a,i,l),this.processChildNodes(u.node,t,n,o,r,c),g))):(o[h]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[h]=this.cloneTensorList(d)),this.checkTensorForDisposal(h,u.node,o,n,a,i,l),this.processChildNodes(u.node,t,n,o,r,c))}else this.processChildNodes(u.node,t,n,o,r,c)}return p}processChildNodes(e,t,n,o,r,a){e.children.forEach(i=>{const[l]=bn(i.name,n);r[l]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(c=>!!Ct(c,o,n))&&(r[l]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(c=>!!Ct(c,o,n))&&(r[l]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[o]=Jt(t),r=this.graph.nodes[o];if(r.attrParams.shape&&r.attrParams.shape.value){const a=r.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((l,c)=>a[c]===-1||a[c]===l);$(i,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&$(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;const o={};for(const r in e){const a=(n=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||n===void 0?void 0:n[r];a!=null?o[a.name]=e[r]:o[r]=e[r]}return o}checkInputs(e){const t=Object.keys(e).filter(n=>{const[o]=Jt(n);return this.graph.nodes[o]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var n,o;const r=(o=(n=this._signature)===null||n===void 0?void 0:n.outputs)===null||o===void 0?void 0:o[t];return r!=null?r.name:t},{})}checkOutputs(e){e.forEach(t=>{const[n]=Jt(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}}class vD{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kD="?tfjs-format=file",$D="model.json";class ID{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=x1){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new vD}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Eo(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(n=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const o=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Rl(Ig.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const r=Ig.Instance.transformGraph(e.modelInitializer);this.initializer=new Rl(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Ke?[e]:e,n={};return t.forEach((o,r)=>n[this.structuredOutputKeys[r]]=o),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ke)&&!Array.isArray(e)){const r=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(r!=null)for(const a in r){const i=r[a];i.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let o=0;return this.inputNodes.reduce((r,a)=>{var i,l,c;const p=(c=(l=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||l===void 0?void 0:l[a])===null||c===void 0?void 0:c.resourceId;return p!=null?r[a]=this.resourceIdToCapturedInput[p]:r[a]=e[o++],r},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let o=0;o<n.length;o++){const r=n[o],a=t[r];this.resourceIdToCapturedInput[a.resourceId]=e[o]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&we(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function CD(s,e={},t=x1){if(s==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof s=="string"&&(s=ND(s));const n=new ID(s,e,t);return await n.load(),n}function ND(s){return s.endsWith("/")||(s=s+"/"),`${s}${$D}${kD}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var _g;(function(s){s[s.FAIL=0]="FAIL",s[s.SHORTEST=1]="SHORTEST",s[s.LONGEST=2]="LONGEST"})(_g||(_g={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ce(s,e){Array.isArray(s)||(s=[s]),s.forEach(t=>{t!=null&&$(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SD=sm;class Ap extends fh{nextDataId(){return Ap.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new h0(this,en())}write(e,t,n){this.firstUse&&(this.firstUse=!1,L().get("IS_NODE")&&ds(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:n,refCount:1}),o}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&$a(n[0])){const r=n.map(a=>Vn(a));o=this.write(r,e,t)}else o=this.write(n,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,o,r){this.data.set(e,{values:t,dtype:o,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){const o=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return Cn(o,r)}return Fv(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const n=t.map(o=>Gn(o));return ke(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,t)}makeOutput(e,t,n){return en().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Ut();return e(),{kernelMs:Ut()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ce([e],"where");const t=this.readSync(e.dataId);return SD(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Ap.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fw(s){const e=new Float32Array(s.length);for(let t=0;t<s.length;++t)e[t]=Math.abs(s[t]);return e}const TD=s=>{const{x:e}=s.inputs,t=s.backend;ce(e,"abs");let n=new Float32Array(W(e.shape));const o=t.data.get(e.dataId).values;return n=fw(o),t.makeOutput(n,e.shape,e.dtype)},ED={kernelName:Ul,backendName:"cpu",kernelFunc:TD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(s){return(e,t,n,o,r)=>{const a=ye(e,t),i=a.length,l=de(a),c=W(a),p=St(r,c),u=e.length,h=t.length,d=de(e),m=de(t),g=kr(e,a),f=kr(t,a);if(g.length+f.length===0)for(let x=0;x<p.length;++x)p[x]=s(n[x%n.length],o[x%o.length]);else for(let x=0;x<p.length;++x){const y=Rr(x,i,l),w=y.slice(-u);g.forEach(N=>w[N]=0);const b=rn(w,u,d),k=y.slice(-h);f.forEach(N=>k[N]=0);const I=rn(k,h,m);p[x]=s(n[b],o[I])}return[p,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qt(s){const{inputs:e,backend:t}=s,{real:n,imag:o}=e,r=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(n.shape,"complex64"),l=t.data.get(i.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(n.shape,"float32",r),imag:t.makeTensorInfo(o.shape,"float32",a)},i}const AD={kernelName:Ch,backendName:"cpu",kernelFunc:Qt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ol(s,e,t="float32"){if(t==="complex64"){const o=Ol(s,e,"float32"),r=Ol(s,e,"float32");return Qt({inputs:{real:o,imag:r},backend:s})}const n=Rt(W(e),t);return s.makeTensorInfo(e,t,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(s){const{inputs:e,backend:t}=s,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const _D={kernelName:Ua,backendName:"cpu",kernelFunc:dn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zo(s){const{inputs:e,backend:t}=s,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.real,r=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,r)}const DD={kernelName:nd,backendName:"cpu",kernelFunc:zo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gw(s,e,t,n){if(n==="int32"){const o=Int32Array.from(s);return[e,"int32",o]}if(n==="bool"){const o=Wo([0],t),[r,a]=lt((i,l)=>i!==l?1:0)(e,[],s,o,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${t} to ${n}`)}function eo(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{dtype:r}=n;if(r==="complex64"){if(o.dtype==="complex64")return dn({inputs:{x:o},backend:t});const p=Ol(t,o.shape,o.dtype),u=eo({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),h=Qt({inputs:{real:u,imag:p},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(u),h}if(o.dtype==="complex64"){const p=zo({inputs:{input:o},backend:t}),u=eo({inputs:{x:p},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(p),u}if(!m0(o.dtype,r)){const p=dn({inputs:{x:o},backend:t});return{dataId:p.dataId,shape:p.shape,dtype:r}}const a=t.data.get(o.dataId).values,[i,l,c]=gw(a,o.shape,o.dtype,r);return t.makeTensorInfo(i,l,c)}const RD={kernelName:_a,backendName:"cpu",kernelFunc:eo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(s,e,t,n){return t==null?({inputs:o,backend:r})=>{const{a,b:i}=o,l=r;ce([a,i],s);const c=l.data.get(a.dataId).values,p=l.data.get(i.dataId).values,u=a.dtype==="string"?Nn(c):c,h=a.dtype==="string"?Nn(p):p,d=n||a.dtype,[m,g]=e(a.shape,i.shape,u,h,d);return l.makeTensorInfo(g,d,m)}:({inputs:o,backend:r})=>{const{a,b:i}=o,l=r;if(a.dtype==="complex64"||i.dtype==="complex64"){const c=eo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),p=l.data.get(c.dataId),u=p.complexTensorInfos.real,h=p.complexTensorInfos.imag,d=l.data.get(u.dataId).values,m=l.data.get(h.dataId).values,g=eo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),f=l.data.get(g.dataId),x=f.complexTensorInfos.real,y=f.complexTensorInfos.imag,w=l.data.get(x.dataId).values,b=l.data.get(y.dataId).values,[k,I,N]=t(a.shape,i.shape,d,m,w,b),S=l.makeTensorInfo(N,"float32",k),T=l.makeTensorInfo(N,"float32",I),E=Qt({inputs:{real:S,imag:T},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(S),l.disposeIntermediateTensorInfo(T),E}else{const c=l.data.get(a.dataId).values,p=l.data.get(i.dataId).values,u=n||a.dtype,[h,d]=e(a.shape,i.shape,c,p,u);return l.makeTensorInfo(d,u,h)}}}function af(s){return(e,t,n,o,r,a)=>{const i=ye(e,t),l=W(i),c=i.length,p=de(i),u=St("float32",l),h=St("float32",l),d=kr(e,i),m=kr(t,i),g=Cn(n,o),f=Cn(r,a),x=e.length,y=de(e),w=t.length,b=de(t);if(d.length+m.length===0)for(let k=0;k<u.length;k++){const I=k%g.length,N=k%f.length,S=s(g[I*2],g[I*2+1],f[N*2],f[N*2+1]);u[k]=S.real,h[k]=S.imag}else for(let k=0;k<u.length;k++){const I=Rr(k,c,p),N=I.slice(-x);d.forEach(z=>N[z]=0);const S=rn(N,x,y),T=I.slice(-w);m.forEach(z=>T[z]=0);const E=rn(T,w,b),F=s(g[S*2],g[S*2+1],f[E*2],f[E*2+1]);u[k]=F.real,h[k]=F.imag}return[u,h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xw=lt((s,e)=>s+e),OD=af((s,e,t,n)=>({real:s+t,imag:e+n})),Nr=yt(Or,xw,OD),FD={kernelName:Or,backendName:"cpu",kernelFunc:Nr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lf(s,e,t,n,o){const r=W(n),a=Rt(o,t);for(let i=0;i<s.length;i++){const l=s[i];if(l<0)throw new Error("Input x must be non-negative!");l>=o||(r>0?a[l]+=e[i]:a[l]+=1)}return a}function yw(s,e,t,n=!1){const o=s.shape[0],r=s.shape[1],a=ke([o,t],e.dtype);for(let i=0;i<o;i++)for(let l=0;l<r;l++){const c=s.get(i,l);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(n?a.set(1,i,c):e.size>0?a.set(a.get(i,c)+e.get(i,l),i,c):a.set(a.get(i,c)+1,i,c))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bw=lt((s,e)=>s&e),PD=yt(Jl,bw),LD={kernelName:Jl,backendName:"cpu",kernelFunc:PD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(s){return(e,t,n)=>{const o=ot(t,e.length);for(let r=0;r<e.length;++r)o[r]=s(e[r],n);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oe(s,e,t){const n=fn(e);return uo(s,n,t)}function uo(s,e,t){return({inputs:n,attrs:o,backend:r})=>{const{x:a}=n;ce(a,s);const i=r,l=i.data.get(a.dataId).values;let c;if(a.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=Nn(l)}else c=l;const p=t||a.dtype,u=e(c,p,o);return i.makeTensorInfo(a.shape,p,u)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ww=fn(s=>Math.ceil(s)),zD=uo(Da,ww),jD={kernelName:Da,backendName:"cpu",kernelFunc:zD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(s,e,t,n){const o=ot(t,W(e));if(n&&t!=="string"){let r=0;s.forEach(a=>{const i=W(a.shape);o.set(a.vals,r),r+=i})}else{let r=0;s.forEach(a=>{const i=t==="string"?Nn(a.vals):a.vals;let l=0;for(let c=0;c<a.shape[0];++c){const p=c*e[1]+r;for(let u=0;u<a.shape[1];++u)o[p+u]=i[l++]}r+=a.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kw=lt((s,e)=>s===e?1:0),$w=yt(ic,kw,null,"bool"),BD={kernelName:ic,backendName:"cpu",kernelFunc:$w};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iw=fn(s=>Math.exp(s)),Cw=uo(ja,Iw,"float32"),MD={kernelName:ja,backendName:"cpu",kernelFunc:Cw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nw=fn(s=>Math.expm1(s)),VD=uo(Ba,Nw),WD={kernelName:Ba,backendName:"cpu",kernelFunc:VD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sw=fn(s=>Math.floor(s)),UD=uo(Ma,Sw),GD={kernelName:Ma,backendName:"cpu",kernelFunc:UD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tw=lt((s,e)=>Math.floor(s/e)),HD=yt(Va,Tw,null,"int32"),qD={kernelName:Va,backendName:"cpu",kernelFunc:HD};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ew(s,e,t,n,o,r,a,i,l){const c=ke([n,r],t);for(let p=0;p<n;p++){const u=[];let h=0;for(let d=0;d<o;d++){const m=s[p*o+d];h+=m*a[d],u.push(m)}if(h<0||h>=l/r)throw new Error(`Invalid indices: ${u} does not index into ${i}`);for(let d=0;d<r;d++)c.values[p*r+d]=e.get(...e.indexToLoc(h*r+d))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aw(s,e,t){const n=ke(t,s.dtype);for(let o=0;o<n.size;++o){const a=n.indexToLoc(o).slice(),i=a[0],l=a[2],c=e.locToIndex([i,l]);a[2]=e.values[c];const p=s.locToIndex(a);0<=p&&p<s.values.length&&(n.values[o]=s.values[p])}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _w=lt((s,e)=>s>e?1:0),KD=yt(uc,_w,null,"bool"),XD={kernelName:uc,backendName:"cpu",kernelFunc:KD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dw=lt((s,e)=>s>=e?1:0),YD=yt(Wa,Dw,null,"bool"),ZD={kernelName:Wa,backendName:"cpu",kernelFunc:YD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rw=lt((s,e)=>s<e?1:0),JD=yt(dc,Rw,null,"bool"),QD={kernelName:dc,backendName:"cpu",kernelFunc:JD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ow=lt((s,e)=>s<=e?1:0),eR=yt(mc,Ow,null,"bool"),tR={kernelName:mc,backendName:"cpu",kernelFunc:eR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fw(s,e,t){const n=(e-s)/(t-1),o=Rt(t,"float32");o[0]=s;for(let r=1;r<o.length;r++)o[r]=o[r-1]+n;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pw=fn(s=>Math.log(s)),sR=uo(Ka,Pw),nR={kernelName:Ka,backendName:"cpu",kernelFunc:sR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lw(s,e,t,n){const o=St(n,W(t));for(let r=0;r<o.length;++r){const a=r*e;let i=s[a];for(let l=0;l<e;++l){const c=s[a+l];(Number.isNaN(c)||c>i)&&(i=c)}o[r]=i}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zw=lt((s,e)=>Math.max(s,e)),oR=yt(Ya,zw),rR={kernelName:Ya,backendName:"cpu",kernelFunc:oR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jw=lt((s,e)=>Math.min(s,e)),aR=yt(Za,jw),iR={kernelName:Za,backendName:"cpu",kernelFunc:aR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cf=lt((s,e)=>s*e),lR=af((s,e,t,n)=>({real:s*t-e*n,imag:s*n+e*t})),_p=yt(Qa,cf,lR),cR={kernelName:Qa,backendName:"cpu",kernelFunc:_p};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(s,e,t){const n=so(-1,t);return cf([],e,n,s,t)}function pR(s){const{inputs:e,backend:t}=s,{x:n}=e;ce(n,"neg");const o=t.data.get(n.dataId).values,[r,a]=Bw(o,n.shape,n.dtype);return t.makeTensorInfo(a,n.dtype,r)}const uR={kernelName:Cc,backendName:"cpu",kernelFunc:pR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mw=lt((s,e)=>s!==e?1:0),hR=yt(Nc,Mw,null,"bool"),dR={kernelName:Nc,backendName:"cpu",kernelFunc:hR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pf(s,e,t,n,o){const r=e.length,a=W(e),i=de(e),l=de(o),c=St(t,W(o));for(let p=0;p<a;++p){const u=Rr(p,r,i),h=new Array(u.length);for(let m=0;m<h.length;m++)h[m]=u[n[m]];const d=rn(h,r,l);c[d]=s[p]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kt(s){const{inputs:e,attrs:t,backend:n}=s,{x:o}=e,{perm:r}=t;ce(o,"transpose");const a=o.shape.length,i=new Array(a);for(let u=0;u<i.length;u++)i[u]=o.shape[r[u]];const l=n.data.get(o.dataId).values,c=pf(l,o.shape,o.dtype,r,i);return{dataId:n.write(c,i,o.dtype),shape:i,dtype:o.dtype}}const mR={kernelName:ur,backendName:"cpu",kernelFunc:Kt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vw(s,e,t,n){const[o,r]=$t(s,n),a=ns(e,"int32"),i=Rt(W(o),a),l=W(r);for(let c=0;c<i.length;++c){const p=c*l;let u=1;for(let h=0;h<l;++h)u*=t[p+h];i[c]=u}return{outVals:i,outShape:o,outDtype:a}}function fR(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n;ce(o,"prod");const i=o.shape.length,l=Ie(r,o.shape),c=et(l,i);let p=l,u=o;const h=[];c!=null&&(u=Kt({inputs:{x:o},backend:t,attrs:{perm:c}}),h.push(u),p=at(p.length,i));const d=t.data.get(u.dataId).values,{outVals:m,outShape:g,outDtype:f}=Vw(u.shape,u.dtype,d,p);let x=g;return a&&(x=rt(g,l)),h.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(x,f,m)}const gR={kernelName:Dc,backendName:"cpu",kernelFunc:fR};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(s,e,t){s.forEach((n,o)=>{if(n<0||n>=t){const r=Rr(o,e.length,de(e)).join(",");throw new Error(`indices[${r}] = ${n} is not in [0, ${t})`)}})}function yR(s,e){for(let t=0;t<s.length;++t){const n=s[t],o=t===s.length-1?e:s[t+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>o)throw new Error("Ragged splits must not point past values");for(let r=1;r<n.length;++r)if(n[r-1]>n[r])throw new Error("Ragged splits must be sorted in ascending order")}}function bR(s,e,t,n){const o=[];let r=0;const a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);yR(t,n);let l=1;for(let c=0;c<e.length-1;++c){l*=e[c];const p=e[c+1];for(let u=1;u<l+1;++u)i[c].push(u*p)}for(let c=0;c<s.length;++c){let p=s[c],u=s[c]+1;for(let h=0;h<t.length;++h){const d=t[h],m=h+e.length-1;if(m>=0){const g=i[m],f=g[g.length-1]-d[p];for(let x=p;x<u;++x)i[m].push(d[x+1]+f)}p=d[p],u=d[u]}u!==p&&(o.push([p,u]),r+=u-p)}return{outSplits:i,valueSlices:o,numValues:r}}function wR(s){const e=[];for(let t=0;t<s.length;++t){const n=s[t].length,o=ot("int32",n);e.push(o),s[t].forEach((r,a)=>o[a]=r)}return e}function Dg(s,e){const t=s.slice(0,e);for(;t.length<e;)t.push(1);for(let n=e;n<s.length;n++)t[e-1]*=s[n];return t}function vR(s,e,t,n,o,r){const a=Dg(e,2)[1],i=Dg(r,2)[1];let l=0;for(const c of t)for(let p=c[0];p<c[1];++p){for(let u=0;u<n;++u)o[l*i+u]=s[p*a+u];++l}}function kR(s,e,t,n,o){const r=e.slice();r[0]=o;const a=ot(t,W(r)),i=s.length,l=i===0?0:i/e[0];return vR(s,e,n,l,a,r),[a,r]}function Ww(s,e,t,n,o,r,a,i){if(s.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(xR(r,a,l),n.length===0)throw new Error("params.rank must be nonzero");const c=n[0],{outSplits:p,valueSlices:u,numValues:h}=bR(r,a,s,c),d=wR(p),m=kR(t,n,o,u,h);return[d,m[0],m[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rg=2147483647;function Uw(s,e,t,n,o,r,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,l=o.length===0,c=a.length===0,p=[];i||p.push(e[0]),l||p.push(o[0]),c||p.push(a[0]);for(let f=1;f<p.length;++f)if(p[f]!==p[f-1])throw new Error("starts, limits, and deltas must have the same shape");const u=p.length===0?1:p[0],h=ot("int32",u+1);h[0]=0;for(let f=0;f<u;++f){const x=i?s[0]:s[f],y=l?n[0]:n[f],w=c?r[0]:r[f];if(w===0)throw new Error("Requires delta != 0");let b;if(w>0&&y<x||w<0&&y>x)b=0;else if(b=Math.ceil(Math.abs((y-x)/w)),b>Rg)throw new Error(`Requires ((limit - start) / delta) <= ${Rg}`);h[f+1]=h[f]+b}const d=h[u],m=ot(t,d);let g=0;for(let f=0;f<u;++f){const x=h[f+1]-h[f];let y=i?s[0]:s[f];const w=c?r[0]:r[f];for(let b=0;b<x;++b)m[g++]=y,y+=w}return[h,m]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ws=Ws;class Fl{constructor(e,t,n,o,r,a,i,l,c,p){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=o,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=T1(p),this.raggedRank=E1(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ws.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ws.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ws.VALUE_ROWIDS:return Fl.getMaxWidthValueRowID(t);case ws.ROW_SPLITS:return Fl.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${ws[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let n=0;for(let o=0;o<t-1;++o){const r=e[o+1]-e[o];r>n&&(n=r)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let n=0,o=e[0],r=0;for(let a=1;a<t;++a){const i=e[a];i!==o&&(o=i,r=Math.max(a-n,r),n=a)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Fg(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;A1(n,t);const o=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=S1(this.raggedRank,o,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,n){const o=Math.min(e,n),r=[];let a=0;for(let i=0;i<o;++i,a+=t)r.push(a);for(let i=o;i<e;++i)r.push(-1);return $(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,n,o){const r=e.length,a=[];for(let i=0;i<r-1;++i){const l=e[i+1]-e[i];let c=Math.min(o,l),p=t[i];p===-1&&(c=0);for(let u=0;u<c;++u)a.push(p),p+=n;for(let u=0;u<l-c;++u)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,o){const r=e.length,a=[];if(r===0)return[];let i=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let c=t[l];a.push(c);for(let p=1;p<r;++p){const u=e[p];if(u===l)c>=0&&(++i,i<o?c+=n:c=-1);else{if(i=0,l=u,u>=t.length)throw new Error(`Got nextValueRowId=${u} which is not less than ${t.length}`);c=t[u]}a.push(c)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,o){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case ws.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,o);case ws.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,o);default:throw new Error(`Unsupported partition type: ${ws[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case ws.FIRST_DIM_SIZE:return e[0];case ws.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ws.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${ws[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let l=o.length-2;l>=0;--l)o[l]=o[l+1]*n[l+1];const r=Fg(n,!1),a=ot(this.valuesDType,W(r));if(o[0]*n[0]>0){let l=this.calculateFirstParentOutputIndex(t,o[0],n[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,o[c],n[c]);this.setOutput(this.raggedRank,l,a,r)}return[r,a]}setOutput(e,t,n,o){if(n.length===0)return;const r=this.values,a=n;let i=o.slice();i=i.slice(e+1);const l=W(i),c=t.length;let p=this.defaultValue;if(p.length!==l&&p.length!==1){const m=this.defaultValueShape;P(()=>{const g=R(p,m);p=mr(g,i).dataSync()})}let u=0,h=0,d=0;for(let m=0;m<=c;++m){let g=m<c?t[m]:-1;if(g===d){++d;continue}if(h<d){const f=r.subarray(u*l),x=a.subarray(h*l),y=(d-h)*l;Og(x,f,y)}if(m>=c){const f=n.length;g=Math.floor(f/l)}if(g>d)if(this.defaultValue.length===1)a.subarray(d*l,g*l).fill(this.defaultValue[0]),d=g;else for(;g>d;){const f=a.slice(d*l);Og(f,p,l),++d}g<0?(u=m+1,h=d):(u=m,h=d,d=h+1)}}}function Og(s,e,t){for(let n=0;n<t;n++)s[n]=e[n]}function Fg(s,e){const t=[];for(let n of s){if(n<0){if(!e)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}t.push(n)}return t}function Gw(s,e,t,n,o,r,a,i,l,c){return new Fl(s,e,t,n,o,r,a,i,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(s,e,t,n){const o=s===e,r=s<e&&t<0,a=e<s&&t>1;if(o||r||a)return Rt(0,n);const i=Math.abs(Math.ceil((e-s)/t)),l=Rt(i,n);e<s&&t===1&&(t=-1),l[0]=s;for(let c=1;c<l.length;c++)l[c]=l[c-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw=fn(s=>1/Math.sqrt(s)),$R=uo(ri,qw),IR={kernelName:ri,backendName:"cpu",kernelFunc:$R};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Co(s,e,t,n,o,r,a,i,l,c){const p=[n/o,o],u=s.values,h=e.values;if(n===0)return ke(t,e.dtype);const d=l instanceof mt?l:ke(p,e.dtype);typeof l=="string"||typeof l=="number"?d.values.fill(l):typeof l=="boolean"&&d.values.fill(+l);for(let m=0;m<r;m++){const g=[];let f=0;for(let x=0;x<a;x++){const y=u[m*a+x];g.push(y),f+=y*i[x]}if(f<0||f>=n/o)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let x=0;x<o;x++)c?d.values[f*o+x]+=h[m*o+x]:d.values[f*o+x]=e.rank===0?h[0]:h[m*o+x]}return d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CR=fn(s=>1/(1+Math.exp(-s))),Kw=Oe(pi,s=>1/(1+Math.exp(-s))),NR={kernelName:pi,backendName:"cpu",kernelFunc:Kw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xw(s,e,t,n,o){const r=fm(n,e,t),a=W(t),i=de(n);if(r){const u=gm(e,i);return o==="string"?s.slice(u,u+a):s.subarray(u,u+a)}const l=o==="string"?Nn(s):s,c=ke(n,o,l),p=ke(t,o);for(let u=0;u<p.size;++u){const h=p.indexToLoc(u),d=h.map((m,g)=>m+e[g]);p.set(c.get(...d),...h)}return o==="string"?Y1(p.values):p.values}function jo(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{begin:r,size:a}=n;ce(o,"slice");const[i,l]=gp(o,r,a);dm(o,i,l);const c=t.data.get(o.dataId).values,p=Xw(c,i,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,p)}const SR={kernelName:zc,backendName:"cpu",kernelFunc:jo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yw(s,e,t,n,o,r,a){const i=e[0],l=r[0],c=new Array(l),p=new Array(i),u=e[1];if(l===0){if(i!==0)throw new Error(L1(i));const f=ot(t,0),x=ot(o,0);return[f,[0,u],x,c,p]}let h=!0,d=0;const m=new Array(l).fill(0);for(let f=0;f<i;++f){const x=s[f*u];if(x<0)throw new Error(z1(f,x));if(x>=l)throw new Error(j1(f,x,l));++m[x],h=h&&x>=d,d=x}let g=!0;for(let f=0;f<l;++f){const x=m[f]===0;c[f]=x,g=g&&!x,m[f]=Math.max(m[f],1),f>0&&(m[f]+=m[f-1])}if(g&&h){const f=s,x=n;for(let y=0;y<i;++y)p[y]=y;return[f,[i,u],x,c,p]}else{const f=m[l-1],x=ot(t,f*u),y=ot(o,f),w=new Array(l).fill(0);for(let b=0;b<i;++b){const k=s[b*u],I=w[k],N=(k===0?0:m[k-1])+I;w[k]++;for(let S=0;S<u;++S)x[N*u+S]=s[b*u+S];y[N]=n[b],p[b]=N}for(let b=0;b<l;++b)if(w[b]===0){const I=b===0?0:m[b-1];x[I*u+0]=b;for(let N=1;N<u;++N)x[I*u+N]=0;y[I]=a}return[x,[f,u],y,c,p]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(s,e,t,n,o){const r=W(n),a=e[0],i=o.length,l=[];let c=1,p=-1;for(let f=0;f<i;++f){const x=o[f];if(x===-1){if(p!==-1)throw new Error(B1(p,f));p=f,l.push(1)}else{if(x<0)throw new Error(M1(f,x));c*=x,l.push(x)}}if(p!==-1){if(c<=0)throw new Error(V1());const f=Math.trunc(r/c);if(c*f!==r)throw new Error(W1(n,l));l[p]=f}if(W(l)!==r)throw new Error(U1(n,l));const h=n.length,d=[];if(h>0){d[h-1]=1;for(let f=h-2;f>=0;--f)d[f]=d[f+1]*n[f+1]}const m=[];if(i>0){m[i-1]=1;for(let f=i-2;f>=0;--f)m[f]=m[f+1]*l[f+1]}const g=ot(t,a*i);for(let f=0;f<a;++f){let x=0;for(let y=0;y<h;++y)x+=s[f*h+y]*d[y];for(let y=0;y<i;++y)g[f*i+y]=Math.trunc(x/m[y]),x%=m[y]}return[g,[a,i],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uf(s,e,t,n,o,r=!1,a=0){const i=n.length,l=[e[0],s.length/e[0]],c=l[1],u=i>0?o[i-1]+1:0;if(u<0)throw new Error(Mu());const h=e.slice();h[0]=u;const d=h.reduce((w,b)=>w*b,1),m=ot(t,d);if(i===0)return u>0&&m.fill(a),[m,h];if(u<=0)throw new Error(Mu());let g=0,f=1,x=0,y=o[g];for(;;){let w=0;if(f<i){if(w=o[f],y===w){++f;continue}if(y>=w)throw new Error(G1())}if(y<0||y>=u)throw new Error(H1(y,u));y>x&&m.fill(a,x*c,y*c);for(let b=g;b<f;++b){const k=n[b];if(k<0||k>=l[0])throw new Error(q1(b,n[b],l[0]));for(let I=0;I<c;I++)m[y*c+I]+=s[k*c+I]}if(r)for(let b=0;b<c;b++)m[y*c+b]/=f-g;if(g=f,++f,x=y+1,y=w,f>i)break}return x<u&&m.fill(a,x*c,u*c),[m,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TR=fn(s=>Math.sqrt(s)),ER=Oe(hi,s=>Math.sqrt(s)),AR={kernelName:hi,backendName:"cpu",kernelFunc:ER};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jw=lt((s,e)=>{const t=s-e;return t*t}),_R=yt(di,Jw),DR={kernelName:di,backendName:"cpu",kernelFunc:_R};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qw=fn((s,e)=>{const{pattern:t,replaceGlobal:n,rewrite:o}=e;return s.replace(new RegExp(t,n?"g":""),o)}),RR=uo(Wc,Qw),OR={kernelName:Wc,backendName:"cpu",kernelFunc:RR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(s,e,t,n){const o=ke(s,e.dtype);for(let r=0;r<o.size;r++){const a=o.indexToLoc(r),i=new Array(a.length);for(let l=0;l<i.length;l++)i[l]=a[l]*t[l]+n[l];o.set(e.get(...i),...a)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FR{constructor(e,t,n,o,r,a){this.separator=Vn(e),this.nGramWidths=t,this.leftPad=Vn(n),this.rightPad=Vn(o),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,o,r,a){for(let i=0;i<r;++i){const l=this.getPadWidth(a),c=Math.max(0,l-i),p=Math.max(0,l-(r-(i+1))),u=a-(c+p),h=t+(c>0?0:i-l);let d=0;d+=c*this.leftPad.length;for(let y=0;y<u;++y)d+=e[h+y].length;d+=p*this.rightPad.length;const m=c+p+u-1;d+=m*this.separator.length,n[o+i]=new Uint8Array(d);const g=n[o+i];let f=0;const x=y=>y.forEach(w=>g[f++]=w);for(let y=0;y<c;++y)x(this.leftPad),x(this.separator);for(let y=0;y<u-1;++y)x(e[h+y]),x(this.separator);if(u>0){x(e[h+u-1]);for(let y=0;y<p;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<p-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(e,t){const n=e.length,o=t.length;if(o>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<o;++c){let p=t[c]>=l;if(p=p&&t[c]<=n,!p)throw new Error(`Invalid split value ${t[c]}, must be in [${l}, ${n}]`);l=t[c]}if(l!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${l}`)}const r=o-1,a=ot("int32",o);if(n===0||o===0){const l=new Array(n);for(let c=0;c<=r;++c)a[c]=0;return[l,a]}a[0]=0;for(let l=1;l<=r;++l){const c=t[l]-t[l-1];let p=0;this.nGramWidths.forEach(u=>{p+=this.getNumNGrams(c,u)}),this.preserveShort&&c>0&&p===0&&(p=1),a[l]=a[l-1]+p}const i=new Array(a[r]);for(let l=0;l<r;++l){const c=t[l];let p=a[l];if(this.nGramWidths.forEach(u=>{const h=t[l+1]-t[l],d=this.getNumNGrams(h,u);this.createNGrams(e,c,i,p,d,u),p+=d}),this.preserveShort&&p===a[l]){const u=t[l+1]-t[l];if(u===0)continue;const h=u+2*this.padWidth,d=1;this.createNGrams(e,c,i,p,d,h)}}return[i,a]}}function t2(s,e,t,n,o,r,a,i){return new FR(t,n,o,r,a,i).compute(s,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(s,e,t,n){if(!s.length)return;if(e.length===0){for(let r=0;r<s.length;++r)n.push(s.subarray(r,r+1));return}if(e.length===1){const r=e[0];let a=s.indexOf(r);for(;a!==-1;){const i=s.subarray(0,a);(!t||i.length!==0)&&n.push(i),s=s.subarray(a+1),a=s.indexOf(r)}(!t||s.length!==0)&&n.push(s);return}let o=0;for(let r=0;r<s.length+1;r++)if(r===s.length||e.indexOf(s[r])!==-1){const a=s.subarray(o,r);(!t||a.length!==0)&&n.push(a),o=r+1}}function s2(s,e,t){const n=s.length,o=[];let r=0,a=0;const i=new Array(n);for(let h=0;h<n;++h){const d=o.length;PR(s[h],e,t,o);const m=o.length-d;i[h]=m,r+=m,a=Math.max(a,m)}const l=ot("int32",r*2),c=new Array(r),p=[n,a];let u=0;for(let h=0;h<n;++h)for(let d=0;d<i[h];++d)l[u*2]=h,l[u*2+1]=d,c[u]=o[u],++u;return[l,c,p]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n2(s,e){const t=ot("int32",s.length);for(let n=0;n<s.length;++n)t[n]=ek(s[n]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o2=lt((s,e)=>s-e),LR=af((s,e,t,n)=>({real:s-t,imag:e-n})),hf=yt(mi,o2,LR),zR={kernelName:mi,backendName:"cpu",kernelFunc:hf};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(s,e){const t=new Array(s.rank);for(let o=0;o<t.length;o++)t[o]=s.shape[o]*e[o];const n=ke(t,s.dtype);for(let o=0;o<n.values.length;++o){const r=n.indexToLoc(o),a=new Array(s.rank);for(let l=0;l<a.length;l++)a[l]=r[l]%s.shape[l];const i=s.locToIndex(a);n.values[o]=s.values[i]}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const na=(s,e)=>{const t=e.value-s.value;return t===0?s.index-e.index:t};function a2(s,e,t=0,n=s.length-1){for(;n>t;){if(n-t>600){const i=n-t+1,l=e-t+1,c=Math.log(i),p=.5*Math.exp(2*c/3),u=.5*Math.sqrt(c*p*(i-p)/i)*Math.sign(l-i/2),h=Math.max(t,Math.floor(e-l*p/i+u)),d=Math.min(n,Math.floor(e+(i-l)*p/i+u));a2(s,e,h,d)}const o=s[e];let r=t,a=n;for(rr(s,t,e),na(s[n],o)>0&&rr(s,t,n);r<a;){for(rr(s,r,a),r++,a--;na(s[r],o)<0;)r=r+1;for(;na(s[a],o)>0;)a=a-1}na(s[t],o)===0?rr(s,t,a):(a=a+1,rr(s,a,n)),a<=e&&(t=a+1),e<=a&&(n=a-1)}}function i2(s,e,t,n,o){const r=e[e.length-1],[a,i]=[s.length/r,r],l=St(t,a*n),c=St("int32",a*n);for(let u=0;u<a;u++){const h=u*i,d=s.subarray(h,h+i);let m=new Array(d.length);d.forEach((y,w)=>m[w]={value:y,index:w}),n<m.length&&(a2(m,n),m=m.slice(0,n)),o&&m.sort(na);const g=u*n,f=l.subarray(g,g+n),x=c.subarray(g,g+n);for(let y=0;y<n;y++)f[y]=m[y].value,x[y]=m[y].index}const p=e.slice();return p[p.length-1]=n,[ke(p,t,l),ke(p,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l2(s,e,t,n){const o=Ie(e,t)[0],r=[1,t[0],1];for(let m=0;m<o;m++)r[0]*=t[m];r[1]=t[o];for(let m=o+1;m<t.length;m++)r[2]*=t[m];const a=new Map,i=new Int32Array(t[o]),l=new mt(r,n,s),c=[],p=r[0]===1&&r[2]===1;for(let m=0;m<t[o];m++){let g;if(p)g=s[m].toString();else{const x=[];for(let y=0;y<r[0];y++)for(let w=0;w<r[2];w++)x.push(l.get(y,m,w));g=x.join(",")}const f=a.get(g);if(f!=null)i[m]=f;else{const x=a.size;a.set(g,x),i[m]=x,c.push(m)}}const u=r.slice();u[1]=a.size;const h=new mt(u,n);c.forEach((m,g)=>{for(let f=0;f<r[0];f++)for(let x=0;x<r[2];x++)h.set(l.get(f,m,x),f,g,x)});const d=t.slice();return d[o]=u[1],{outputValues:h.values,outputShape:d,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jR=Object.freeze(Object.defineProperty({__proto__:null,addImpl:xw,bincountImpl:lf,bincountReduceImpl:yw,bitwiseAndImpl:bw,castImpl:gw,ceilImpl:ww,concatImpl:vw,equalImpl:kw,expImpl:Iw,expm1Impl:Nw,floorDivImpl:Tw,floorImpl:Sw,gatherNdImpl:Ew,gatherV2Impl:Aw,greaterEqualImpl:Dw,greaterImpl:_w,lessEqualImpl:Ow,lessImpl:Rw,linSpaceImpl:Fw,logImpl:Pw,maxImpl:Lw,maximumImpl:zw,minimumImpl:jw,multiplyImpl:cf,negImpl:Bw,notEqualImpl:Mw,prodImpl:Vw,raggedGatherImpl:Ww,raggedRangeImpl:Uw,raggedTensorToTensorImpl:Gw,rangeImpl:Hw,rsqrtImpl:qw,scatterImpl:Co,sigmoidImpl:CR,simpleAbsImpl:fw,sliceImpl:Xw,sparseFillEmptyRowsImpl:Yw,sparseReshapeImpl:Zw,sparseSegmentReductionImpl:uf,sqrtImpl:TR,squaredDifferenceImpl:Jw,staticRegexReplaceImpl:Qw,stridedSliceImpl:e2,stringNGramsImpl:t2,stringSplitImpl:s2,stringToHashBucketFastImpl:n2,subImpl:o2,tileImpl:r2,topKImpl:i2,transposeImpl:pf,uniqueImpl:l2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */J0("cpu",()=>new Ap,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c2=Oe(La,s=>s>=0?s:Math.exp(s)-1),BR={kernelName:La,backendName:"cpu",kernelFunc:c2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{alpha:r}=n;ce([o],"leakyRelu");const a=W(o.shape),i=t.data.get(o.dataId).values,l=St("float32",a);for(let c=0;c<i.length;c++)l[c]=i[c]<0?r*i[c]:i[c];return t.makeTensorInfo(o.shape,"float32",l)}const MR={kernelName:hc,backendName:"cpu",kernelFunc:p2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VR=lt((s,e)=>s<0?e*s:s);function u2(s){const{inputs:e,backend:t}=s,{x:n,alpha:o}=e;ce([n,o],"prelu");const r=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,[i,l]=VR(n.shape,o.shape,r,a,"float32");return t.makeTensorInfo(l,"float32",i)}const WR={kernelName:_c,backendName:"cpu",kernelFunc:u2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h2=Oe(si,s=>Math.max(0,s)),UR={kernelName:si,backendName:"cpu",kernelFunc:h2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d2=Oe(ni,s=>Math.min(Math.max(0,s),6)),GR={kernelName:ni,backendName:"cpu",kernelFunc:d2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pl(s,e,t,n,o){if(t==="linear")return dn({inputs:{x:e},backend:s});if(t==="relu")return h2({inputs:{x:e},backend:s});if(t==="elu")return c2({inputs:{x:e},backend:s});if(t==="relu6")return d2({inputs:{x:e},backend:s});if(t==="prelu")return u2({inputs:{x:e,alpha:n},backend:s});if(t==="leakyrelu")return p2({inputs:{x:e},backend:s,attrs:{alpha:o}});if(t==="sigmoid")return Kw({inputs:{x:e},backend:s});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function We(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{shape:r}=n,a=W(o.shape),i=d0(r,a),l=W(i);$(a===l,()=>`The new shape (${i}) has ${l} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);const c=t.data.get(o.dataId);if(c.complexTensorInfos!=null){const p=c.complexTensorInfos.real,u=c.complexTensorInfos.imag;p.shape=i,u.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}const HR={kernelName:Rc,backendName:"cpu",kernelFunc:We};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m2(s){const{inputs:e,backend:t,attrs:n}=s,{a:o,b:r}=e,{transposeA:a,transposeB:i}=n;ce([o,r],"matMul");const l=o.shape.length,c=r.shape.length,p=a?o.shape[l-2]:o.shape[l-1],u=i?r.shape[c-1]:r.shape[c-2],h=a?o.shape[l-1]:o.shape[l-2],d=i?r.shape[c-2]:r.shape[c-1],m=o.shape.slice(0,-2),g=r.shape.slice(0,-2),f=W(m),x=W(g),w=ye(o.shape.slice(0,-2),r.shape.slice(0,-2)).concat([h,d]);$(p===u,()=>`Error in matMul: inner shapes (${p}) and (${u}) of Tensors with shapes ${o.shape} and ${r.shape} and transposeA=${a} and transposeB=${i} must match.`);const b=a?[f,p,h]:[f,h,p],k=i?[x,d,u]:[x,u,d],I=We({inputs:{x:o},backend:t,attrs:{shape:b}}),N=We({inputs:{x:r},backend:t,attrs:{shape:k}}),S=a?I.shape[1]:I.shape[2],T=a?I.shape[2]:I.shape[1],E=i?N.shape[1]:N.shape[2],F=Math.max(f,x),z=t.data.get(I.dataId).values,j=t.data.get(N.dataId).values,B=de(I.shape),M=de(N.shape),[V,H,G]=a?[B[0],1,B[1]]:[B[0],B[1],1],[q,Y,Z]=i?[1,M[1],M[0]]:[M[1],1,M[0]],Q=T*E,J=ke([F,T,E],I.dtype),oe=J.values,ee=t.blockSize;for(let ae=0;ae<F;ae++){const he=ae%f,ge=ae%x;for(let fe=0;fe<T;fe+=ee){const ve=Math.min(fe+ee,T);for(let $e=0;$e<E;$e+=ee){const Re=Math.min($e+ee,E);for(let Be=0;Be<S;Be+=ee){const tt=Math.min(Be+ee,S);for(let Me=fe;Me<ve;Me++)for(let Fe=$e;Fe<Re;Fe++){let Ze=0;for(let qe=Be;qe<tt;qe++){const gn=z[he*V+Me*H+qe*G],It=j[qe*q+Fe*Y+ge*Z];Ze+=gn*It}oe[ae*Q+(Me*E+Fe)]+=Ze}}}}}return t.disposeIntermediateTensorInfo(I),t.disposeIntermediateTensorInfo(N),t.makeTensorInfo(w,J.dtype,J.values)}const qR={kernelName:Yl,backendName:"cpu",kernelFunc:m2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR(s){const{inputs:e,backend:t,attrs:n}=s,{a:o,b:r,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:c,activation:p,leakyreluAlpha:u}=n;let h,d,m;const g=[];h=m2({inputs:{a:o,b:r},attrs:{transposeA:l,transposeB:c},backend:t}),a&&(d=Nr({inputs:{a:h,b:a},backend:t}),g.push(h),h=d),p&&(m=Pl(t,h,p,i,u),g.push(h),h=m);for(const x of g)t.disposeIntermediateTensorInfo(x);return h}const XR={kernelName:dl,backendName:"cpu",kernelFunc:KR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YR=Oe(Ia,s=>Math.acos(s)),ZR={kernelName:Ia,backendName:"cpu",kernelFunc:YR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JR=Oe(Ca,s=>Math.acosh(s)),QR={kernelName:Ca,backendName:"cpu",kernelFunc:JR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(s){const{inputs:e,backend:t}=s,n=e;ce(e,"addN");const o=n.map(i=>t.data.get(i.dataId).values),r=ke(n[0].shape,n[0].dtype),a=r.values;for(let i=0;i<n.length;i++){const l=o[i];for(let c=0;c<a.length;c++)a[c]+=l[c]}return t.makeTensorInfo(r.shape,r.dtype,r.values)}const tO={kernelName:Gl,backendName:"cpu",kernelFunc:eO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n;ce(o,"all");const i=Ie(r,o.shape);let l=i;const c=et(l,o.shape.length);let p=o;c!=null&&(p=Kt({inputs:{x:o},backend:t,attrs:{perm:c}}),l=at(l.length,o.shape.length)),Et("all",l,p.shape.length);const[u,h]=$t(p.shape,l),d=W(h),m=Rt(W(u),p.dtype),g=t.data.get(p.dataId).values;for(let x=0;x<m.length;++x){const y=x*d;let w=g[y];for(let b=0;b<d;++b){const k=g[y+b];w=w&&k}m[x]=w}c!=null&&t.disposeIntermediateTensorInfo(p);const f=t.makeTensorInfo(u,p.dtype,m);if(a){const x=rt(u,i),y=We({inputs:{x:f},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(f),y}return f}const nO={kernelName:bh,backendName:"cpu",kernelFunc:sO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n;ce(o,"any");const i=Ie(r,o.shape);let l=i;const c=et(l,o.shape.length);let p=o;c!=null&&(p=Kt({inputs:{x:o},backend:t,attrs:{perm:c}}),l=at(l.length,o.shape.length)),Et("any",l,p.shape.length);const[u,h]=$t(p.shape,l),d=W(h),m=Rt(W(u),p.dtype),g=t.data.get(p.dataId).values;for(let x=0;x<m.length;++x){const y=x*d;let w=g[y];for(let b=0;b<d;++b){const k=g[y+b];w=w||k}m[x]=w}c!=null&&t.disposeIntermediateTensorInfo(p);const f=t.makeTensorInfo(u,p.dtype,m);if(a){const x=rt(u,i),y=We({inputs:{x:f},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(f),y}return f}const rO={kernelName:wh,backendName:"cpu",kernelFunc:oO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r}=n;ce(o,"argMax");let a=Ie(r,o.shape);const i=et(a,o.shape.length);let l=o;const c=[];i!=null&&(l=Kt({inputs:{x:o},backend:t,attrs:{perm:i}}),c.push(l),a=at(a.length,l.shape.length)),a=[a[0]],Et("argMax",a,l.shape.length);const[p,u]=$t(l.shape,a),h=W(p),d=Rt(h,"int32"),m=W(u),g=t.data.get(l.dataId).values;for(let f=0;f<d.length;++f){const x=f*m;let y=g[x],w=0;for(let b=0;b<m;++b){const k=g[x+b];k>y&&(y=k,w=b)}d[f]=w}return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),t.makeTensorInfo(p,"int32",d)}const iO={kernelName:Hl,backendName:"cpu",kernelFunc:aO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r}=n;ce(o,"argMin");let a=Ie(r,o.shape);const i=et(a,o.shape.length);let l=o;const c=[];i!=null&&(l=Kt({inputs:{x:o},backend:t,attrs:{perm:i}}),c.push(l),a=at(a.length,l.shape.length)),a=[a[0]],Et("argMin",a,l.shape.length);const[p,u]=$t(l.shape,a),h=W(p),d=Rt(h,"int32"),m=W(u),g=t.data.get(l.dataId).values;for(let f=0;f<d.length;++f){const x=f*m;let y=g[x],w=0;for(let b=0;b<m;++b){const k=g[x+b];k<y&&(y=k,w=b)}d[f]=w}return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),t.makeTensorInfo(p,"int32",d)}const cO={kernelName:ql,backendName:"cpu",kernelFunc:lO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pO=Oe(Na,s=>Math.asin(s)),uO={kernelName:Na,backendName:"cpu",kernelFunc:pO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hO=Oe(Sa,s=>Math.asinh(s)),dO={kernelName:Sa,backendName:"cpu",kernelFunc:hO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mO=Oe(Ta,s=>Math.atan(s)),fO={kernelName:Ta,backendName:"cpu",kernelFunc:mO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gO=lt((s,e)=>Math.atan2(s,e)),xO=yt(Aa,gO),yO={kernelName:Aa,backendName:"cpu",kernelFunc:xO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bO=Oe(Ea,s=>Math.atanh(s)),wO={kernelName:Ea,backendName:"cpu",kernelFunc:bO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function df(s,e,t,n,o,r){const a=o.strideHeight,i=o.strideWidth,l=o.dilationHeight,c=o.dilationWidth,p=o.effectiveFilterHeight,u=o.effectiveFilterWidth,h=o.padInfo.top,d=o.padInfo.left,m=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ke(o.outShape,t),f=g.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],y=o.outShape[2]*o.outShape[3],w=o.outShape[3];for(let b=0;b<o.batchSize;++b){const k=b*x,I=b*n[0];for(let N=0;N<o.inChannels;++N)for(let S=0;S<o.outHeight;++S){const T=S*a-h,E=Math.max(0,T),F=Math.min(o.inHeight,p+T),z=k+S*y;for(let j=0;j<o.outWidth;++j){const B=j*i-d,M=Math.max(0,B),V=Math.min(o.inWidth,u+B);let H=m,G=0,q=0;for(let Z=E;Z<F;Z+=l){const Q=I+Z*n[1];for(let J=M;J<V;J+=c){const oe=Q+J*n[2],ee=s[oe+N];r==="max"&&ee>H?H=ee:r==="avg"&&(G+=ee,q++)}if(isNaN(H))break}const Y=z+j*w+N;f[Y]=r==="avg"?G/q:H}}}return g}function f2(s,e,t,n,o=!1,r=!1){const a=ke(n.outShape,"int32"),i=n.strideHeight,l=n.strideWidth,c=n.dilationHeight,p=n.dilationWidth,u=n.effectiveFilterHeight,h=n.effectiveFilterWidth,d=n.padInfo.top,m=n.padInfo.left,g=ke(e,t,s);for(let f=0;f<n.batchSize;++f)for(let x=0;x<n.inChannels;++x)for(let y=0;y<n.outHeight;++y){const w=y*i-d;let b=w;for(;b<0;)b+=c;const k=Math.min(n.inHeight,u+w);for(let I=0;I<n.outWidth;++I){const N=I*l-m;let S=N;for(;S<0;)S+=p;const T=Math.min(n.inWidth,h+N);let E=Number.NEGATIVE_INFINITY,F=-1;for(let z=b;z<k;z+=c){const j=z-w;for(let B=S;B<T;B+=p){const M=B-N,V=g.get(f,z,B,x);V>E&&(E=V,o?F=r?((f*n.inHeight+z)*n.inWidth+B)*n.inChannels+x:(z*n.inWidth+B)*n.inChannels+x:F=j*h+M)}}a.set(F,f,y,I,x)}}return a}function g2(s,e,t,n,o,r){const a=o.strideDepth,i=o.strideHeight,l=o.strideWidth,c=o.dilationDepth,p=o.dilationHeight,u=o.dilationWidth,h=o.effectiveFilterDepth,d=o.effectiveFilterHeight,m=o.effectiveFilterWidth,g=o.padInfo.front,f=o.padInfo.top,x=o.padInfo.left,y=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=ke(o.outShape,t),b=w.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],I=o.outShape[2]*o.outShape[3]*o.outShape[4],N=o.outShape[3]*o.outShape[4],S=o.outShape[4];for(let T=0;T<o.batchSize;++T){const E=T*k,F=T*n[0];for(let z=0;z<o.inChannels;++z)for(let j=0;j<o.outDepth;++j){const B=j*a-g;let M=B;for(;M<0;)M+=c;const V=Math.min(o.inDepth,h+B),H=E+j*I;for(let G=0;G<o.outHeight;++G){const q=G*i-f;let Y=q;for(;Y<0;)Y+=p;const Z=Math.min(o.inHeight,d+q),Q=H+G*N;for(let J=0;J<o.outWidth;++J){const oe=J*l-x;let ee=oe;for(;ee<0;)ee+=u;const ae=Math.min(o.inWidth,m+oe),he=Q+J*S;let ge=y,fe=0,ve=0;for(let Re=M;Re<V;Re+=c){const Be=F+Re*n[1];for(let tt=Y;tt<Z;tt+=p){const Me=Be+tt*n[2];for(let Fe=ee;Fe<ae;Fe+=u){const Ze=Me+Fe*n[3],qe=s[Ze+z];if(r==="max"&&qe>ge?ge=qe:r==="avg"&&(fe+=qe,ve++),isNaN(ge))break}if(isNaN(ge))break}if(isNaN(ge))break}const $e=he+z;b[$e]=r==="avg"?fe/Math.max(ve,1):ge}}}}return w}function vO(s,e){const t=ke(e.outShape,"int32"),n=e.strideDepth,o=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=e.padInfo.front,d=e.padInfo.top,m=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let f=0;f<e.inChannels;++f)for(let x=0;x<e.outDepth;++x){const y=x*n-h;let w=y;for(;w<0;)w+=a;const b=Math.min(e.inDepth,c+y);for(let k=0;k<e.outHeight;++k){const I=k*o-d;let N=I;for(;N<0;)N+=i;const S=Math.min(e.inHeight,p+I);for(let T=0;T<e.outWidth;++T){const E=T*r-m;let F=E;for(;F<0;)F+=l;const z=Math.min(e.inWidth,u+E);let j=Number.NEGATIVE_INFINITY,B=-1;for(let M=w;M<b;M+=a){const V=M-y;for(let H=N;H<S;H+=i){const G=H-I;for(let q=F;q<z;q+=l){const Y=q-E,Z=s.get(g,M,H,q,f);Z>=j&&(j=Z,B=V*p*u+G*p+Y)}}}t.set(B,g,x,k,T,f)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e;ce(o,"avgPool");const{filterSize:r,strides:a,pad:i,dimRoundingMode:l}=n,c=1;$(Tt(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const p=Ps(o.shape,r,a,c,i,l);let u;if(p.filterWidth===1&&p.filterHeight===1&&Se(p.inShape,p.outShape))u=dn({inputs:{x:o},backend:t});else{const h=t.data.get(o.dataId).values,d=de(o.shape),m=df(h,o.shape,o.dtype,d,p,"avg");u=t.makeTensorInfo(p.outShape,o.dtype,m.values)}return u}const $O={kernelName:Kl,backendName:"cpu",kernelFunc:kO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=n;ce(o,"avgPool3d");const p=Sn(o.shape,r,a,1,i,l,c),u=t.data.get(o.dataId).values,h=g2(u,o.shape,o.dtype,de(o.shape),p,"avg");return t.makeTensorInfo(h.shape,"float32",h.values)}const CO={kernelName:Xl,backendName:"cpu",kernelFunc:IO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,input:r}=e,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=n;ce([o,r],"avgPool3DGrad");const p=Sn(r.shape,a,i,1,l,c),u=p.strideDepth,h=p.strideHeight,d=p.strideWidth,m=p.filterDepth,g=p.filterHeight,f=p.filterWidth,x=p.dilationDepth,y=p.dilationHeight,w=p.dilationWidth,b=p.effectiveFilterDepth,k=p.effectiveFilterHeight,I=p.effectiveFilterWidth,N=b-1-p.padInfo.front,S=I-1-p.padInfo.left,T=k-1-p.padInfo.top,E=ke(r.shape,"float32"),F=1/(m*g*f),z=t.bufferSync(o);for(let j=0;j<p.batchSize;++j)for(let B=0;B<p.inChannels;++B)for(let M=0;M<p.inDepth;++M)for(let V=0;V<p.inHeight;++V)for(let H=0;H<p.inWidth;++H){const G=M-N,q=V-T,Y=H-S;let Z=0;for(let Q=0;Q<b;Q+=x){const J=(G+Q)/u;if(!(J<0||J>=p.outDepth||Math.floor(J)!==J))for(let oe=0;oe<k;oe+=y){const ee=(q+oe)/h;if(!(ee<0||ee>=p.outHeight||Math.floor(ee)!==ee))for(let ae=0;ae<I;ae+=w){const he=(Y+ae)/d;if(he<0||he>=p.outWidth||Math.floor(he)!==he)continue;const ge=z.get(j,J,ee,he,B);Z+=ge}}}E.set(Z*F,j,M,V,H,B)}return t.makeTensorInfo(E.shape,E.dtype,E.values)}const SO={kernelName:kh,backendName:"cpu",kernelFunc:NO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TO(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,input:r}=e,a=r;ce([o,r],"avgPoolGrad");const{filterSize:i,strides:l,pad:c}=n,p=Ps(a.shape,i,l,1,c),u=p.strideHeight,h=p.strideWidth,d=p.filterHeight,m=p.filterWidth,g=p.dilationHeight,f=p.dilationWidth,x=p.effectiveFilterHeight,y=p.effectiveFilterWidth,w=y-1-p.padInfo.left,b=x-1-p.padInfo.top,k=ke(a.shape,"float32"),I=1/(d*m),N=t.data.get(o.dataId).values,S=ke(o.shape,"float32",N);for(let T=0;T<p.batchSize;++T)for(let E=0;E<p.inChannels;++E)for(let F=0;F<p.inHeight;++F)for(let z=0;z<p.inWidth;++z){const j=F-b,B=z-w;let M=0;for(let V=0;V<x;V+=g){const H=(j+V)/u;if(!(H<0||H>=p.outHeight||Math.floor(H)!==H))for(let G=0;G<y;G+=f){const q=(B+G)/h;if(q<0||q>=p.outWidth||Math.floor(q)!==q)continue;const Y=S.get(T,H,q,E);M+=Y}}k.set(M*I,T,F,z,E)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const EO={kernelName:vh,backendName:"cpu",kernelFunc:TO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,scale:r,offset:a,mean:i,variance:l}=e;$(i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(r==null||i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ce([o,i,l,r,a],"batchNorm");let{varianceEpsilon:c}=n;c==null&&(c=.001);const p=t.data.get(o.dataId).values,u=t.data.get(i.dataId).values,h=t.data.get(l.dataId).values,d=r?t.data.get(r.dataId).values:new Float32Array([1]),m=a?t.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(p.length),f=m.length,x=d.length,y=h.length,w=u.length;let b=0,k=0,I=0,N=0;for(let S=0;S<p.length;++S)g[S]=m[b++]+(p[S]-u[k++])*d[I++]/Math.sqrt(h[N++]+c),b>=f&&(b=0),k>=w&&(k=0),I>=x&&(I=0),N>=y&&(N=0);return t.makeTensorInfo(o.shape,o.dtype,g)}const _O={kernelName:cc,backendName:"cpu",kernelFunc:AO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{blockShape:r,crops:a}=n;ce([o],"batchToSpaceND");const i=r.reduce((x,y)=>x*y),l=Si(o.shape,r,i),c=Ti(l.length,r.length),p=Ei(o.shape,r,i),u=vm(a,r.length),h=km(p,a,r.length),d=We({inputs:{x:o},backend:t,attrs:{shape:l}}),m=Kt({inputs:{x:d},backend:t,attrs:{perm:c}}),g=We({inputs:{x:m},backend:t,attrs:{shape:p}}),f=jo({inputs:{x:g},backend:t,attrs:{begin:u,size:h}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),f}const RO={kernelName:Zl,backendName:"cpu",kernelFunc:DO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,weights:r}=e,{size:a}=n,i=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,c=lf(i,l,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,c)}const FO={kernelName:$h,backendName:"cpu",kernelFunc:OO};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(s){const{inputs:e,backend:t}=s,{s0:n,s1:o}=e,r=t.data.get(n.dataId).values,a=t.data.get(o.dataId).values,i=ye(Array.from(r),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const LO={kernelName:Ih,backendName:"cpu",kernelFunc:PO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO=Oe(Ra,(s,e)=>{const t=e;return s>t.clipValueMax?t.clipValueMax:s<t.clipValueMin?t.clipValueMin:s}),jO={kernelName:Ra,backendName:"cpu",kernelFunc:zO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BO=s=>{const{x:e}=s.inputs,t=s.backend,n=new Float32Array(W(e.shape)),o=t.data.get(e.dataId),r=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(r.dataId).values,l=t.data.get(a.dataId).values;for(let c=0;c<i.length;c++){const p=i[c],u=l[c];n[c]=Math.hypot(p,u)}return t.makeOutput(n,e.shape,"float32")},MO={kernelName:Ql,backendName:"cpu",kernelFunc:BO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sr(s){const{inputs:e,backend:t}=s,{input:n}=e,o=t.data.get(n.dataId).complexTensorInfos.imag,r=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,r)}const VO={kernelName:Wh,backendName:"cpu",kernelFunc:Sr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(s){const{inputs:e,backend:t,attrs:n}=s,{axis:o}=n,r=Ie(o,e[0].shape)[0],a=e.map(g=>g.shape);ym(a,r);let i=ln(e.map(g=>g.shape),r);if(W(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const l=e.filter(g=>W(g.shape)>0);if(l.length===1)return dn({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const g=l.map(b=>zo({inputs:{input:b},backend:t})),f=l.map(b=>Sr({inputs:{input:b},backend:t})),x=Tr({inputs:g,backend:t,attrs:{axis:r}}),y=Tr({inputs:f,backend:t,attrs:{axis:r}}),w=Qt({inputs:{real:x,imag:y},backend:t});return g.forEach(b=>t.disposeIntermediateTensorInfo(b)),f.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),w}const c=l.map(g=>{const x=[-1,W(g.shape.slice(r))];return We({inputs:{x:g},backend:t,attrs:{shape:x}})}),p=c.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));i=ln(c.map(g=>g.shape),1);const u=c[0].shape[0]===1,h=vw(p,i,e[0].dtype,u),d=ln(l.map(g=>g.shape),r),m=t.makeTensorInfo(d,e[0].dtype,h);return c.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const WO={kernelName:ec,backendName:"cpu",kernelFunc:Tr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r}=e,{strides:a,pad:i,dataFormat:l,dilations:c,dimRoundingMode:p}=n;ce([o,r],"conv2d");const u=Tn(l),h=kt(o.shape,r.shape,a,c,i,p,!1,u),d=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,f=h.dilationWidth,x=h.padInfo.left,y=h.padInfo.top,w=h.dataFormat==="channelsLast",b=new mt(h.outShape,o.dtype),k=de(o.shape),I=de(r.shape),N=k[0],S=w?k[1]:k[2],T=w?k[2]:1,E=w?1:k[1],F=b.strides[0],z=w?b.strides[1]:b.strides[2],j=w?b.strides[2]:1,B=w?1:b.strides[1],M=t.data.get(o.dataId).values,V=t.data.get(r.dataId).values,H=b.values;for(let G=0;G<h.batchSize;++G){const q=G*N,Y=G*F;for(let Z=0;Z<h.outHeight;++Z){const Q=Y+Z*z,J=Z*h.strideHeight-y;for(let oe=0;oe<d;++oe){const ee=J+oe*g;if(ee<0||ee>=h.inHeight)continue;const ae=oe*I[0],he=q+ee*S;for(let ge=0;ge<h.outWidth;++ge){const fe=Q+ge*j,ve=ge*h.strideWidth-x;for(let $e=0;$e<m;++$e){const Re=ve+$e*f;if(Re<0||Re>=h.inWidth)continue;const Be=ae+$e*I[1],tt=he+Re*T;let Me=Be;for(let Fe=0;Fe<h.inChannels;++Fe){const Ze=M[tt+Fe*E];for(let qe=0;qe<h.outChannels;++qe)H[fe+qe*B]+=Ze*V[Me+qe];Me+=h.outChannels}}}}}}return t.makeTensorInfo(b.shape,b.dtype,H)}const UO={kernelName:tc,backendName:"cpu",kernelFunc:x2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,dy:r}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:p}=n;ce([o,r],"conv2dBackpropFilter");const u=Tn(l),h=kt(o.shape,p,a,1,i,c,!1,u),{strideHeight:d,strideWidth:m,filterHeight:g,filterWidth:f}=h,x=h.dataFormat==="channelsLast",y=new mt(h.filterShape,"float32"),w=h.padInfo.left,b=h.padInfo.top,k=t.data.get(o.dataId).values,I=t.data.get(r.dataId).values,N=new mt(o.shape,o.dtype,k),S=new mt(r.shape,r.dtype,I);for(let T=0;T<g;++T){const E=Math.max(0,Math.ceil((b-T)/d)),F=Math.min(h.outHeight,(h.inHeight+b-T)/d);for(let z=0;z<f;++z){const j=Math.max(0,Math.ceil((w-z)/m)),B=Math.min(h.outWidth,(h.inWidth+w-z)/m);for(let M=0;M<h.inChannels;++M)for(let V=0;V<h.outChannels;++V){let H=0;for(let G=0;G<h.batchSize;++G)for(let q=E;q<F;++q){const Y=T+q*d-b;for(let Z=j;Z<B;++Z){const Q=z+Z*m-w;x?H+=N.get(G,Y,Q,M)*S.get(G,q,Z,V):H+=N.get(G,M,Y,Q)*S.get(G,V,q,Z)}}y.set(H,T,z,M,V)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const HO={kernelName:Nh,backendName:"cpu",kernelFunc:GO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qO(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,filter:r}=e,{inputShape:a,strides:i,pad:l,dataFormat:c,dimRoundingMode:p}=n;ce([o,r],"conv2dBackpropInput");const u=de(r.shape),h=de(o.shape);let d=Tn(c);const m=kt(a,r.shape,i,1,l,p,!1,d),g=new mt(m.inShape,"float32"),f=g.values,x=t.data.get(o.dataId).values,y=t.data.get(r.dataId).values,[w,b,k]=u,{batchSize:I,filterHeight:N,filterWidth:S,inChannels:T,inHeight:E,inWidth:F,outChannels:z,outHeight:j,outWidth:B,strideHeight:M,strideWidth:V}=m;d=m.dataFormat;const H=N-1-m.padInfo.top,G=S-1-m.padInfo.left,q=d==="channelsLast",Y=g.strides[0],Z=q?g.strides[1]:g.strides[2],Q=q?g.strides[2]:1,J=q?1:g.strides[1],oe=h[0],ee=q?h[1]:h[2],ae=q?h[2]:1,he=q?1:h[1];for(let ge=0;ge<I;++ge)for(let fe=0;fe<T;++fe)for(let ve=0;ve<E;++ve){const $e=ve-H,Re=Math.max(0,Math.ceil($e/M)),Be=Math.min(j,(N+$e)/M);for(let tt=0;tt<F;++tt){const Me=tt-G,Fe=Math.max(0,Math.ceil(Me/V)),Ze=Math.min(B,(S+Me)/V);let qe=0;for(let It=Re;It<Be;++It){const Dn=It*M-$e;for(let hs=Fe;hs<Ze;++hs){const mo=hs*V-Me,js=oe*ge+ee*It+ae*hs,xn=w*(N-1-Dn)+b*(S-1-mo)+k*fe;for(let Rn=0;Rn<z;++Rn){const On=x[js+he*Rn],Fn=y[xn+Rn];qe+=On*Fn}}}const gn=Y*ge+Z*ve+Q*tt+J*fe;f[gn]=qe}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const KO={kernelName:sc,backendName:"cpu",kernelFunc:qO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r}=e,{strides:a,pad:i,dilations:l}=n;ce([o,r],"conv3d");const c=ro(o.shape,r.shape,a,l,i),{filterDepth:p,filterHeight:u,filterWidth:h,dilationDepth:d,dilationHeight:m,dilationWidth:g,padInfo:f}=c,x=f.front,y=f.left,w=f.top,b=new mt(c.outShape,o.dtype),k=t.data.get(o.dataId).values,I=t.data.get(r.dataId).values,N=b.values,S=de(o.shape),T=de(r.shape);for(let E=0;E<c.batchSize;++E){const F=E*S[0],z=E*b.strides[0];for(let j=0;j<c.outDepth;++j){const B=z+j*b.strides[1],M=j*c.strideDepth-x;for(let V=0;V<p;++V){const H=M+V*d;if(H<0||H>=c.inDepth)continue;const G=V*T[0],q=F+H*S[1];for(let Y=0;Y<c.outHeight;++Y){const Z=B+Y*b.strides[2],Q=Y*c.strideHeight-w;for(let J=0;J<u;++J){const oe=Q+J*m;if(oe<0||oe>=c.inHeight)continue;const ee=G+J*T[1],ae=q+oe*S[2];for(let he=0;he<c.outWidth;++he){const ge=Z+he*c.outChannels,fe=he*c.strideWidth-y;for(let ve=0;ve<h;++ve){const $e=fe+ve*g;if($e<0||$e>=c.inWidth)continue;const Re=ee+ve*T[2],Be=ae+$e*c.inChannels;let tt=Re;for(let Me=0;Me<c.inChannels;++Me){const Fe=k[Be+Me];for(let Ze=0;Ze<c.outChannels;++Ze)N[ge+Ze]+=Fe*I[tt+Ze];tt+=c.outChannels}}}}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const YO={kernelName:nc,backendName:"cpu",kernelFunc:XO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,dy:r}=e,{strides:a,pad:i,filterShape:l}=n;ce([o,r],"conv3dBackpropFilterV2");const c=de(o.shape),p=de(r.shape),u=ro(o.shape,l,a,1,i),h=u.strideDepth,d=u.strideHeight,m=u.strideWidth,g=u.filterDepth,f=u.filterHeight,x=u.filterWidth,y=new mt(u.filterShape,"float32"),w=y.values,[b,k,I,N]=y.strides,S=t.data.get(r.dataId).values,[T,E,F,z]=p,j=t.data.get(o.dataId).values,[B,M,V,H]=c,G=u.padInfo.front,q=u.padInfo.left,Y=u.padInfo.top;for(let Z=0;Z<g;++Z){const Q=Math.max(0,Math.ceil((G-Z)/h)),J=Math.min(u.outDepth,(u.inDepth+G-Z)/h),oe=Z*b;for(let ee=0;ee<f;++ee){const ae=Math.max(0,Math.ceil((Y-ee)/d)),he=Math.min(u.outHeight,(u.inHeight+Y-ee)/d),ge=ee*k+oe;for(let fe=0;fe<x;++fe){const ve=Math.max(0,Math.ceil((q-fe)/m)),$e=Math.min(u.outWidth,(u.inWidth+q-fe)/m),Re=fe*I+ge;for(let Be=0;Be<u.inChannels;++Be){const tt=Be*N+Re;for(let Me=0;Me<u.outChannels;++Me){let Fe=0;for(let Ze=0;Ze<u.batchSize;++Ze){const qe=Ze*B,gn=Ze*T;for(let It=Q;It<J;++It){const hs=(Z+It*h-G)*M+qe,mo=It*E+gn;for(let js=ae;js<he;++js){const Rn=(ee+js*d-Y)*V+hs,On=js*F+mo;for(let Fn=ve;Fn<$e;++Fn){const Lp=(fe+Fn*m-q)*H+Rn,zp=Fn*z+On;Fe+=j[Lp+Be]*S[zp+Me]}}}}w[tt+Me]=Fe}}}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const JO={kernelName:Sh,backendName:"cpu",kernelFunc:ZO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,filter:r}=e,{pad:a,strides:i,inputShape:l}=n;ce([o],"conv3dBackpropInputV2");const c=de(o.shape),p=de(r.shape),u=ro(l,r.shape,i,1,a),h=new mt(u.inShape,"float32"),d=h.values,[m,g,f,x]=h.strides,y=t.data.get(o.dataId).values,[w,b,k,I]=c,N=t.data.get(r.dataId).values,[S,T,E,F]=p,{batchSize:z,filterDepth:j,filterHeight:B,filterWidth:M,inChannels:V,inDepth:H,inHeight:G,inWidth:q,outChannels:Y,outDepth:Z,outHeight:Q,outWidth:J,strideDepth:oe,strideHeight:ee,strideWidth:ae}=u,he=j-1-u.padInfo.front,ge=B-1-u.padInfo.top,fe=M-1-u.padInfo.left;for(let ve=0;ve<z;++ve)for(let $e=0;$e<V;++$e)for(let Re=0;Re<H;++Re){const Be=Re-he,tt=Math.max(0,Math.ceil(Be/oe)),Me=Math.min(Z,(j+Be)/oe);for(let Fe=0;Fe<G;++Fe){const Ze=Fe-ge,qe=Math.max(0,Math.ceil(Ze/ee)),gn=Math.min(Q,(B+Ze)/ee);for(let It=0;It<q;++It){const Dn=It-fe,hs=Math.max(0,Math.ceil(Dn/ae)),mo=Math.min(J,(M+Dn)/ae);let js=0;for(let xn=tt;xn<Me;++xn){const Rn=xn*oe-Be;for(let On=qe;On<gn;++On){const Fn=On*ee-Ze;for(let Xr=hs;Xr<mo;++Xr){const Lp=Xr*ae-Dn,zp=w*ve+b*xn+k*On+I*Xr,yv=S*(j-1-Rn)+T*(B-1-Fn)+E*(M-1-Lp)+F*$e;for(let Ui=0;Ui<Y;++Ui){const bv=y[zp+Ui],wv=N[yv+Ui];js+=bv*wv}}}}d[m*ve+g*Re+f*Fe+x*It+$e]=js}}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}const eF={kernelName:Th,backendName:"cpu",kernelFunc:QO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tF=Oe(Oa,s=>Math.cos(s)),sF={kernelName:Oa,backendName:"cpu",kernelFunc:tF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nF=Oe(Fa,s=>Math.cosh(s)),oF={kernelName:Fa,backendName:"cpu",kernelFunc:nF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(s){const{inputs:e,backend:t,attrs:n}=s,{image:o,boxes:r,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:c}=n,[p,u,h,d]=o.shape,m=r.shape[0],[g,f]=i,x=ke([m,g,f,d],"float32"),y=t.data.get(r.dataId).values,w=t.data.get(a.dataId).values,b=t.data.get(o.dataId).values,k=de(o.shape),I=de(x.shape);for(let N=0;N<m;N++){const S=N*4,T=y[S],E=y[S+1],F=y[S+2],z=y[S+3],j=w[N];if(j>=p)continue;const B=g>1?(F-T)*(u-1)/(g-1):0,M=f>1?(z-E)*(h-1)/(f-1):0;for(let V=0;V<g;V++){const H=g>1?T*(u-1)+V*B:.5*(T+F)*(u-1);if(H<0||H>u-1){for(let G=0;G<f;G++)for(let q=0;q<d;q++){const Y=q+G*I[2]+V*I[1]+N*I[0];x.values[Y]=c}continue}if(l==="bilinear"){const G=Math.floor(H),q=Math.ceil(H),Y=H-G;for(let Z=0;Z<f;Z++){const Q=f>1?E*(h-1)+Z*M:.5*(E+z)*(h-1);if(Q<0||Q>h-1){for(let ae=0;ae<d;ae++){const he=ae+Z*I[2]+V*I[1]+N*I[0];x.values[he]=c}continue}const J=Math.floor(Q),oe=Math.ceil(Q),ee=Q-J;for(let ae=0;ae<d;ae++){let he=ae+J*k[2]+G*k[1]+j*k[0];const ge=b[he];he=ae+oe*k[2]+G*k[1]+j*k[0];const fe=b[he];he=ae+J*k[2]+q*k[1]+j*k[0];const ve=b[he];he=ae+oe*k[2]+q*k[1]+j*k[0];const $e=b[he],Re=ge+(fe-ge)*ee,Be=ve+($e-ve)*ee;he=ae+Z*I[2]+V*I[1]+N*I[0],x.values[he]=Re+(Be-Re)*Y}}}else for(let G=0;G<f;++G){const q=f>1?E*(h-1)+G*M:.5*(E+z)*(h-1);if(q<0||q>h-1){for(let Q=0;Q<d;Q++){const J=Q+G*I[2]+V*I[1]+N*I[0];x.values[J]=c}continue}const Y=Math.round(q),Z=Math.round(H);for(let Q=0;Q<d;Q++){const J=Q+Y*k[2]+Z*k[1]+j*k[0],oe=Q+G*I[2]+V*I[1]+N*I[0];x.values[oe]=b[J]}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const aF={kernelName:Ah,backendName:"cpu",kernelFunc:rF};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,exclusive:a,reverse:i}=n;ce(o,"cumprod");const l=et([r],o.shape.length);let c=o;l!=null&&(c=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}));const p=at(1,o.shape.length)[0];if(p!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${p}`);const u=ns(c.dtype,"int32"),h=xh(W(c.shape),u),d=t.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=i?(x,y)=>x+m-y-1:(x,y)=>x+y;for(let x=0;x<d.length;x+=m)for(let y=0;y<m;y++){const w=g(x,y);if(y===0)h[w]=a?1:d[w];else{const b=g(x,y-1);h[w]=a?d[b]*h[b]:d[w]*h[b]}}const f=t.makeTensorInfo(c.shape,u,h);if(l!=null){const x=ao(l),y=Kt({inputs:{x:f},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(c),y}return f}const lF={kernelName:Eh,backendName:"cpu",kernelFunc:iF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,exclusive:a,reverse:i}=n;ce(o,"cumsum");const l=et([r],o.shape.length);let c=o;l!=null&&(c=Kt({inputs:{x:o},backend:t,attrs:{perm:l}}));const p=at(1,o.shape.length)[0];if(p!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${p}`);const u=ns(c.dtype,"int32"),h=Rt(W(c.shape),u),d=t.data.get(c.dataId).values,m=c.shape[c.shape.length-1],g=i?(x,y)=>x+m-y-1:(x,y)=>x+y;for(let x=0;x<d.length;x+=m)for(let y=0;y<m;y++){const w=g(x,y);if(y===0)h[w]=a?0:d[w];else{const b=g(x,y-1);h[w]=a?d[b]+h[b]:d[w]+h[b]}}const f=t.makeTensorInfo(c.shape,u,h);if(l!=null){const x=ao(l),y=Kt({inputs:{x:f},backend:t,attrs:{perm:x}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(c),y}return f}const pF={kernelName:oc,backendName:"cpu",kernelFunc:cF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,weights:r}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){const l=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,p=lf(l,c,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,p)}else if(o.shape.length===2){const l=t.bufferSync(o),c=t.bufferSync(r),p=yw(l,c,a,i);return t.makeTensorInfo(p.shape,r.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const hF={kernelName:_h,backendName:"cpu",kernelFunc:uF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{blockSize:r,dataFormat:a}=n;$(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=o.shape[0],l=o.shape[1],c=o.shape[2],p=o.shape[3],u=l*r,h=c*r,d=p/(r*r),m=t.data.get(o.dataId).values,g=new Float32Array(i*u*h*d);let f=0;for(let x=0;x<i;++x)for(let y=0;y<u;++y){const w=Math.floor(y/r),b=y%r;for(let k=0;k<h;++k){const I=Math.floor(k/r),N=k%r,S=(b*r+N)*d;for(let T=0;T<d;++T){const F=T+S+p*(I+c*(w+l*x));g[f++]=m[F]}}}return t.makeTensorInfo([i,u,h,d],o.dtype,g)}const mF={kernelName:Dh,backendName:"cpu",kernelFunc:dF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y2(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:c}=n;ce([o,r],"depthwiseConv2DNative");const p=de(o.shape),u=de(r.shape);let h=l;h==null&&(h=[1,1]),$(Tt(a,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`);const d=kt(o.shape,r.shape,a,h,i,c,!0),{filterHeight:m,filterWidth:g,dilationHeight:f,dilationWidth:x,padInfo:y}=d,w=y.left,b=y.top,k=d.outChannels/d.inChannels,I=new mt(d.outShape,o.dtype),N=t.data.get(o.dataId).values,S=t.data.get(r.dataId).values,T=I.values;for(let E=0;E<d.batchSize;++E){const F=E*p[0],z=E*I.strides[0];for(let j=0;j<d.outHeight;++j){const B=z+j*I.strides[1],M=j*d.strideHeight-b;for(let V=0;V<m;++V){const H=M+V*f;if(H<0||H>=d.inHeight)continue;const G=V*u[0],q=F+H*p[1];for(let Y=0;Y<d.outWidth;++Y){const Z=B+Y*I.strides[2],Q=Y*d.strideWidth-w;for(let J=0;J<g;++J){const oe=Q+J*x;if(oe<0||oe>=d.inWidth)continue;const ee=G+J*u[1],ae=q+oe*d.inChannels;let he=Z,ge=ee;for(let fe=0;fe<d.inChannels;++fe){const ve=N[ae+fe];for(let $e=0;$e<k;++$e)T[he+$e]+=ve*S[ge+$e];he+=k,ge+=k}}}}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const fF={kernelName:rc,backendName:"cpu",kernelFunc:y2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gF(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,dy:r}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:c,filterShape:p}=n;ce([o,r],"depthwiseConv2dNativeBackpropFilter");const u=kt(o.shape,p,a,i,l,c,!0),{strideHeight:h,strideWidth:d,filterHeight:m,filterWidth:g}=u,f=new mt(u.filterShape,"float32"),x=u.padInfo.left,y=u.padInfo.top,w=u.outChannels/u.inChannels,b=t.data.get(o.dataId).values,k=new mt(o.shape,o.dtype,b),I=t.data.get(r.dataId).values,N=new mt(r.shape,r.dtype,I);for(let S=0;S<m;++S){const T=Math.max(0,Math.ceil((y-S)/h)),E=Math.min(u.outHeight,(u.inHeight+y-S)/h);for(let F=0;F<g;++F){const z=Math.max(0,Math.ceil((x-F)/d)),j=Math.min(u.outWidth,(u.inWidth+x-F)/d);for(let B=0;B<u.outChannels;++B){const M=Math.trunc(B/w),V=B%w;let H=0;for(let G=0;G<u.batchSize;++G)for(let q=T;q<E;++q){const Y=S+q*h-y;for(let Z=z;Z<j;++Z){const Q=F+Z*d-x;H+=k.get(G,Y,Q,M)*N.get(G,q,Z,B)}}f.set(H,S,F,M,V)}}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const xF={kernelName:Rh,backendName:"cpu",kernelFunc:gF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,filter:r}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:c,inputShape:p}=n;ce([o,r],"depthwiseConv2DNativeBackpropInput");const u=de(o.shape),h=de(r.shape),d=kt(p,r.shape,a,i,l,c,!0),m=new mt(d.inShape,"float32"),g=m.values,[f,x,y]=m.strides,w=t.data.get(o.dataId).values,[b,k,I]=u,N=t.data.get(r.dataId).values,[S,T,E]=h,{batchSize:F,filterHeight:z,filterWidth:j,inChannels:B,inHeight:M,inWidth:V,outChannels:H,outHeight:G,outWidth:q,strideHeight:Y,strideWidth:Z}=d,Q=z-1-d.padInfo.top,J=j-1-d.padInfo.left,oe=H/B;for(let ee=0;ee<F;++ee)for(let ae=0;ae<B;++ae)for(let he=0;he<M;++he){const ge=he-Q,fe=Math.max(0,Math.ceil(ge/Y)),ve=Math.min(G,(z+ge)/Y);for(let $e=0;$e<V;++$e){const Re=$e-J,Be=Math.max(0,Math.ceil(Re/Z)),tt=Math.min(q,(j+Re)/Z);let Me=0;for(let Fe=fe;Fe<ve;++Fe){const Ze=Fe*Y-ge;for(let qe=Be;qe<tt;++qe){const gn=qe*Z-Re,It=b*ee+k*Fe+I*qe,Dn=S*(z-1-Ze)+T*(j-1-gn)+E*ae;for(let hs=0;hs<oe;++hs){const mo=ae*oe+hs,js=w[It+mo],xn=N[Dn+hs];Me+=js*xn}}}g[f*ee+x*he+y*$e+ae]=Me}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const bF={kernelName:Oh,backendName:"cpu",kernelFunc:yF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wF(s){const{inputs:e,backend:t}=s,{x:n}=e,o=W(n.shape),r=t.data.get(n.dataId).values,a=ke([o,o],n.dtype),i=a.values;for(let c=0;c<r.length;c++)i[c*o+c]=r[c];const l=[...n.shape,...n.shape];return t.makeTensorInfo(l,a.dtype,a.values)}const vF={kernelName:Fh,backendName:"cpu",kernelFunc:wF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kF={kernelName:ac,backendName:"cpu",kernelFunc:({inputs:s,backend:e,attrs:t})=>{const{x:n,filter:o}=s,{strides:r,pad:a,dilations:i}=t,l=e,c=l.data.get(n.dataId).values,p=n.shape.length,u=l.data.get(o.dataId).values,h=o.shape.length,{batchSize:d,inHeight:m,inWidth:g,inChannels:f,outHeight:x,outWidth:y,padInfo:w,strideHeight:b,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:S,dilationWidth:T,outShape:E}=wi(n.shape,o.shape,r,a,"NHWC",i),F=W(E),z=E.length,j=ot(n.dtype,F);for(let M=0;M<d;++M)for(let V=0;V<x;++V){const H=V*b-w.top;for(let G=0;G<y;++G){const q=G*k-w.left;for(let Y=0;Y<f;++Y){let Z=Number.MIN_SAFE_INTEGER;for(let J=0;J<I;++J){const oe=H+J*S;if(oe>=0&&oe<m)for(let ee=0;ee<N;++ee){const ae=q+ee*T;if(ae>=0&&ae<g){const he=rn([M,oe,ae,Y],p,de(n.shape)),ge=rn([J,ee,Y],h,de(o.shape)),fe=c[he]+u[ge];fe>Z&&(Z=fe)}}}const Q=rn([M,V,G,Y],z,de(E));j[Q]=Z}}}return{dataId:l.write(Wo(j,n.dtype),E,n.dtype),shape:E,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F={kernelName:hu,backendName:"cpu",kernelFunc:({inputs:s,backend:e,attrs:t})=>{const{x:n,filter:o,dy:r}=s,{strides:a,pad:i,dilations:l}=t,c=e,p=_s(n.shape,c.data.get(n.dataId).values),u=_s(o.shape,c.data.get(o.dataId).values),{batchSize:h,inHeight:d,inWidth:m,inChannels:g,outHeight:f,outWidth:x,padInfo:y,strideHeight:w,strideWidth:b,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:T}=wi(n.shape,o.shape,a,i,"NHWC",l);$(r.rank===T.length,()=>`Error in ${hu}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const E=_s(T,c.data.get(r.dataId).values),F=g0(o.shape,o.dtype);for(let j=0;j<h;++j)for(let B=0;B<f;++B){const M=B*w-y.top;for(let V=0;V<x;++V){const H=V*b-y.left;for(let G=0;G<g;++G){let q=Number.MIN_SAFE_INTEGER,Y=0,Z=0;for(let Q=0;Q<k;++Q){const J=M+Q*N;if(J>=0&&J<d)for(let oe=0;oe<I;++oe){const ee=H+oe*S;if(ee>=0&&ee<m){const ae=p[j][J][ee][G]+u[Q][oe][G];ae>q&&(q=ae,Y=Q,Z=oe)}}}F[Y][Z][G]+=E[j][B][V][G]}}}return{dataId:c.write(Wo(F,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IF={kernelName:uu,backendName:"cpu",kernelFunc:({inputs:s,backend:e,attrs:t})=>{const{x:n,filter:o,dy:r}=s,{strides:a,pad:i,dilations:l}=t,c=e,p=_s(n.shape,c.data.get(n.dataId).values),u=_s(o.shape,c.data.get(o.dataId).values),{batchSize:h,inHeight:d,inWidth:m,inChannels:g,outHeight:f,outWidth:x,padInfo:y,strideHeight:w,strideWidth:b,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:T}=wi(n.shape,o.shape,a,i,"NHWC",l);$(r.rank===T.length,()=>`Error in ${uu}, dy must have the same rank as output ${T.length}, but got ${r.rank}`);const E=_s(T,c.data.get(r.dataId).values),F=g0(n.shape,n.dtype);for(let j=0;j<h;++j)for(let B=0;B<f;++B){const M=B*w-y.top;for(let V=0;V<x;++V){const H=V*b-y.left;for(let G=0;G<g;++G){let q=Number.MIN_SAFE_INTEGER,Y=M<0?0:M,Z=H<0?0:H;for(let Q=0;Q<k;++Q){const J=M+Q*N;if(J>=0&&J<d)for(let oe=0;oe<I;++oe){const ee=H+oe*S;if(ee>=0&&ee<m){const ae=p[j][J][ee][G]+u[Q][oe][G];ae>q&&(q=ae,Y=J,Z=ee)}}}F[j][Y][Z][G]+=E[j][B][V][G]}}}return{dataId:c.write(Wo(F,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CF(s){const{inputs:e,backend:t,attrs:n}=s,{image:o}=e,{canvas:r,options:a}=n,{contextOptions:i,imageOptions:l}=a||{},c=(l==null?void 0:l.alpha)||1,p=(i==null?void 0:i.contextType)||"2d";if(p!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const u=r.getContext(p,(i==null?void 0:i.contextAttributes)||{});if(u==null)throw new Error(`Could not get the context with ${p} type.`);const[h,d]=o.shape.slice(0,2),m=o.shape.length===2?1:o.shape[2],g=t.data.get(o.dataId).values,f=o.dtype==="float32"?255:1,x=new Uint8ClampedArray(d*h*4);for(let w=0;w<h*d;++w){const b=[0,0,0,255*c];for(let I=0;I<m;I++){const N=g[w*m+I];if(o.dtype==="float32"){if(N<0||N>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${N}.`)}else if(o.dtype==="int32"&&(N<0||N>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${N}.`);m===1?(b[0]=N*f,b[1]=N*f,b[2]=N*f):b[I]=N*f}const k=w*4;x[k+0]=Math.round(b[0]),x[k+1]=Math.round(b[1]),x[k+2]=Math.round(b[2]),x[k+3]=Math.round(b[3])}r.width=d,r.height=h;const y=new ImageData(x,d,h);return u.putImageData(y,0,0),o}const NF={kernelName:Wv,backendName:"cpu",kernelFunc:CF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zi(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n;ce(o,"sum");let i;o.dtype==="bool"?i=eo({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=dn({inputs:{x:o},backend:t});const l=i.shape.length,c=Ie(r,i.shape),p=et(c,l);let u=c,h=i;p!=null&&(h=Kt({inputs:{x:i},backend:t,attrs:{perm:p}}),u=at(u.length,l)),Et("sum",u,h.shape.length);const[d,m]=$t(h.shape,u),g=ns(h.dtype,"int32");let f=Ol(t,d,g);const x=W(m),y=t.data.get(f.dataId).values,w=t.data.get(h.dataId).values;for(let b=0;b<y.length;++b){const k=b*x;let I=0;for(let N=0;N<x;++N)I+=w[k+N];y[b]=I}if(a){const b=rt(f.shape,c),k=f;f=We({inputs:{x:f},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(k)}return t.disposeIntermediateTensorInfo(i),p!=null&&t.disposeIntermediateTensorInfo(h),f}const SF={kernelName:jc,backendName:"cpu",kernelFunc:zi};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TF(s){const{inputs:e,backend:t,attrs:n}=s,{equation:o}=n,r=e,{allDims:a,summedDims:i,idDims:l}=Am(o,r.length);Dm(a.length,l,r);const{path:c,steps:p}=Rm(i,l),u=p.length;let h=null,d=a.length;const m=[];for(let g=0;g<u;++g){for(const f of p[g]){const{permutationIndices:x,expandDims:y}=_m(d,l[f]);let w;Om(x)?w=r[f]:(w=Kt({inputs:{x:r[f]},backend:t,attrs:{perm:x}}),m.push(w));const b=w.shape.slice();for(let k=0;k<y.length;++k)b.splice(y[k],0,1);Se(w.shape,b)||(w=We({inputs:{x:w},backend:t,attrs:{shape:b}}),m.push(w)),h===null?h=w:(h=_p({inputs:{a:w,b:h},backend:t}),m.push(h))}g<u-1&&(c[g]>=0&&(h=zi({inputs:{x:h},backend:t,attrs:{axis:c[g]-(a.length-d),keepDims:!1}}),m.push(h)),d--)}for(const g of m)g!==h&&t.disposeIntermediateTensorInfo(g);return h}const EF={kernelName:Ph,backendName:"cpu",kernelFunc:TF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AF(s){const{inputs:e,backend:t}=s,{dy:n,y:o}=e;ce([n,o],"eluGrad");const r=new Float32Array(W(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(n.dataId).values;for(let l=0;l<a.length;++l){const c=a[l];c>=0?r[l]=i[l]:r[l]=i[l]*(c+1)}return t.makeTensorInfo(o.shape,"float32",r)}const _F={kernelName:Lh,backendName:"cpu",kernelFunc:AF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF=$m,RF=Im,OF=Cm,FF=Nm,PF=Sm,LF=Tm,zF=Oe(za,s=>{const e=Math.sign(s),t=Math.abs(s),n=1/(1+DF*t);return e*(1-((((LF*n+PF)*n+FF)*n+OF)*n+RF)*n*Math.exp(-t*t))}),jF={kernelName:za,backendName:"cpu",kernelFunc:zF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ll(s){const{inputs:e,backend:t,attrs:n}=s,{input:o}=e,{dim:r}=n,a=o.shape.length,i=o.shape.slice();let l=r;return r<0&&($(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+r+1),i.splice(l,0,1),We({inputs:{x:o},backend:t,attrs:{shape:i}})}const BF={kernelName:lc,backendName:"cpu",kernelFunc:Ll};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF=lt((s,e)=>s/e),mf=yt(Pa,MF),ch={kernelName:Pa,backendName:"cpu",kernelFunc:mf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b2(s,e,t){const n=s.shape,o=n[0],r=n[1],a=t.data.get(s.dataId),i=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,c=[o,r],p=W(c),u=St("float32",p),h=St("float32",p);for(let f=0;f<o;f++){const x=jo({inputs:{x:i},backend:t,attrs:{begin:[f,0],size:[1,r]}}),y=jo({inputs:{x:l},backend:t,attrs:{begin:[f,0],size:[1,r]}}),w=Qt({inputs:{real:x,imag:y},backend:t}),{real:b,imag:k}=VF(w,e,t),I=Cn(b,k);for(let N=0;N<r;N++){const S=Em(I,N);u[f*r+N]=S.real,h[f*r+N]=S.imag}t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(w)}const d=t.makeTensorInfo(c,"float32",u),m=t.makeTensorInfo(c,"float32",h),g=Qt({inputs:{real:d,imag:m},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(m),g}function VF(s,e,t){const n=W(s.shape),o=t.data.get(s.dataId),r=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(WF(n)){const i=ph(r,a,n,e,t),l=[s.shape[0],s.shape[1]];if(e){const c=t.makeTensorInfo(l,"float32",i.real),p=t.makeTensorInfo(l,"float32",i.imag),u=t.makeTensorInfo([],"float32",so(n,"float32")),h=dn({inputs:{x:u},backend:t}),d=ch.kernelFunc({inputs:{a:c,b:u},backend:t}),m=ch.kernelFunc({inputs:{a:p,b:h},backend:t}),g=t.data.get(d.dataId).values,f=t.data.get(m.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(m),{real:g,imag:f}}return i}else{const i=Cn(r,a),l=UF(i,n,e);return _1(l)}}function WF(s){return(s&s-1)===0}function ph(s,e,t,n,o){if(t===1)return{real:s,imag:e};const r=Cn(s,e),a=t/2,i=D1(r),l=i.real,c=i.imag,p=[l.length],u=o.makeTensorInfo(p,"float32",l),h=o.makeTensorInfo(p,"float32",c),d=Qt({inputs:{real:u,imag:h},backend:o}),m=R1(r),g=m.real,f=m.imag,x=[g.length],y=o.makeTensorInfo(x,"float32",g),w=o.makeTensorInfo(x,"float32",f),b=Qt({inputs:{real:y,imag:w},backend:o}),k=ph(l,c,a,n,o),I=k.real,N=k.imag,S=[I.length],T=o.makeTensorInfo(S,"float32",I),E=o.makeTensorInfo(S,"float32",N),F=Qt({inputs:{real:T,imag:E},backend:o}),z=ph(g,f,a,n,o),j=z.real,B=z.imag,M=[j.length],V=o.makeTensorInfo(M,"float32",j),H=o.makeTensorInfo(M,"float32",B),G=Qt({inputs:{real:V,imag:H},backend:o}),q=F1(t,n),Y=[q.real.length],Z=o.makeTensorInfo(Y,"float32",q.real),Q=o.makeTensorInfo(Y,"float32",q.imag),J=Qt({inputs:{real:Z,imag:Q},backend:o}),oe=_p({inputs:{a:J,b:G},backend:o}),ee=Nr({inputs:{a:F,b:oe},backend:o}),ae=hf({inputs:{a:F,b:oe},backend:o}),he=zo({inputs:{input:ee},backend:o}),ge=zo({inputs:{input:ae},backend:o}),fe=Sr({inputs:{input:ee},backend:o}),ve=Sr({inputs:{input:ae},backend:o}),$e=Tr({inputs:[he,ge],backend:o,attrs:{axis:0}}),Re=Tr({inputs:[fe,ve],backend:o,attrs:{axis:0}}),Be=o.data.get($e.dataId).values,tt=o.data.get(Re.dataId).values;return o.disposeIntermediateTensorInfo(u),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(E),o.disposeIntermediateTensorInfo(F),o.disposeIntermediateTensorInfo(V),o.disposeIntermediateTensorInfo(H),o.disposeIntermediateTensorInfo(G),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(Q),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(he),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(ve),o.disposeIntermediateTensorInfo($e),o.disposeIntermediateTensorInfo(Re),{real:Be,imag:tt}}function UF(s,e,t){const n=new Float32Array(e*2);for(let o=0;o<e;o++){let r=0,a=0;for(let i=0;i<e;i++){const l=P1(o*i,e,t),c=Em(s,i);r+=c.real*l.real-c.imag*l.imag,a+=c.real*l.imag+c.imag*l.real}t&&(r/=e,a/=e),O1(n,r,a,o)}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(s){const{inputs:e,backend:t}=s,{input:n}=e,o=W(n.shape),r=n.shape[n.shape.length-1],a=o/r,i=We({inputs:{x:n},backend:t,attrs:{shape:[a,r]}}),l=b2(i,!1,t),c=We({inputs:{x:l},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),c}const HF={kernelName:zh,backendName:"cpu",kernelFunc:GF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ff(s){const{backend:e,attrs:t}=s,{shape:n,value:o,dtype:r}=t,a=r||Dr(o),i=ot(a,W(n));return KF(i,o,a),e.makeTensorInfo(n,a,i)}const qF={kernelName:jh,backendName:"cpu",kernelFunc:ff};function KF(s,e,t){s.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XF={kernelName:Bh,backendName:"cpu",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{image:n}=s,o=t,r=St(n.dtype,W(n.shape)),[a,i,l,c]=n.shape,p=o.data.get(n.dataId).values;for(let h=0;h<a;h++){const d=h*l*i*c;for(let m=0;m<i;m++){const g=m*(l*c);for(let f=0;f<l;f++){const x=f*c;for(let y=0;y<c;y++){const w=Math.round(l-f-1),b=d+g+x+y;let k=p[b];if(w>=0&&w<l){const I=w*c,N=d+g+I+y;k=p[N]}r[b]=k}}}}return{dataId:o.write(r,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:l,pad:c,dataFormat:p,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:m}=n;let g=x2({inputs:{x:o,filter:r},backend:t,attrs:{strides:l,pad:c,dataFormat:p,dilations:u,dimRoundingMode:h}});if(a){const f=g;if(p==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const x=We({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});g=Nr({inputs:{a:g,b:x},backend:t}),t.disposeIntermediateTensorInfo(x)}else g=Nr({inputs:{a:g,b:a},backend:t});t.disposeIntermediateTensorInfo(f)}if(d){const f=g;if(p==="NCHW"&&d==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const x=We({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});g=Pl(t,g,d,x,m),t.disposeIntermediateTensorInfo(x)}else g=Pl(t,g,d,i,m);t.disposeIntermediateTensorInfo(f)}return g}const ZF={kernelName:ml,backendName:"cpu",kernelFunc:YF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:l,pad:c,dataFormat:p,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:m}=n;let g=y2({inputs:{x:o,filter:r},backend:t,attrs:{strides:l,pad:c,dataFormat:p,dilations:u,dimRoundingMode:h}});if(a){const f=g;g=Nr({inputs:{a:g,b:a},backend:t}),t.disposeIntermediateTensorInfo(f)}if(d){const f=g;g=Pl(t,g,d,i,m),t.disposeIntermediateTensorInfo(f)}return g}const QF={kernelName:fl,backendName:"cpu",kernelFunc:JF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e7(s){const{inputs:e,backend:t}=s,{params:n,indices:o}=e,r=W(n.shape),a=o.shape,i=a[a.length-1],[l,c,p,u]=hm(n,o);if(c===0)return t.makeTensorInfo(l,n.dtype,[]);const h=t.data.get(o.dataId).values,d=t.bufferSync(n),m=Ew(h,d,n.dtype,c,i,p,u,n.shape,r);return t.makeTensorInfo(l,n.dtype,m.values)}const t7={kernelName:Mh,backendName:"cpu",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s7(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,indices:r}=e,{axis:a,batchDims:i}=n;ce([o,r],"gatherV2");const l=Ie(a,o.shape)[0],c=t.data.get(r.dataId).values,p=o.shape[l];for(let b=0;b<c.length;++b){const k=c[b];$(k<=p-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${p-1}]`)}let u=i;i==null&&(u=0);const h=W(r.shape),d=Pm(o,r,l,u),m=We({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),g=We({inputs:{x:r},backend:t,attrs:{shape:[d.batchSize,h/d.batchSize]}}),f=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],x=t.bufferSync(g),y=t.bufferSync(m),w=Aw(y,x,f);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.makeTensorInfo(d.outputShape,w.dtype,w.values)}const n7={kernelName:pc,backendName:"cpu",kernelFunc:s7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o7(s){const{inputs:e,backend:t}=s,{input:n}=e,o=W(n.shape),r=n.shape[n.shape.length-1],a=o/r,i=We({inputs:{x:n},backend:t,attrs:{shape:[a,r]}}),l=b2(i,!0,t),c=We({inputs:{x:l},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(l),c}const r7={kernelName:Vh,backendName:"cpu",kernelFunc:o7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a7=Oe(Ga,s=>Number.isFinite(s)?1:0,"bool"),i7={kernelName:Ga,backendName:"cpu",kernelFunc:a7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7=Oe(Ha,s=>Math.abs(s)===1/0?1:0,"bool"),c7={kernelName:Ha,backendName:"cpu",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p7=Oe(qa,s=>Number.isNaN(s)?1:0,"bool"),u7={kernelName:qa,backendName:"cpu",kernelFunc:p7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(s){const{backend:e,attrs:t}=s,{start:n,stop:o,num:r}=t,a=Fw(n,o,r);return e.makeTensorInfo([a.length],"float32",a)}const d7={kernelName:Uh,backendName:"cpu",kernelFunc:h7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m7=Oe(Xa,s=>Math.log1p(s)),f7={kernelName:Xa,backendName:"cpu",kernelFunc:m7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7=lt((s,e)=>s&&e),x7=yt(fc,g7,null,"bool"),y7={kernelName:fc,backendName:"cpu",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b7=Oe(gc,s=>s?0:1,"bool"),w7={kernelName:gc,backendName:"cpu",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7=lt((s,e)=>s||e),k7=yt(xc,v7,null,"bool"),$7={kernelName:xc,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{depthRadius:r,bias:a,alpha:i,beta:l}=n;ce(o,"LRN");const c=o.shape[3],p=c-1,u=t.data.get(o.dataId).values,h=W(o.shape),d=new Float32Array(h);function m(g){const f=g%c;let x=g-f+Math.max(0,f-r);const y=g-f+Math.min(f+r,p);let w=0;for(;x<=y;x++){const b=u[x];w+=b*b}return w}for(let g=0;g<h;g++){const f=m(g),x=u[g]*Math.pow(a+i*f,-l);d[g]=x}return t.makeTensorInfo(o.shape,o.dtype,d)}const C7={kernelName:yc,backendName:"cpu",kernelFunc:I7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,y:r,dy:a}=e,{depthRadius:i,bias:l,alpha:c,beta:p}=n;ce(a,"LRNGrad");const u=W(a.shape),h=a.shape[3],d=t.data.get(a.dataId).values,m=t.data.get(o.dataId).values,g=t.data.get(r.dataId).values,f=new Float32Array(u),x=u;for(let y=0;y<x;y++){const w=y%h,b=y-w+Math.max(0,w-i),k=y-w+Math.min(h,w+i+1);let I=0;for(let N=b;N<k;N++)I+=Math.pow(m[N],2);I=c*I+l;for(let N=b;N<k;N++){let S=-2*c*p*m[N]*g[y]/I;y===N&&(S+=Math.pow(I,-p)),S*=d[y],f[N]+=S}}return t.makeTensorInfo(a.shape,o.dtype,f)}const S7={kernelName:Gh,backendName:"cpu",kernelFunc:N7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w2(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{reductionIndices:r,keepDims:a}=n,i=t;let l=o.shape;const c=l.length,p=Ie(r,l);let u=p;const h=et(u,c);let d=i.data.get(o.dataId).values;if(h!=null){const b=new Array(c);for(let k=0;k<b.length;k++)b[k]=l[h[k]];d=pf(d,l,o.dtype,h,b),u=at(u.length,c),l=b}ce(o,"max"),Et("max",u,c);const[m,g]=$t(l,u),f=W(g),x=Lw(d,f,m,o.dtype),y=i.write(x,m,o.dtype);let w=m;return a&&(w=rt(m,p)),{dataId:y,shape:w,dtype:o.dtype}}const T7={kernelName:bc,backendName:"cpu",kernelFunc:w2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E7(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e;ce(o,"maxPool");const{filterSize:r,strides:a,pad:i,dimRoundingMode:l}=n,c=1;$(Tt(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const p=Ps(o.shape,r,a,c,i,l);let u;if(p.filterWidth===1&&p.filterHeight===1&&Se(p.inShape,p.outShape))u=dn({inputs:{x:o},backend:t});else{const h=t.data.get(o.dataId).values,d=de(o.shape),m=df(h,o.shape,o.dtype,d,p,"max");u=t.makeTensorInfo(p.outShape,o.dtype,m.values)}return u}const A7={kernelName:wc,backendName:"cpu",kernelFunc:E7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=n;ce(o,"maxPool3d");const p=Sn(o.shape,r,a,1,i,l,c),u=t.data.get(o.dataId).values,h=g2(u,o.shape,o.dtype,de(o.shape),p,"max");return t.makeTensorInfo(h.shape,"float32",h.values)}const D7={kernelName:vc,backendName:"cpu",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,input:r}=e,{filterSize:a,strides:i,pad:l,dimRoundingMode:c}=n;ce([o,r],"maxPool3DGrad");const p=Sn(r.shape,a,i,1,l,c),u=t.bufferSync(r),h=vO(u,p),d=p.strideDepth,m=p.strideHeight,g=p.strideWidth,f=p.dilationDepth,x=p.dilationHeight,y=p.dilationWidth,w=p.effectiveFilterDepth,b=p.effectiveFilterHeight,k=p.effectiveFilterWidth,I=w-1-p.padInfo.front,N=k-1-p.padInfo.left,S=b-1-p.padInfo.top,T=ke(r.shape,"float32"),E=t.bufferSync(o);for(let F=0;F<p.batchSize;++F)for(let z=0;z<p.inChannels;++z)for(let j=0;j<p.inDepth;++j)for(let B=0;B<p.inHeight;++B)for(let M=0;M<p.inWidth;++M){const V=j-I,H=B-S,G=M-N;let q=0;for(let Y=0;Y<w;Y+=f){const Z=(V+Y)/d;if(!(Z<0||Z>=p.outDepth||Math.floor(Z)!==Z))for(let Q=0;Q<b;Q+=x){const J=(H+Q)/m;if(!(J<0||J>=p.outHeight||Math.floor(J)!==J))for(let oe=0;oe<k;oe+=y){const ee=(G+oe)/g;if(ee<0||ee>=p.outWidth||Math.floor(ee)!==ee)continue;const ae=w*b*k-1-h.get(F,Z,J,ee,z),he=Y*b*k+Q*k+oe,ge=ae===he?1:0;if(ge===0)continue;const fe=E.get(F,Z,J,ee,z);q+=fe*ge}}}T.set(q,F,j,B,M,z)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const O7={kernelName:qh,backendName:"cpu",kernelFunc:R7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,input:r,output:a}=e,i=r;ce([r,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:p,dimRoundingMode:u}=n,h=Ps(i.shape,l,c,1,p,u),d=t.data.get(i.dataId).values,m=ke(h.outShape,i.dtype,f2(d,i.shape,i.dtype,h).values),g=h.strideHeight,f=h.strideWidth,x=h.dilationHeight,y=h.dilationWidth,w=h.effectiveFilterHeight,b=h.effectiveFilterWidth,k=b-1-h.padInfo.left,I=w-1-h.padInfo.top,N=ke(i.shape,"float32"),S=t.data.get(o.dataId).values,T=ke(o.shape,"float32",S);for(let E=0;E<h.batchSize;++E)for(let F=0;F<h.inChannels;++F)for(let z=0;z<h.inHeight;++z)for(let j=0;j<h.inWidth;++j){const B=z-I,M=j-k;let V=0;for(let H=0;H<w;H+=x){const G=(B+H)/g;if(!(G<0||G>=h.outHeight||Math.floor(G)!==G))for(let q=0;q<b;q+=y){const Y=(M+q)/f;if(Y<0||Y>=h.outWidth||Math.floor(Y)!==Y)continue;const Z=w*b-1-m.get(E,G,Y,F),Q=H*b+q,J=Z===Q?1:0;if(J===0)continue;const oe=T.get(E,G,Y,F);V+=oe*J}}N.set(V,E,z,j,F)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const P7={kernelName:Hh,backendName:"cpu",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(s,e,t,n,o){const r=de(e),a=df(s,e,t,r,o,"max"),i=f2(s,e,t,o,!0,n);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z7={kernelName:Kh,backendName:"cpu",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{x:n}=s,{filterSize:o,strides:r,pad:a,includeBatchInIndex:i}=e,l=t;ce(n,"MaxPoolWithArgmax");const c=l.data.get(n.dataId).values,p=Ps(n.shape,o,r,[1,1],a),[u,h]=L7(c,n.shape,n.dtype,i,p),d=l.write(u,p.outShape,n.dtype),m=l.write(h,p.outShape,n.dtype);return[{dataId:d,shape:p.outShape,dtype:n.dtype},{dataId:m,shape:p.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n,i=Ie(r,o.shape),c=$t(o.shape,i)[1],p=W(c),u=[],h=t.makeTensorInfo([],"float32",new Float32Array([p]));u.push(h);const d=eo({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});u.push(d);const m=mf({inputs:{a:d,b:h},backend:t});u.push(m);const g=zi({inputs:{x:m},backend:t,attrs:{axis:r,keepDims:a}});return u.forEach(f=>t.disposeIntermediateTensorInfo(f)),g}const B7={kernelName:kc,backendName:"cpu",kernelFunc:j7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n;ce(o,"min");const i=Ie(r,o.shape);let l=i;const c=et(l,o.shape.length);let p=o;c!=null&&(p=Kt({inputs:{x:o},backend:t,attrs:{perm:c}}),l=at(l.length,o.shape.length)),Et("min",l,p.shape.length);const[u,h]=$t(p.shape,l),d=W(h),m=Rt(W(u),p.dtype),g=t.data.get(p.dataId).values;for(let x=0;x<m.length;++x){const y=x*d;let w=g[y];for(let b=0;b<d;++b){const k=g[y+b];(Number.isNaN(k)||k<w)&&(w=k)}m[x]=w}c!=null&&t.disposeIntermediateTensorInfo(p);const f=t.makeTensorInfo(u,p.dtype,m);if(a){const x=rt(u,i),y=We({inputs:{x:f},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(f),y}return f}const V7={kernelName:$c,backendName:"cpu",kernelFunc:M7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{paddings:r,mode:a}=n;ce(o,"mirrorPad");const i=r.map((w,b)=>w[0]+o.shape[b]+w[1]),l=r.map(w=>w[0]),c=r.map((w,b)=>w[0]+o.shape[b]),p=a==="reflect"?0:1,u=t.data.get(o.dataId).values,h=o.shape.length,d=de(o.shape),m=W(i),g=i.length,f=de(i),x=St(o.dtype,m);for(let w=0;w<m;w++){let b=Rr(w,g,f);for(let I=0;I<g;I++)b[I]<l[I]?b[I]=l[I]*2-b[I]-p:b[I]>=c[I]&&(b[I]=(c[I]-1)*2-b[I]+p);b=b.map((I,N)=>I-l[N]);const k=rn(b,h,d);x[w]=u[k]}return{dataId:t.write(x,i,o.dtype),shape:i,dtype:o.dtype}}const U7={kernelName:Ic,backendName:"cpu",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G7=lt((s,e)=>{const t=s%e;return s<0&&e<0||s>=0&&e>=0?t:(t+e)%e}),H7=yt(Ja,G7),q7={kernelName:Ja,backendName:"cpu",kernelFunc:H7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(s){const{inputs:e,backend:t,attrs:n}=s,{logits:o}=e,{dim:r}=n,a=o.shape.length;let i=r;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const l=Ie([i],o.shape),c=w2({inputs:{x:o},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),p=rt(c.shape,l),u=We({inputs:{x:c},backend:t,attrs:{shape:p}}),h=hf({inputs:{a:o,b:u},backend:t}),d=Cw({inputs:{x:h},backend:t}),m=zi({inputs:{x:d},backend:t,attrs:{axis:l,keepDims:!1}}),g=We({inputs:{x:m},backend:t,attrs:{shape:p}}),f=mf({inputs:{a:d,b:g},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),f}const K7={kernelName:Vc,backendName:"cpu",kernelFunc:v2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(s){const{inputs:e,backend:t,attrs:n}=s,{logits:o}=e,{numSamples:r,seed:a,normalized:i}=n;ce(o,"multinomial");const l=i?o:v2({inputs:{logits:o},backend:t,attrs:{dim:-1}}),c=l.shape[0],p=l.shape[1],u=t.data.get(l.dataId).values,h=[c,r],d=Rt(W(h),"int32");for(let m=0;m<c;++m){const g=m*p,f=new Float32Array(p-1);f[0]=u[g];for(let w=1;w<f.length;++w)f[w]=f[w-1]+u[g+w];const x=ap.alea(a.toString()),y=m*r;for(let w=0;w<r;++w){const b=x();d[y+w]=f.length;for(let k=0;k<f.length;k++)if(b<f[k]){d[y+w]=k;break}}}return i||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(h,"int32",d)}const Y7={kernelName:Xh,backendName:"cpu",kernelFunc:X7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z7=rm;function J7(s){const{inputs:e,backend:t,attrs:n}=s,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=n;ce(o,"NonMaxSuppression");const c=t.data.get(o.dataId).values,p=t.data.get(r.dataId).values,{selectedIndices:u}=Z7(c,p,a,i,l);return t.makeTensorInfo([u.length],"int32",new Int32Array(u))}const Q7={kernelName:Yh,backendName:"cpu",kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e5=am;function t5(s){const{inputs:e,backend:t,attrs:n}=s,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=n;ce(o,"NonMaxSuppressionPadded");const p=t.data.get(o.dataId).values,u=t.data.get(r.dataId).values,{selectedIndices:h,validOutputs:d}=e5(p,u,a,i,l,c);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}const s5={kernelName:Zh,backendName:"cpu",kernelFunc:t5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5=im;function o5(s){const{inputs:e,backend:t,attrs:n}=s,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=n;ce(o,"NonMaxSuppressionWithScore");const p=t.data.get(o.dataId).values,u=t.data.get(r.dataId).values,h=a,d=i,m=l,g=c,{selectedIndices:f,selectedScores:x}=n5(p,u,h,d,m,g);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const r5={kernelName:Jh,backendName:"cpu",kernelFunc:o5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(s){const{inputs:e,backend:t,attrs:n}=s,{indices:o}=e,{dtype:r,depth:a,onValue:i,offValue:l}=n;ce(o,"oneHot");const c=W(o.shape),p=new Float32Array(c*a);p.fill(l);const u=t.data.get(o.dataId).values;for(let h=0;h<c;++h)u[h]>=0&&u[h]<a&&(p[h*a+u[h]]=i);return t.makeTensorInfo([...o.shape,a],r,p)}const i5={kernelName:Tc,backendName:"cpu",kernelFunc:a5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zl(s){const{inputs:e,backend:t}=s,{x:n}=e;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){const o=zo({inputs:{input:n},backend:t}),r=zl({inputs:{x:o},backend:t}),a=Sr({inputs:{input:n},backend:t}),i=zl({inputs:{x:a},backend:t}),l=Qt({inputs:{real:r,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return ff({backend:t,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}const l5={kernelName:Hc,backendName:"cpu",kernelFunc:zl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k2(s){const{inputs:e,backend:t}=s,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){const o=zo({inputs:{input:n},backend:t}),r=k2({inputs:{x:o},backend:t}),a=Sr({inputs:{input:n},backend:t}),i=zl({inputs:{x:a},backend:t}),l=Qt({inputs:{real:r,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return ff({backend:t,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}const c5={kernelName:Sc,backendName:"cpu",kernelFunc:k2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(s){const{inputs:e,backend:t,attrs:n}=s,{axis:o}=n;if(e.length===1)return Ll({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const r=e[0].shape,a=e[0].dtype;e.forEach(p=>{cs(r,p.shape,"All tensors passed to stack must have matching shapes"),$(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],l=e.map(p=>{const u=Ll({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(u),u}),c=Tr({inputs:l,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}const p5={kernelName:Ec,backendName:"cpu",kernelFunc:$2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{paddings:r,constantValue:a}=n;ce(o,"pad");const i=r.map((y,w)=>y[0]+o.shape[w]+y[1]),l=r.map(y=>y[0]),c=t.data.get(o.dataId).values,p=W(o.shape),u=o.shape.length,h=de(o.shape),d=W(i),m=i.length,g=de(i),f=St(o.dtype,d);a!==0&&f.fill(a);for(let y=0;y<p;y++){const b=Rr(y,u,h).map((I,N)=>I+l[N]),k=rn(b,m,g);f[k]=c[y]}return{dataId:t.write(f,i,o.dtype),shape:i,dtype:o.dtype}}const I2={kernelName:Ac,backendName:"cpu",kernelFunc:u5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5=lt((s,e)=>Math.pow(s,e)),d5=yt(ei,h5),m5={kernelName:ei,backendName:"cpu",kernelFunc:d5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5(s){const{inputs:e,backend:t,attrs:n}=s,{paramsNestedSplits:o,paramsDenseValues:r,indices:a}=e,i=o.map(f=>t.data.get(f.dataId).values),l=o.map(f=>f.shape),c=t.data.get(r.dataId).values,p=t.data.get(a.dataId).values,[u,h,d]=Ww(i,l,c,r.shape,r.dtype,p,a.shape),m=u.map(f=>t.makeTensorInfo([f.length],"int32",f)),g=t.makeTensorInfo(d,r.dtype,h);return m.concat([g])}const g5={kernelName:Qh,backendName:"cpu",kernelFunc:f5};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x5(s){const{inputs:e,backend:t}=s,{starts:n,limits:o,deltas:r}=e,a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,[c,p]=Uw(a,n.shape,n.dtype,i,o.shape,l,r.shape),u=t.makeTensorInfo([c.length],"int32",c),h=t.makeTensorInfo([p.length],n.dtype,p);return[u,h]}const y5={kernelName:ed,backendName:"cpu",kernelFunc:x5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b5(s){const{inputs:e,backend:t,attrs:n}=s,{shape:o,values:r,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:l}=n,c=t.data.get(o.dataId).values,p=t.data.get(r.dataId).values,u=t.data.get(a.dataId).values,h=i.map(f=>t.data.get(f.dataId).values),d=i.map(f=>f.shape),[m,g]=Gw(c,o.shape,p,r.shape,r.dtype,u,a.shape,h,d,l);return t.makeTensorInfo(m,r.dtype,g)}const w5={kernelName:td,backendName:"cpu",kernelFunc:b5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v5(s){const{backend:e,attrs:t}=s,{start:n,stop:o,dtype:r,step:a}=t,i=Hw(n,o,a,r);return e.makeTensorInfo([i.length],r,i)}const k5={kernelName:sd,backendName:"cpu",kernelFunc:v5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5=Oe(ti,s=>1/s),I5={kernelName:ti,backendName:"cpu",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C5(s){const{inputs:e,backend:t,attrs:n}=s,{images:o}=e,{alignCorners:r,halfPixelCenters:a,size:i}=n;ce(o,"resizeBilinear");const l=de(o.shape),[c,p]=i,[u,h,d,m]=o.shape,g=t.data.get(o.dataId).values,f=new Float32Array(W([u,c,p,m])),x=[r&&c>1?h-1:h,r&&p>1?d-1:d],y=[r&&c>1?c-1:c,r&&p>1?p-1:p];let w=0;const b=x[0]/y[0],k=x[1]/y[1];for(let I=0;I<u;I++)for(let N=0;N<c;N++){let S;a?S=b*(N+.5)-.5:S=b*N;const T=Math.max(0,Math.floor(S)),E=S-T,F=Math.min(h-1,Math.ceil(S)),z=I*l[0]+T*l[1],j=I*l[0]+F*l[1];for(let B=0;B<p;B++){let M;a?M=k*(B+.5)-.5:M=k*B;const V=Math.max(0,Math.floor(M)),H=M-V,G=Math.min(d-1,Math.ceil(M)),q=z+V*l[2],Y=j+V*l[2],Z=z+G*l[2],Q=j+G*l[2];for(let J=0;J<m;J++){const oe=g[q+J],ee=g[Y+J],ae=g[Z+J],he=g[Q+J],ge=oe+(ae-oe)*H,fe=ee+(he-ee)*H,ve=ge+(fe-ge)*E;f[w++]=ve}}}return t.makeTensorInfo([u,c,p,m],"float32",f)}const N5={kernelName:Fc,backendName:"cpu",kernelFunc:C5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S5(s){const{inputs:e,backend:t,attrs:n}=s,{images:o,dy:r}=e,{alignCorners:a}=n;ce([r,o],"resizeBilinearGrad");const i=de(o.shape),[l,c,p,u]=o.shape,[,h,d]=r.shape,m=new Float32Array(l*c*p*u),g=[a&&h>1?c-1:c,a&&d>1?p-1:p],f=[a&&h>1?h-1:h,a&&d>1?d-1:d],x=g[0]/f[0],y=g[1]/f[1],w=t.data.get(r.dataId).values;let b=0;for(let k=0;k<l;k++){const I=k*i[0];for(let N=0;N<h;N++){const S=N*x,T=Math.floor(S),E=Math.min(Math.ceil(S),c-1),F=I+T*i[1],z=I+E*i[1],j=S-T,B=1-j;for(let M=0;M<d;M++){const V=M*y,H=Math.floor(V),G=Math.min(Math.ceil(V),p-1),q=V-H,Y=1-q,Z=F+H*i[2],Q=F+G*i[2],J=z+H*i[2],oe=z+G*i[2],ee=B*Y,ae=B*q,he=j*Y,ge=j*q;for(let fe=0;fe<u;fe++){const ve=w[b++];m[Z+fe]+=ve*ee,m[Q+fe]+=ve*ae,m[J+fe]+=ve*he,m[oe+fe]+=ve*ge}}}}return t.makeTensorInfo([l,p,c,u],"float32",m)}const T5={kernelName:rd,backendName:"cpu",kernelFunc:S5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E5(s){const{inputs:e,backend:t,attrs:n}=s,{images:o}=e,{alignCorners:r,halfPixelCenters:a,size:i}=n;ce(o,"resizeNearestNeighbor");const l=de(o.shape),[c,p]=i,[u,h,d,m]=o.shape,g=t.data.get(o.dataId).values,f=new Float32Array(u*c*p*m),x=[r&&c>1?h-1:h,r&&p>1?d-1:d],y=[r&&c>1?c-1:c,r&&p>1?p-1:p],w=x[0]/y[0],b=x[1]/y[1];let k=0;for(let I=0;I<u;I++){const N=I*l[0];for(let S=0;S<c;S++){const T=a?w*(S+.5):w*S;let E=Math.min(h-1,r?Math.round(T):Math.floor(T));a&&(E=Math.max(0,E));const F=N+E*l[1];for(let z=0;z<p;z++){const j=a?b*(z+.5):b*z;let B=Math.min(d-1,r?Math.round(j):Math.floor(j));a&&(B=Math.max(0,B));const M=F+B*l[2];for(let V=0;V<m;V++){const H=g[M+V];f[k++]=H}}}}return t.makeTensorInfo([u,c,p,m],o.dtype,f)}const A5={kernelName:Oc,backendName:"cpu",kernelFunc:E5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _5(s){const{inputs:e,backend:t,attrs:n}=s,{images:o,dy:r}=e,{alignCorners:a}=n;ce([r,o],"resizeNearestNeighborGrad");const i=de(o.shape),l=de(r.shape),[c,p,u,h]=o.shape,[,d,m]=r.shape,g=new Float32Array(c*p*u*h),f=t.data.get(r.dataId).values,x=[a&&d>1?p-1:p,a&&m>1?u-1:u],y=[a&&d>1?d-1:d,a&&m>1?m-1:m],w=x[0]/y[0],b=x[1]/y[1],k=1/w,I=1/b,N=Math.ceil(k)*2+2,S=Math.ceil(I)*2+2;for(let T=0;T<c;T++){const E=T*i[0];for(let F=0;F<p;F++){const z=E+F*i[1],j=Math.floor(F*k),B=Math.floor(j-N/2);for(let M=0;M<u;M++){const V=z+M*i[2],H=Math.floor(M*I),G=Math.floor(H-S/2);for(let q=0;q<h;q++){let Y=0;for(let Z=0;Z<N;Z++){const Q=Z+B;if(Q<0||Q>=d)continue;const J=E+Q*l[1],oe=Q*w,ee=Math.min(p-1,a?Math.round(oe):Math.floor(oe));if(F===ee)for(let ae=0;ae<S;ae++){const he=ae+G;if(he<0||he>=m)continue;const ge=J+he*l[2],fe=he*b,ve=Math.min(u-1,a?Math.round(fe):Math.floor(fe));M===ve&&(Y+=f[ge+q])}}g[V+q]=Y}}}}return t.makeTensorInfo(o.shape,o.dtype,g)}const D5={kernelName:od,backendName:"cpu",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{dims:r}=n;ce(o,"reverse");const a=o.shape.length,i=Ie(r,o.shape);if(a===0)return dn({inputs:{x:o},backend:t});const l=new mt(o.shape,o.dtype),c=t.bufferSync(o);for(let p=0;p<l.size;p++){const u=l.indexToLoc(p),h=u.slice();i.forEach(d=>h[d]=o.shape[d]-1-h[d]),l.set(c.get(...h),...u)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const O5={kernelName:Pc,backendName:"cpu",kernelFunc:R5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F5={kernelName:kd,backendName:"cpu",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{image:n}=s,{radians:o,fillValue:r,center:a}=e,i=t,l=St(n.dtype,W(n.shape)),[c,p,u,h]=n.shape,[d,m]=wm(a,p,u),g=255,f=Math.sin(o),x=Math.cos(o),y=i.data.get(n.dataId).values;for(let b=0;b<c;b++){const k=b*u*p*h;for(let I=0;I<p;I++){const N=I*(u*h);for(let S=0;S<u;S++){const T=S*h;for(let E=0;E<h;E++){const F=[c,I,S,E],z=F[2],j=F[1];let B=(z-d)*x-(j-m)*f,M=(z-d)*f+(j-m)*x;B=Math.round(B+d),M=Math.round(M+m);let V=r;if(typeof r!="number"&&(E===3?V=g:V=r[E]),B>=0&&B<u&&M>=0&&M<p){const G=M*(u*h),q=B*h,Y=k+G+q+E;V=y[Y]}const H=k+N+T+E;l[H]=V}}}}return{dataId:i.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5=Oe(oi,s=>{const e=Math.floor(s);return s-e<.5?Math.floor(s):s-e>.5?Math.ceil(s):e%2===0?e:e+1}),L5={kernelName:oi,backendName:"cpu",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z5(s){const{inputs:e,backend:t,attrs:n}=s,{indices:o,updates:r}=e,{shape:a}=n,{sliceRank:i,numUpdates:l,sliceSize:c,strides:p,outputSize:u}=Ko(r,o,a),h=!0,d=t.bufferSync(o),m=t.bufferSync(r),g=Co(d,m,a,u,c,l,i,p,0,h);return t.makeTensorInfo(a,g.dtype,g.values)}const j5={kernelName:ad,backendName:"cpu",kernelFunc:z5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B5(s,e){let t=0,n=s.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),s[o]<e?t=o+1:n=o;return n}function M5(s,e){let t=0,n=s.length,o=0;for(;t<n;)o=Math.floor((t+n)/2),s[o]<=e?t=o+1:n=o;return n}function V5(s,e,t,n,o,r){const a=ot("int32",t*o);for(let i=0;i<t;++i){const l=s.slice(i*n,(i+1)*n),c=i*o;for(let p=0;p<o;++p)a[c+p]=r==="left"?B5(l,e[p+c]):M5(l,e[p+c])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W5(s){const{inputs:e,backend:t,attrs:n}=s,{sortedSequence:o,values:r}=e,{side:a}=n,i=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,c=V5(i,l,o.shape[0],o.shape[1],r.shape[1],a);return t.makeTensorInfo(r.shape,"int32",c)}const U5={kernelName:ld,backendName:"cpu",kernelFunc:W5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G5(s){const{inputs:e,backend:t}=s,{condition:n,t:o,e:r}=e;ce([n,o,r],"select");const a=n.shape.length,i=t.data.get(n.dataId).values,l=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,p=ns(o.dtype,r.dtype),u=Rt(W(o.shape),p);let h=0;const d=a===0||a>1||o.shape.length===1?1:W(o.shape.slice(1));for(let m=0;m<i.length;m++)for(let g=0;g<d;g++)i[m]===1?u[h++]=l[m]:u[h++]=c[m];return t.makeTensorInfo(o.shape,p,u)}const H5={kernelName:Lc,backendName:"cpu",kernelFunc:G5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q5=yp,K5=bp,X5=Oe(ai,s=>s>=0?K5*s:q5*(Math.exp(s)-1)),Y5={kernelName:ai,backendName:"cpu",kernelFunc:X5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z5=Oe(ci,s=>s<0?-1:s>0?1:0),J5={kernelName:ci,backendName:"cpu",kernelFunc:Z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q5=Oe(ii,s=>Math.sin(s)),e8={kernelName:ii,backendName:"cpu",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t8=Oe(li,s=>Math.sinh(s)),s8={kernelName:li,backendName:"cpu",kernelFunc:t8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n8=11920928955078125e-23,Pg=Math.log(n8)+2,o8=Oe(ui,s=>{const e=s>-Pg,t=s<Pg,n=Math.exp(s);let o;return t?o=n:e?o=s:o=Math.log(1+n),o}),r8={kernelName:ui,backendName:"cpu",kernelFunc:o8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{blockShape:r,paddings:a}=n;ce([o],"spaceToBatchND");const i=W(r),l=[[0,0]];l.push(...a);for(let I=1+r.length;I<o.shape.length;++I)l.push([0,0]);const c=I2.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),p=Si(c.shape,r,i,!1),u=Ti(p.length,r.length,!1),h=Ei(c.shape,r,i,!1),g=We({inputs:{x:c},backend:t,attrs:{shape:p}}),y=Kt({inputs:{x:g},backend:t,attrs:{perm:u}}),k=We({inputs:{x:y},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),k}const i8={kernelName:Bc,backendName:"cpu",kernelFunc:a8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(s){const{inputs:e,backend:t}=s,{indices:n,values:o,denseShape:r,defaultValue:a}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.data.get(n.dataId).values,l=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,p=t.data.get(a.dataId).values[0],[u,h,d,m,g]=Yw(i,n.shape,n.dtype,l,o.dtype,c,p);return[t.makeTensorInfo(h,n.dtype,u),t.makeTensorInfo([h[0]],o.dtype,d),t.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(f=>Number(f)))),t.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const c8={kernelName:cd,backendName:"cpu",kernelFunc:l8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p8(s){const{inputs:e,backend:t}=s,{inputIndices:n,inputShape:o,newShape:r}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const a=Array.from(t.data.get(o.dataId).values),i=t.data.get(n.dataId).values,l=Array.from(t.data.get(r.dataId).values),[c,p,u]=Zw(i,n.shape,n.dtype,a,l);return[t.makeTensorInfo(p,n.dtype,c),t.makeTensorInfo([u.length],r.dtype,new Int32Array(u))]}const u8={kernelName:pd,backendName:"cpu",kernelFunc:p8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(s){const{inputs:e,backend:t}=s,{data:n,indices:o,segmentIds:r}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,[c,p]=uf(a,n.shape,n.dtype,i,l,!0);return t.makeTensorInfo(p,n.dtype,c)}const d8={kernelName:ud,backendName:"cpu",kernelFunc:h8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(s){const{inputs:e,backend:t}=s,{data:n,indices:o,segmentIds:r}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(n.dataId).values,i=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,[c,p]=uf(a,n.shape,n.dtype,i,l);return t.makeTensorInfo(p,n.dtype,c)}const f8={kernelName:hd,backendName:"cpu",kernelFunc:m8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g8(s){const{inputs:e,backend:t,attrs:n}=s,{sparseIndices:o,sparseValues:r,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:l,numUpdates:c,sliceSize:p,strides:u,outputSize:h}=Ko(r,o,i),d=!1,m=t.bufferSync(o);let g;switch(r.dtype){case"bool":{const f=t.bufferSync(r),x=!!t.data.get(a.dataId).values[0];g=Co(m,f,i,h,p,c,l,u,x,d);break}case"float32":{const f=t.bufferSync(r),x=t.data.get(a.dataId).values[0];g=Co(m,f,i,h,p,c,l,u,x,d);break}case"int32":{const f=t.bufferSync(r),x=t.data.get(a.dataId).values[0];g=Co(m,f,i,h,p,c,l,u,x,d);break}case"string":{const f=t.bufferSync(r),x=Gn(t.data.get(a.dataId).values[0]);g=Co(m,f,i,h,p,c,l,u,x,d);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return t.makeTensorInfo(i,g.dtype,g.values)}const x8={kernelName:dd,backendName:"cpu",kernelFunc:g8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{numOrSizeSplits:r,axis:a}=n,i=Ie(a,o.shape)[0],l=Fm(o,r,i),c=new Array(o.shape.length).fill(0),p=o.shape.slice();return l.map(u=>{const h=[...p];h[i]=u;const d=jo({inputs:{x:o},backend:t,attrs:{begin:c,size:h}});return c[i]+=u,d})}const b8={kernelName:Mc,backendName:"cpu",kernelFunc:y8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8={kernelName:md,backendName:"cpu",kernelFunc:({inputs:s,backend:e})=>{const{x:t}=s,n=e;ce(t,"square");const o=n.data.get(t.dataId).values,r=new Float32Array(o.length);for(let i=0;i<o.length;++i){const l=o[i];r[i]=l*l}return{dataId:n.write(r,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8=Oe(yi,(s,e)=>{const t=e;return isNaN(s)?NaN:s>0?1:t.alpha}),k8={kernelName:yi,backendName:"cpu",kernelFunc:v8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $8(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{begin:r,end:a,strides:i,beginMask:l,endMask:c,ellipsisMask:p,newAxisMask:u,shrinkAxisMask:h}=n;ce(o,"stridedSlice");const{finalShapeSparse:d,finalShape:m,isIdentity:g,sliceDim0:f,isSimpleSlice:x,begin:y,end:w,strides:b}=xm(o.shape,r,a,i,l,c,p,u,h);let k;if(g)k=We({inputs:{x:o},backend:t,attrs:{shape:m}});else if(f||x){$(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const I=mm(y,w,b),N=jo({inputs:{x:o},backend:t,attrs:{begin:y,size:I}});k=We({inputs:{x:N},backend:t,attrs:{shape:m}}),t.disposeIntermediateTensorInfo(N)}else{const I=t.bufferSync(o),N=e2(d,I,b,y);k=t.makeTensorInfo(m,N.dtype,N.values)}return k}const I8={kernelName:fd,backendName:"cpu",kernelFunc:$8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(s){const{inputs:e,backend:t,attrs:n}=s,{separator:o,nGramWidths:r,leftPad:a,rightPad:i,padWidth:l,preserveShortSequences:c}=n,{data:p,dataSplits:u}=e,h=t.data.get(p.dataId).values,d=t.data.get(u.dataId).values,[m,g]=t2(h,d,o,r,a,i,l,c);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(u.shape,"int32",g)]}const N8={kernelName:gd,backendName:"cpu",kernelFunc:C8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S8(s){const{inputs:e,backend:t,attrs:n}=s,{skipEmpty:o}=n,{input:r,delimiter:a}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.data.get(r.dataId).values,l=t.data.get(a.dataId).values[0],[c,p,u]=s2(i,l,o),h=p.length;return[t.makeTensorInfo([h,2],"int32",c),t.makeTensorInfo([h],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(u))]}const T8={kernelName:xd,backendName:"cpu",kernelFunc:S8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E8(s){const{inputs:e,backend:t,attrs:n}=s,{numBuckets:o}=n,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(r.dataId).values,i=n2(a,o);return t.makeTensorInfo(r.shape,"int32",i)}const A8={kernelName:yd,backendName:"cpu",kernelFunc:E8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8=Oe(fi,s=>Math.tan(s)),D8={kernelName:fi,backendName:"cpu",kernelFunc:_8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R8=Oe(gi,s=>Math.tanh(s)),O8={kernelName:gi,backendName:"cpu",kernelFunc:R8};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F8(s){const{inputs:e,backend:t}=s,{tensor:n,indices:o,updates:r}=e,{sliceRank:a,numUpdates:i,sliceSize:l,strides:c,outputSize:p}=Ko(r,o,n.shape),u=!1,h=t.bufferSync(o),d=t.bufferSync(r),m=t.bufferSync(n),g=Co(h,d,n.shape,p,l,i,a,c,m,u);return t.makeTensorInfo(n.shape,g.dtype,g.values)}const P8={kernelName:id,backendName:"cpu",kernelFunc:F8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L8(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{reps:r}=n;ce(o,"tile");const a=r2(t.bufferSync(o),r);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const z8={kernelName:xi,backendName:"cpu",kernelFunc:L8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j8(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{k:r,sorted:a}=n;ce(o,"topk");const i=t.data.get(o.dataId).values,[l,c]=i2(i,o.shape,o.dtype,r,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const B8={kernelName:bd,backendName:"cpu",kernelFunc:j8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M8(s){const{inputs:e,attrs:t,backend:n}=s,{image:o,transforms:r}=e,{interpolation:a,fillMode:i,fillValue:l,outputShape:c}=t,[p,u,h,d]=o.shape,[m,g]=c??[u,h],f=[p,m,g,d],x=de(o.shape),y=x[0],w=x[1],b=x[2],k=de(f),I=k[0],N=k[1],S=k[2],T=St(o.dtype,W(f));T.fill(l);const E=n.data.get(o.dataId).values,F=n.data.get(r.dataId).values;for(let j=0;j<p;++j){const B=r.shape[0]===1?F:F.subarray(j*8,j*8+8);for(let M=0;M<m;++M)for(let V=0;V<g;++V)for(let H=0;H<d;++H){let G;const q=B[6]*V+B[7]*M+1;if(q===0)continue;const Y=(B[0]*V+B[1]*M+B[2])/q,Z=(B[3]*V+B[4]*M+B[5])/q,Q=Lg(Y,h,i),J=Lg(Z,u,i);switch(a){case"nearest":G=q8(E,u,h,y,w,b,j,J,Q,H,l);break;case"bilinear":G=K8(E,u,h,y,w,b,j,J,Q,H,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const oe=j*I+M*N+V*S+H;T[oe]=G}return n.makeTensorInfo(f,o.dtype,T)}return{dataId:n.write(T,f,o.dtype),shape:o.shape,dtype:o.dtype}}const V8={kernelName:wd,backendName:"cpu",kernelFunc:M8};function Lg(s,e,t){switch(t){case"reflect":return W8(s,e);case"wrap":return U8(s,e);case"nearest":return H8(s,e);case"constant":default:return G8(s)}}function W8(s,e){let t=s;if(t<0)if(e<=1)t=0;else{const n=2*e;t<n&&(t=n*Math.trunc(-t/n)+t),t=t<-e?t+n:-t-1}else if(t>e-1)if(e<=1)t=0;else{const n=2*e;t-=n*Math.trunc(t/n),t>=e&&(t=n-t-1)}return To(0,t,e-1)}function U8(s,e){let t=s;if(t<0)if(e<=1)t=0;else{const n=e-1;t+=e*(Math.trunc(-t/n)+1)}else if(t>e-1)if(e<=1)t=0;else{const n=e-1;t-=e*Math.trunc(t/n)}return To(0,t,e-1)}function G8(s,e){return s}function H8(s,e){return To(0,s,e-1)}function oa(s,e,t,n,o,r,a,i,l,c,p){const u=a*n+i*o+l*r+c;return 0<=i&&i<e&&0<=l&&l<t?s[u]:p}function q8(s,e,t,n,o,r,a,i,l,c,p){const u=Math.round(i),h=Math.round(l);return oa(s,e,t,n,o,r,a,u,h,c,p)}function K8(s,e,t,n,o,r,a,i,l,c,p){const u=Math.floor(i),h=Math.floor(l),d=u+1,m=h+1,g=(m-l)*oa(s,e,t,n,o,r,a,u,h,c,p)+(l-h)*oa(s,e,t,n,o,r,a,u,m,c,p),f=(m-l)*oa(s,e,t,n,o,r,a,d,h,c,p)+(l-h)*oa(s,e,t,n,o,r,a,d,m,c,p);return(d-i)*g+(i-u)*f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(s){const{inputs:e,attrs:t,backend:n}=s,{axis:o}=t,{x:r}=e;ce(r,"unique");const a=n.data.get(r.dataId).values,{outputValues:i,outputShape:l,indices:c}=l2(a,o,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,i),n.makeTensorInfo([c.length],"int32",c)]}const Y8={kernelName:vd,backendName:"cpu",kernelFunc:X8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z8(s){const{inputs:e,backend:t,attrs:n}=s,{value:o}=e;let{axis:r}=n;r<0&&(r+=o.shape.length);const a=o.shape.length,i=o.shape[r],l=new Array(a-1);let c=0;for(let d=0;d<a;d++)d!==r&&(l[c++]=o.shape[d]);const p=new Array(a).fill(0),u=o.shape.slice();u[r]=1;const h=new Array(i);for(let d=0;d<h.length;d++){p[r]=d;const m=jo({inputs:{x:o},backend:t,attrs:{begin:p,size:u}});h[d]=We({inputs:{x:m},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(m)}return h}const J8={kernelName:Uc,backendName:"cpu",kernelFunc:Z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q8(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,segmentIds:r}=e,{numSegments:a}=n;ce(o,"unsortedSegmentSum");const i=o.shape.length,l=r.shape.length,c=[],p=[],u=i-l;let h=r;for(let m=0;m<u;++m){const g=Ll({inputs:{input:h},backend:t,attrs:{dim:m+1}});h=g,p.push(g)}for(let m=0;m<a;++m){const g=so(m,"int32"),f=t.makeTensorInfo([],"int32",g),x=$w({inputs:{a:f,b:h},backend:t}),y=eo({inputs:{x},backend:t,attrs:{dtype:"float32"}}),w=_p({inputs:{a:y,b:o},backend:t}),b=zi({inputs:{x:w},backend:t,attrs:{axis:0,keepDims:!1}});c.push(b),p.push(f),p.push(x),p.push(y),p.push(w),p.push(b)}const d=$2({inputs:c,backend:t,attrs:{axis:0}});return p.forEach(m=>t.disposeIntermediateTensorInfo(m)),d}const e9={kernelName:Gc,backendName:"cpu",kernelFunc:Q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t9=[XR,ED,ZR,QR,FD,tO,nO,rO,iO,cO,uO,dO,fO,yO,wO,$O,CO,SO,EO,qR,_O,RO,FO,LD,LO,RD,jD,jO,AD,MO,WO,UO,HO,KO,YO,JO,eF,sF,oF,aF,lF,pF,hF,mF,fF,xF,bF,vF,kF,$F,IF,NF,EF,BR,_F,BD,jF,MD,BF,WD,HF,qF,XF,GD,qD,ZF,QF,t7,n7,XD,ZD,_D,r7,VO,i7,c7,u7,MR,QD,tR,d7,nR,f7,y7,w7,$7,C7,S7,T7,rR,A7,D7,O7,P7,z7,B7,V7,iR,U7,q7,Y7,cR,uR,Q7,s5,r5,dR,i5,c5,p5,I2,m5,WR,gR,g5,y5,w5,k5,DD,ch,I5,UR,GR,HR,N5,T5,A5,D5,O5,F5,L5,IR,j5,U5,H5,Y5,NR,J5,e8,s8,SR,K7,r8,i8,c8,u8,d8,f8,x8,b8,AR,w8,DR,OR,k8,I8,N8,T8,A8,zR,SF,D8,O8,P8,z8,B8,V8,mR,Y8,J8,e9,l5];for(const s of t9)b0(s);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ko={},Ji={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function s9(s,e){ko[s]=e}function Ys(s,e){if(!(s in ko)||e!=null){const n=o9(s,e);if(n!==null)ko[s]=n;else return console.log("Could not get context for WebGL version",s),null}const t=ko[s];return t==null||t.isContextLost()?(delete ko[s],Ys(s)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),ko[s])}function n9(s){if(!L().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&s===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function o9(s,e){if(s!==1&&s!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??n9(s);return t.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete ko[s]},!1),L().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ji.failIfMajorPerformanceCaveat=!1),s===1?t.getContext("webgl",Ji)||t.getContext("experimental-webgl",Ji):t.getContext("webgl2",Ji)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ba;(function(s){s[s.DENSE=0]="DENSE",s[s.SHARED_BATCH=1]="SHARED_BATCH"})(ba||(ba={}));var ms;(function(s){s[s.RENDER=0]="RENDER",s[s.UPLOAD=1]="UPLOAD",s[s.PIXELS=2]="PIXELS",s[s.DOWNLOAD=3]="DOWNLOAD"})(ms||(ms={}));var Nt;(function(s){s[s.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",s[s.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",s[s.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",s[s.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",s[s.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Nt||(Nt={}));function ji(s,e){return[e,s]}function r9(s,e){return s*e}function Qi(s){const e=W(s),t=Math.ceil(e/4);return iu(t)}function Mr(s,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(s/2))]}function a9(s,e){const[t,n]=Mr(s,e);return t*n*4}function gf(s,e){const t=s;let n,o,r,a,i,l,c,p,u,h;return L().getNumber("WEBGL_VERSION")===2?(n=t.R32F,o=t.R16F,r=t.RGBA16F,a=t.RGBA32F,i=t.RED,c=4,p=1,u=t.HALF_FLOAT,h=t.FLOAT,l=t.RGBA8):(n=s.RGBA,o=s.RGBA,r=s.RGBA,a=t.RGBA,i=s.RGBA,c=4,p=4,u=e!=null?e.HALF_FLOAT_OES:null,h=s.FLOAT,l=s.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:p,textureTypeHalfFloat:u,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function re(s,e){const t=e();return L().getBool("DEBUG")&&i9(s),t}function i9(s){const e=s.getError();if(e!==s.NO_ERROR)throw new Error("WebGL Error: "+u9(s,e))}const l9=596e-10,c9=65504;function p9(s){return!!(L().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||s===0||l9<Math.abs(s)&&Math.abs(s)<c9)}function u9(s,e){switch(e){case s.NO_ERROR:return"NO_ERROR";case s.INVALID_ENUM:return"INVALID_ENUM";case s.INVALID_VALUE:return"INVALID_VALUE";case s.INVALID_OPERATION:return"INVALID_OPERATION";case s.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case s.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case s.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function el(s,e){return _n(s,()=>s.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function h9(s,e){const t=_n(s,()=>s.createShader(s.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(re(s,()=>s.shaderSource(t,e)),re(s,()=>s.compileShader(t)),s.getShaderParameter(t,s.COMPILE_STATUS)===!1)throw console.log(s.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function d9(s,e){const t=_n(s,()=>s.createShader(s.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(re(s,()=>s.shaderSource(t,e)),re(s,()=>s.compileShader(t)),L().get("ENGINE_COMPILE_ONLY"))return t;if(s.getShaderParameter(t,s.COMPILE_STATUS)===!1)throw C2(e,s.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const m9=/ERROR: [0-9]+:([0-9]+):/g;function C2(s,e){const t=m9.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(s);return}const n=+t[1],o=s.split(`
`),r=o.length.toString().length+2,a=o.map((u,h)=>pr((h+1).toString(),r)+u);let i=0;for(let u=0;u<a.length;u++)i=Math.max(a[u].length,i);const l=a.slice(0,n-1),c=a.slice(n-1,n),p=a.slice(n);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${pr(c[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function f9(s){return _n(s,()=>s.createProgram(),"Unable to create WebGLProgram.")}function g9(s,e){if(re(s,()=>s.linkProgram(e)),!L().get("ENGINE_COMPILE_ONLY")&&s.getProgramParameter(e,s.LINK_STATUS)===!1)throw console.log(s.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Jp(s,e){if(re(s,()=>s.validateProgram(e)),s.getProgramParameter(e,s.VALIDATE_STATUS)===!1)throw console.log(s.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function x9(s,e){const t=_n(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return re(s,()=>s.bindBuffer(s.ARRAY_BUFFER,t)),re(s,()=>s.bufferData(s.ARRAY_BUFFER,e,s.STATIC_DRAW)),t}function y9(s,e){const t=_n(s,()=>s.createBuffer(),"Unable to create WebGLBuffer");return re(s,()=>s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t)),re(s,()=>s.bufferData(s.ELEMENT_ARRAY_BUFFER,e,s.STATIC_DRAW)),t}function b9(s){return _n(s,()=>s.createTexture(),"Unable to create WebGLTexture.")}function w9(s,e){const t=L().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(s<=0||e<=0){const n=`[${s}x${e}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(s>t||e>t){const n=`[${s}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function v9(s){return _n(s,()=>s.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function zg(s,e,t,n,o,r,a){const i=s.getAttribLocation(e,t);return i===-1?!1:(re(s,()=>s.bindBuffer(s.ARRAY_BUFFER,n)),re(s,()=>s.vertexAttribPointer(i,o,s.FLOAT,!1,r,a)),re(s,()=>s.enableVertexAttribArray(i)),!0)}function k9(s,e,t){S9(s,t),re(s,()=>s.activeTexture(s.TEXTURE0+t)),re(s,()=>s.bindTexture(s.TEXTURE_2D,e))}function $9(s,e,t){return _n(s,()=>s.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function I9(s,e,t){return s.getUniformLocation(e,t)}function C9(s,e,t,n){re(s,()=>k9(s,e,n)),re(s,()=>s.uniform1i(t,n))}function Qp(s,e,t){re(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,t)),re(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,e,0))}function jg(s,e){re(s,()=>s.bindFramebuffer(s.FRAMEBUFFER,e)),re(s,()=>s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,null,0))}function tl(s){const e=s.checkFramebufferStatus(s.FRAMEBUFFER);if(e!==s.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+N9(s,e))}function N9(s,e){switch(e){case s.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case s.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case s.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function _n(s,e,t){const n=re(s,()=>e());if(n==null)throw new Error(t);return n}function S9(s,e){const t=s.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=e+s.TEXTURE0;if(n<s.TEXTURE0||n>t){const o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Er(s,e=2){return W(s.slice(0,s.length-e))}function Ar(s){if(s.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[s.length>1?s[s.length-2]:1,s[s.length-1]]}function sl(s){let e=[1,1,1];return s.length===0||s.length===1&&s[0]===1||(e=[Er(s),...Ar(s)]),e}function T9(s,e=!1){let t=L().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=L().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&L().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=t/2),e&&(t=t*2,n=n*2,s=s.map((i,l)=>l>=s.length-2?gh(s[l]):s[l]),s.length===1&&(s=[2,s[0]])),s.length!==2&&(s=to(s).newShape);let o=W(s),r=null;s.length<=1&&o<=t?r=[1,o]:s.length===2&&s[0]<=t&&s[1]<=t?r=s:s.length===3&&s[0]*s[1]<=t&&s[2]<=t?r=[s[0]*s[1],s[2]]:s.length===3&&s[0]<=t&&s[1]*s[2]<=t?r=[s[0],s[1]*s[2]]:s.length===4&&s[0]*s[1]*s[2]<=t&&s[3]<=t?r=[s[0]*s[1]*s[2],s[3]]:s.length===4&&s[0]<=t&&s[1]*s[2]*s[3]<=t&&(r=[s[0],s[1]*s[2]*s[3]]);const a=r!=null&&Math.max(...r)>n&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||a)if(e){const i=Er(s);let l=2,c=2;s.length&&([l,c]=Ar(s)),o=i*(l/2)*(c/2),r=iu(o).map(p=>p*2)}else r=iu(o);return r}function nl(s){return s%2===0}function jl(s,e){if(s=s.slice(-2),e=e.slice(-2),Se(s,e)||!s.length||!e.length||s[0]===0||s[1]===0||e[0]===0||e[1]===0)return!0;if(s.length!==e.length){const t=s[s.length-1],n=e[e.length-1];if(t===n||nl(t)&&nl(n)&&(s[0]===1||e[0]===1))return!0}return s[1]===e[1]&&nl(s[0])&&nl(e[0])}let eu,tu;function E9(s){if(eu==null){const e=Ys(s);eu=e.getParameter(e.MAX_TEXTURE_SIZE)}return eu}function A9(s){if(tu==null){const e=Ys(s);tu=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,tu)}function _9(s){if(s===0)return 0;let e;const t=Ys(s);return As(t,"EXT_disjoint_timer_query_webgl2")&&s===2?e=2:As(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function As(s,e){return s.getExtension(e)!=null}function Bg(s){try{if(Ys(s)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function D9(s){if(s===0)return!1;const e=Ys(s);if(s===1){if(!As(e,"OES_texture_float"))return!1}else if(!As(e,"EXT_color_buffer_float"))return!1;return uh(e)}function R9(s){if(s===0)return!1;const e=Ys(s);if(s===1){if(!As(e,"OES_texture_float")||!As(e,"WEBGL_color_buffer_float"))return!1}else{if(As(e,"EXT_color_buffer_float"))return uh(e);const n="EXT_color_buffer_half_float";if(As(e,n)){const o=e.getExtension(n);return O9(e,o)}return!1}return uh(e)}function uh(s){const e=gf(s),t=s.createTexture();s.bindTexture(s.TEXTURE_2D,t);const n=1,o=1;s.texImage2D(s.TEXTURE_2D,0,e.internalFormatFloat,n,o,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,r),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,t,0);const a=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(t),s.deleteFramebuffer(r),a}function O9(s,e){const t=gf(s,e),n=s.createTexture();s.bindTexture(s.TEXTURE_2D,n);const o=1,r=1;s.texImage2D(s.TEXTURE_2D,0,t.internalFormatHalfFloat,o,r,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,a),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,n,0);const i=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(n),s.deleteFramebuffer(a),i}function F9(s){return s!==2?!1:Ys(s).fenceSync!=null}function Bi(s,e){Array.isArray(s)||(s=[s]),s.forEach(t=>{t!=null&&$(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pe=L();pe.registerFlag("HAS_WEBGL",()=>pe.getNumber("WEBGL_VERSION")>0);pe.registerFlag("WEBGL_VERSION",()=>Bg(2)?2:Bg(1)?1:0);pe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);pe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>pe.get("WEBGL_VERSION")===2);pe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);pe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);pe.registerFlag("WEBGL_PACK",()=>pe.getBool("HAS_WEBGL"));pe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_CLIP",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_REDUCE",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_LAZILY_UNPACK",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_CONV_IM2COL",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>pe.getBool("WEBGL_PACK"));pe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>E9(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>A9(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const s=pe.getNumber("WEBGL_VERSION");return s===0?0:_9(s)});pe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>pe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!O0());pe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>D9(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>pe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:pe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));pe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>R9(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>F9(pe.getNumber("WEBGL_VERSION")));pe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>pe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);pe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,s=>{if(typeof s!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${s}.`);if(s<0&&s!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${s}.`)});pe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>O0()?1:-1,s=>{if(typeof s!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${s}.`);if(s<0&&s!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${s}.`)});pe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);pe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);pe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);pe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);pe.registerFlag("WEBGL_EXP_CONV",()=>!1);pe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>pe.getBool("IS_TEST"));pe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);pe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);pe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);pe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wt(){let s,e,t,n,o,r,a,i,l,c;return L().getNumber("WEBGL_VERSION")===2?(s="#version 300 es",e="in",t="out",n="in",o="texture",r="outputColor",a="out vec4 outputColor;",i=L().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(s="",e="attribute",t="varying",n="varying",o="texture2D",r="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:s,attribute:e,varyingVs:t,varyingFs:n,texture2D:o,output:r,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(s,e,t="index"){const n=de(e);return n.map((o,r)=>{const a=`int ${s[r]} = ${t} / ${o}`,i=r===n.length-1?`int ${s[r+1]} = ${t} - ${s[r]} * ${o}`:`index -= ${s[r]} * ${o}`;return`${a}; ${i};`}).join("")}function Dp(s,e,t="index"){const n=de(e);return n.map((o,r)=>{const a=`int ${s[r]} = ${t} / outShapeStrides[${r}]`,i=r===n.length-1?`int ${s[r+1]} = ${t} - ${s[r]} * outShapeStrides[${r}]`:`index -= ${s[r]} * outShapeStrides[${r}]`;return`${a}; ${i};`}).join("")}function P9(s,e){const t=s.length,n=s.map(r=>`${e}[${r}]`),o=new Array(t-1);o[t-2]=n[t-1];for(let r=t-3;r>=0;--r)o[r]=`(${o[r+1]} * ${n[r+1]})`;return o}function L9(s,e,t="index"){const n=s.map((r,a)=>a),o=P9(n,e);return o.map((r,a)=>{const i=`int ${s[a]} = ${t} / ${o[a]}`,l=a===o.length-1?`int ${s[a+1]} = ${t} - ${s[a]} * ${o[a]}`:`index -= ${s[a]} * ${o[a]}`;return`${i}; ${l};`}).join("")}function xf(s){const e=de(s).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function yf(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const N2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:S2}=Q3;function z9(s,e,t){const n=[];if(s.forEach(d=>{const m=W(d.shapeInfo.logicalShape);if(d.shapeInfo.isUniform?n.push(`uniform float ${d.name}${m>1?`[${m}]`:""};`):(n.push(`uniform sampler2D ${d.name};`),n.push(`uniform int offset${d.name};`)),t.enableShapeUniforms){const{uniformShape:g}=bf(t.packedInputs,d.shapeInfo.logicalShape,d.shapeInfo.texShape);switch(g.length){case 1:n.push(`uniform int ${d.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${d.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${d.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${d.name}Shape;`);break}n.push(`uniform ivec2 ${d.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break}n.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(d=>{n.push(`uniform ${d.type} ${d.name}${d.arrayIndex?`[${d.arrayIndex}]`:""};`)});const o=n.join(`
`),r=s.map(d=>j9(d,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=Wt(),l=V9(i);let c,p,u=G9(i);return e.isPacked?(c=B9(e.logicalShape,a,t.enableShapeUniforms),p=U9(i)):(c=M9(e.logicalShape,a,t.enableShapeUniforms),p=W9(i)),t.packedInputs&&(u+=X9),[u,l,p,o,c,r,t.userCode].join(`
`)}function Vr(s,e=!1){const t=s.shapeInfo.logicalShape;switch(t.length){case 0:return iP(s,e);case 1:return cP(s,e);case 2:return uP(s,e);case 3:return dP(s,e);case 4:return fP(s,e);case 5:return gP(s);case 6:return xP(s);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function T2(s,e){switch(s.shapeInfo.logicalShape.length){case 0:return aP(s);case 1:return lP(s,e);case 2:return pP(s,e);case 3:return hP(s,e);default:return mP(s,e)}}function j9(s,e,t=!1,n){let o="";t?o+=T2(s,n):o+=Vr(s,n);const r=s.shapeInfo.logicalShape,a=e.logicalShape;return r.length<=a.length&&(t?o+=yP(s,e):o+=bP(s,e)),o}function B9(s,e,t){switch(s.length){case 0:return E2();case 1:return Y9(s,e,t);case 2:return oP(s,e,t);case 3:return J9(s,e,t);default:return eP(s,e,t)}}function M9(s,e,t){switch(s.length){case 0:return E2();case 1:return Z9(s,e,t);case 2:return rP(s,e,t);case 3:return Q9(s,e,t);case 4:return tP(s,e,t);case 5:return sP(s,e);case 6:return nP(s,e);default:throw new Error(`${s.length}-D output sampling is not yet supported`)}}function V9(s){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${s.texture2D}(textureSampler, uv).r;
    }
  `}function W9(s){return`
    void setOutput(float val) {
      ${s.output} = vec4(val, 0, 0, 0);
    }
  `}function U9(s){return`
    void setOutput(vec4 val) {
      ${s.output} = val;
    }
  `}function G9(s){return`${s.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${s.varyingFs} vec2 resultUV;
    ${s.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${s.defineSpecialNaN}
    ${s.defineSpecialInf}
    ${s.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${H9}
    ${q9}
    ${K9}
  `}const H9=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,q9=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,K9=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,X9=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function E2(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Y9(s,e,t){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return n[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function Z9(s,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function J9(s,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(s[2]/2),r=o*Math.ceil(s[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function Q9(s,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Dp(["r","c","d"],s)}
    return ivec3(r, c, d);
  }
`;const n=Zo(["r","c","d"],s);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function eP(s,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(s[s.length-1]/2),r=o*Math.ceil(s[s.length-2]/2);let a=r,i="",l="b, r, c";for(let c=2;c<s.length-1;c++)a*=s[s.length-c-1],i=`
      int b${c} = index / ${a};
      index -= b${c} * ${a};
    `+i,l=`b${c}, `+l;return`
    ivec${s.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${i}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${s.length}(${l});
    }
  `}function tP(s,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Dp(["r","c","d","d2"],s)}
      return ivec4(r, c, d, d2);
    }
  `;const n=Zo(["r","c","d","d2"],s);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function sP(s,e){const t=Zo(["r","c","d","d2","d3"],s);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function nP(s,e){const t=Zo(["r","c","d","d2","d3","d4"],s);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function oP(s,e,t){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Se(s,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;const o=Math.ceil(s[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function rP(s,e,t){return Se(s,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:s[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:s[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${s[1]};
      int c = index - r * ${s[1]};
      return ivec2(r, c);
    }
  `}function Jo(s){return`offset${s}`}function aP(s){const e=s.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),n=Wt();return`
    vec4 ${t}() {
      return ${n.texture2D}(${e}, halfCR);
    }
  `}function iP(s,e){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(s.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[o,r]=s.shapeInfo.texShape;if(o===1&&r===1)return`
      float ${n}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Jo(t);if(e)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[i,l]=s.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${i}, ${l}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function lP(s,e){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=s.shapeInfo.texShape,r=Wt();if(e)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${r.texture2D}(${t}, uv);
    }
  `}function cP(s,e){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(s.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${Wr(s)}
      }
    `;const o=s.shapeInfo.texShape,r=o[0],a=o[1];if(a===1&&r===1)return`
      float ${n}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Jo(t);return a===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?e?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function pP(s,e){const t=s.shapeInfo.logicalShape,n=s.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,a=r[0],i=r[1],l=Wt();if(r!=null&&Se(t,r))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;const c=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],p=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function uP(s,e){const t=s.shapeInfo.logicalShape,n=s.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape;if(r!=null&&Se(t,r)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;const h=r[0],d=r[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${n}, uv);
    }
  `}const{newShape:a,keptDims:i}=to(t),l=a;if(l.length<t.length){const h=Ur(s,l),d=["row","col"];return`
      ${Vr(h,e)}
      float ${o}(int row, int col) {
        return ${o}(${Gr(d,i)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Wr(s)}
      }
    `;const c=r[0],p=r[1],u=Jo(n);return p===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${u}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${n}, uv);
    }
  `:c===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${u}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${u}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${u};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${u};
    vec2 uv = uvFromFlat(${c}, ${p}, index);
    return sampleTexture(${n}, uv);
  }
`}function hP(s,e){const t=s.shapeInfo.logicalShape,n=s.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),r=s.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){const h=t.slice(1),d=[1,2],m=Ur(s,h),g=["b","row","col"];return`
        ${T2(m,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Gr(g,d)});
        }
      `}const i=Wt();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `;const l=a[0],c=a[1],p=Math.ceil(t[2]/2),u=p*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${u}, ${p}, b, row, col);
      return ${i.texture2D}(${n}, uv);
    }
  `}function dP(s,e){const t=s.shapeInfo.logicalShape,n=s.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[1]*t[2],a=t[2],{newShape:i,keptDims:l}=to(t),c=i;if(c.length<t.length){const g=Ur(s,c),f=["row","col","depth"];return`
        ${Vr(g,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Gr(f,l)});
        }
      `}if(s.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${a}, 1)));
        ${Wr(s)}
      }
    `;const p=s.shapeInfo.texShape,u=p[0],h=p[1],d=s.shapeInfo.flatOffset;if(h===r&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${u}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(h===a&&d==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `;const m=Jo(n);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${a} + depth + ${m};
        vec2 uv = uvFromFlat(${u}, ${h}, index);
        return sampleTexture(${n}, uv);
      }
  `}function mP(s,e){const t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=Wt();if(e)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;const r=s.shapeInfo.logicalShape,a=r.length,i=s.shapeInfo.texShape,l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=l[0],p=l[1],u=Math.ceil(r[a-1]/2);let h=u*Math.ceil(r[a-2]/2),d="int b, int row, int col",m=`b * ${h} + (row / 2) * ${u} + (col / 2)`;for(let g=2;g<a-1;g++)d=`int b${g}, `+d,h*=r[a-g-1],m=`b${g} * ${h} + `+m;return`
    vec4 ${n}(${d}) {
      int index = ${m};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${c});
      return ${o.texture2D}(${t}, uv);
    }
  `}function fP(s,e){const t=s.shapeInfo.logicalShape,n=s.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[3],a=t[2]*r,i=t[1]*a,{newShape:l,keptDims:c}=to(t);if(l.length<t.length){const y=Ur(s,l),w=["row","col","depth","depth2"];return`
      ${Vr(y,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Gr(w,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${r}, 1)));
        ${Wr(s)}
      }
    `;const p=s.shapeInfo.flatOffset,u=s.shapeInfo.texShape,h=u[0],d=u[1],m=`int stride2 = ${n}Shape[3];`,g=`int stride1 = ${n}Shape[2] * stride2;`,f=`int stride0 = ${n}Shape[1] * stride1;`;if(d===i&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(d===r&&p==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;const x=Jo(n);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${f}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${h}, ${d}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function gP(s){const e=s.shapeInfo.logicalShape,t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],r=e[3]*o,a=e[2]*r,i=e[1]*a,{newShape:l,keptDims:c}=to(e);if(l.length<e.length){const g=Ur(s,l),f=["row","col","depth","depth2","depth3"];return`
      ${Vr(g)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Gr(f,c)});
      }
    `}if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${r}, ${o})) +
          depth3;
        ${Wr(s)}
      }
    `;const p=s.shapeInfo.flatOffset,u=s.shapeInfo.texShape,h=u[0],d=u[1];if(d===i&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${r}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(d===o&&p==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Jo(t);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${r} +
          depth2 * ${o} + depth3 + ${m};
      vec2 uv = uvFromFlat(${h}, ${d}, index);
      return sampleTexture(${t}, uv);
    }
  `}function xP(s){const e=s.shapeInfo.logicalShape,t=s.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:r}=to(e);if(o.length<e.length){const f=Ur(s,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Vr(f)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Gr(x,r)});
      }
    `}const a=e[5],i=e[4]*a,l=e[3]*i,c=e[2]*l,p=e[1]*c;if(s.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${c}, ${l}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Wr(s)}
      }
    `;const u=s.shapeInfo.flatOffset,h=s.shapeInfo.texShape,d=h[0],m=h[1];if(m===p&&u==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===a&&u==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=Jo(t);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${c} + depth * ${l} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${g};
      vec2 uv = uvFromFlat(${d}, ${m}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Wr(s){const e=s.name,t=W(s.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function yP(s,e){const t=s.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",r=s.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=S2(s.shapeInfo.logicalShape,e.logicalShape),l=Pe(a),c=a-r;let p;const u=["x","y","z","w","u","v"];r===0?p="":a<2&&i.length>=1?p="coords = 0;":p=i.map(y=>`coords.${u[y+c]} = 0;`).join(`
`);let h="";a<2&&r>0?h="coords":h=s.shapeInfo.logicalShape.map((y,w)=>`coords.${u[w+c]}`).join(", ");let d="return outputValue;";const g=W(s.shapeInfo.logicalShape)===1,x=W(e.logicalShape)===1;if(r===1&&!g&&!x)d=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!x)a===1?d=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:d=`
        return vec4(outputValue.x);
      `;else if(i.length){const y=r-2,w=r-1;i.indexOf(y)>-1&&i.indexOf(w)>-1?d="return vec4(outputValue.x);":i.indexOf(y)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(w)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${l} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${n}(${h});
      ${d}
    }
  `}function bP(s,e){const t=s.name,n=t.charAt(0).toUpperCase()+t.slice(1),o="get"+n+"AtOutCoords",r=e.texShape,a=s.shapeInfo.texShape,i=s.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!s.shapeInfo.isUniform&&i===l&&s.shapeInfo.flatOffset==null&&Se(a,r))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=Pe(l),p=S2(s.shapeInfo.logicalShape,e.logicalShape),u=l-i;let h;const d=["x","y","z","w","u","v"];i===0?h="":l<2&&p.length>=1?h="coords = 0;":h=p.map(g=>`coords.${d[g+u]} = 0;`).join(`
`);let m="";return l<2&&i>0?m="coords":m=s.shapeInfo.logicalShape.map((g,f)=>`coords.${d[f+u]}`).join(", "),`
    float ${o}() {
      ${c} coords = getOutputCoords();
      ${h}
      return get${n}(${m});
    }
  `}function Pe(s){if(s<=1)return"int";if(s===2)return"ivec2";if(s===3)return"ivec3";if(s===4)return"ivec4";if(s===5)return"ivec5";if(s===6)return"ivec6";throw Error(`GPU for rank ${s} is not yet supported`)}function bf(s,e,t){const{newShape:n,keptDims:o}=to(e),r=e.length,a=s&&r===3&&e[0]===1,i=a?e.slice(1):n,l=!s&&r>1&&!Se(e,t)&&n.length<r||a;return{useSqueezeShape:l,uniformShape:l?i:e,keptDims:o}}function Ur(s,e){const t=JSON.parse(JSON.stringify(s));return t.shapeInfo.logicalShape=e,t}function Gr(s,e){return e.map(t=>s[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(s,e,t,n){const o=t.map((p,u)=>{const h={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(h.flatOffset=p.texData.slice.flatOffset),{name:e.variableNames[u],shapeInfo:h}}),r=o.map(p=>p.shapeInfo),a={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},i=z9(o,a,e),l=d9(s.gl,i),c=s.createProgram(l);return L().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:i,webGLProgram:c,inShapeInfos:r,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(s.buildVao(c),Object.assign({program:e,fragmentShader:l,source:i,webGLProgram:c,inShapeInfos:r,outShapeInfo:a},A2(s,e,c)))}function A2(s,e,t){const n=[],o=[];let r,a,i,l=null,c=null;c=s.getUniformLocation(t,"NAN",!1),L().getNumber("WEBGL_VERSION")===1&&(l=s.getUniformLocation(t,"INFINITY",!1));const p=!1;for(const u of e.variableNames){const h={name:u,uniform:s.getUniformLocation(t,u,p),offset:s.getUniformLocation(t,`offset${u}`,p)};e.enableShapeUniforms&&(h.shape=s.getUniformLocation(t,`${u}Shape`,p),h.texShape=s.getUniformLocation(t,`${u}TexShape`,p)),n.push(h)}if(e.enableShapeUniforms&&(r=s.getUniformLocation(t,"outShape",p),i=s.getUniformLocation(t,"outShapeStrides",p),a=s.getUniformLocation(t,"outTexShape",p)),e.customUniforms)for(const u of e.customUniforms)o.push(s.getUniformLocation(t,u.name,p));return{variablesLocations:n,customUniformLocations:o,infLoc:l,nanLoc:c,outShapeLocation:r,outShapeStridesLocation:i,outTexShapeLocation:a}}function Mg(s,e){if(s.length!==e.length)throw Error(`Binary was compiled with ${s.length} inputs, but was executed with ${e.length} inputs`);s.forEach((t,n)=>{const o=t.logicalShape,r=e[n],a=r.shape;if(!Se(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&r.isUniform)return;const i=t.texShape,l=r.isUniform?null:r.texData.texShape;if(!Se(i,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${l} must match`)})}function vP(s,e,t,n,o){e.program.enableShapeUniforms||(Mg(e.inShapeInfos,t),Mg([e.outShapeInfo],[n]));const r=n.texData.texture,a=n.texData.texShape;n.texData.isPacked?s.setOutputPackedMatrixTexture(r.texture,a[0],a[1]):s.setOutputMatrixTexture(r.texture,a[0],a[1]),s.setProgram(e.webGLProgram),s.bindVertexArray(e.webGLProgram.vao),L().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&s.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&s.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const c=t[l],{uniform:p,offset:u,shape:h,texShape:d}=e.variablesLocations[l];if(h){const{uniformShape:m}=bf(e.program.packedInputs,c.shape,c.texData.texShape);switch(m.length){case 1:s.gl.uniform1iv(h,new Int32Array(m));break;case 2:s.gl.uniform2iv(h,new Int32Array(m));break;case 3:s.gl.uniform3iv(h,new Int32Array(m));break;case 4:s.gl.uniform4iv(h,new Int32Array(m));break}}if(d&&s.gl.uniform2i(d,c.texData.texShape[0],c.texData.texShape[1]),p!=null){if(c.isUniform){if(W(c.shape)<2)s.gl.uniform1f(p,c.uniformValues[0]);else{let m=c.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),s.gl.uniform1fv(p,m)}continue}c.texData.slice!=null&&u!=null&&s.gl.uniform1i(u,c.texData.slice.flatOffset),s.setInputMatrixTexture(c.texData.texture.texture,p,l)}}const i=e.outShapeLocation;if(i)switch(n.shape.length){case 1:s.gl.uniform1iv(i,new Int32Array(n.shape));break;case 2:s.gl.uniform2iv(i,new Int32Array(n.shape));break;case 3:s.gl.uniform3iv(i,new Int32Array(n.shape));break;case 4:s.gl.uniform4iv(i,new Int32Array(n.shape));break}if(e.outShapeStridesLocation){const l=de(n.shape);switch(n.shape.length){case 2:s.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:s.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:s.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&s.gl.uniform2i(e.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),e.program.customUniforms&&o)for(let l=0;l<e.program.customUniforms.length;++l){const c=e.program.customUniforms[l],p=e.customUniformLocations[l],u=o[l];if(c.type==="float")s.gl.uniform1fv(p,u);else if(c.type==="vec2")s.gl.uniform2fv(p,u);else if(c.type==="vec3")s.gl.uniform3fv(p,u);else if(c.type==="vec4")s.gl.uniform4fv(p,u);else if(c.type==="int")s.gl.uniform1iv(p,u);else if(c.type==="ivec2")s.gl.uniform2iv(p,u);else if(c.type==="ivec3")s.gl.uniform3iv(p,u);else if(c.type==="ivec4")s.gl.uniform4iv(p,u);else throw Error(`uniform type ${c.type} is not supported yet.`)}s.executeProgram()}function kP(s,e,t){let n="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(s.enableShapeUniforms&&!a.isUniform){const l=a.texData.texShape,{useSqueezeShape:c,uniformShape:p,keptDims:u}=bf(s.packedInputs,a.shape,l);let h="",d="",m="";if(p.length===1&&s.packedInputs){const k=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];h=`${k[0]>1}_${k[1]>1}`}else if(p.length===2&&!s.packedInputs)d=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!s.packedInputs){const k=de(p);m=`${k[0]===l[1]}_${k[k.length-1]===l[1]}`}const g=a.shape.length,f=p.length===2&&Se(a.shape,l),x=W(a.shape)===1,y=kr(a.shape,t.shape),w=!s.packedInputs&&g===t.shape.length&&Se(l,t.texData.texShape),b=s.packedInputs||p.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${g}_${w}_${c?u:""}_${p.length}_${x}_${y}_${f}_${h}_${d}_${m}_${b}_${i}`}else{const l=a.isUniform?"uniform":a.texData.texShape;n+=`${a.shape}_${l}_${i}`}});const o=s.userCode;let r=s.constructor.name;return r+="_"+n+"_"+o+`${L().getNumber("WEBGL_VERSION")}`,r}function Ft(s){return L().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&s<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $P{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ba.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Wt();this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Dp(["r","c","d"],e):Zo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ba.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Wt();this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Dp(["r","c","d"],e):Zo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CP{constructor(e){this.variableNames=["A"],this.outTexUsage=ms.DOWNLOAD;const t=Wt();this.outputShape=e,this.userCode=`
      ${N2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ms.DOWNLOAD;const t=Wt();this.outputShape=e,this.userCode=`
      ${N2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SP={R:0,G:1,B:2,A:3};class Vg{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const o=Wt();this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let a="";for(let i=0;i<n.length;i++){const l=n[i];a+=`
          if(offset == ${i}) {
            result = values[${SP[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?yf():xf(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${a}
        }
        ${o.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TP{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=Wt();this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);let o="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const l=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?yf():xf(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EP(s){const e=Wt(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return h9(s,t)}function AP(s){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return x9(s,e)}function _P(s){const e=new Uint16Array([0,1,2,2,1,3]);return y9(s,e)}function Mi(s,e,t,n,o,r){w9(e,t);const a=b9(s),i=s.TEXTURE_2D;return re(s,()=>s.bindTexture(i,a)),re(s,()=>s.texParameteri(i,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE)),re(s,()=>s.texParameteri(i,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE)),re(s,()=>s.texParameteri(i,s.TEXTURE_MIN_FILTER,s.NEAREST)),re(s,()=>s.texParameteri(i,s.TEXTURE_MAG_FILTER,s.NEAREST)),L().getNumber("WEBGL_VERSION")===1?re(s,()=>s.texImage2D(i,0,n,e,t,0,o,r,null)):re(s,()=>s.texStorage2D(i,1,n,e,t)),re(s,()=>s.bindTexture(s.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function _2(s){return s.internalFormatFloat}function DP(s,e,t,n){const[o,r]=ji(e,t);return Mi(s,o,r,_2(n),n.textureFormatFloat,s.FLOAT)}function D2(s){return s.internalFormatHalfFloat}function RP(s,e,t,n){const[o,r]=ji(e,t);return Mi(s,o,r,D2(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function R2(s){return s.downloadTextureFormat}function OP(s,e,t,n){const[o,r]=ji(e,t);return Mi(s,o,r,R2(n),s.RGBA,s.UNSIGNED_BYTE)}function O2(s){return s.internalFormatPackedFloat}function FP(s,e,t,n){const[o,r]=Mr(e,t);return Mi(s,o,r,O2(n),s.RGBA,s.FLOAT)}function F2(s){return s.internalFormatPackedHalfFloat}function PP(s,e,t,n){const[o,r]=Mr(e,t);return Mi(s,o,r,F2(n),s.RGBA,n.textureTypeHalfFloat)}function LP(s,e,t){return re(s,()=>s.bindBuffer(s.ARRAY_BUFFER,t)),zg(s,e,"clipSpacePos",t,3,20,0)&&zg(s,e,"uv",t,2,20,12)}function zP(s,e,t,n,o,r){re(s,()=>s.bindTexture(s.TEXTURE_2D,e));let a,i,l;o instanceof Uint8Array?(a=new Uint8Array(t*n*4),i=s.UNSIGNED_BYTE,l=s.RGBA):(a=new Float32Array(t*n*4),i=s.FLOAT,l=r.internalFormatPackedFloat),a.set(o),L().getNumber("WEBGL_VERSION")===2?re(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,t,n,s.RGBA,i,a)):re(s,()=>s.texImage2D(s.TEXTURE_2D,0,l,t,n,0,s.RGBA,i,a)),re(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function jP(s,e,t){re(s,()=>s.bindTexture(s.TEXTURE_2D,e)),t.data instanceof Uint8Array?L().getNumber("WEBGL_VERSION")===2?re(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,t.width,t.height,s.RGBA,s.UNSIGNED_BYTE,t.data)):re(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,t.width,t.height,0,s.RGBA,s.UNSIGNED_BYTE,t.data)):L().getNumber("WEBGL_VERSION")===2?re(s,()=>s.texSubImage2D(s.TEXTURE_2D,0,0,0,s.RGBA,s.UNSIGNED_BYTE,t)):re(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,t)),re(s,()=>s.bindTexture(s.TEXTURE_2D,null))}function BP(s,e,t,n){const o=s.createBuffer();re(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,o));const i=4*4*e*t;return re(s,()=>s.bufferData(s.PIXEL_PACK_BUFFER,i,s.STREAM_READ)),re(s,()=>s.readPixels(0,0,t,e,s.RGBA,s.FLOAT,0)),re(s,()=>s.bindBuffer(s.PIXEL_PACK_BUFFER,null)),o}function MP(s,e,t){const n=s,o=new Float32Array(t);return n.bindBuffer(n.PIXEL_PACK_BUFFER,e),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function VP(s,e,t,n){const[o,r]=ji(e,t),a=4,i=new Uint8Array(r9(e*t,a));return re(s,()=>s.readPixels(0,0,o,r,n.downloadTextureFormat,s.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function WP(s,e,t,n,o,r,a,i){const l=s,c=new Float32Array(a9(r,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function UP(s,e,t){const n=new Float32Array(e*t*4);return re(s,()=>s.readPixels(0,0,t,e,s.RGBA,s.FLOAT,n)),n}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class su{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=L().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,s9(t,e)):this.gl=Ys(t),e=this.gl,L().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>re(r,()=>r.createVertexArray()),this.bindVertexArray=a=>re(r,()=>r.bindVertexArray(a)),this.deleteVertexArray=a=>re(r,()=>r.deleteVertexArray(a)),this.getVertexArray=()=>re(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>re(e,()=>r.createVertexArrayOES()),this.bindVertexArray=a=>re(e,()=>r.bindVertexArrayOES(a)),this.deleteVertexArray=a=>re(e,()=>r.deleteVertexArrayOES(a)),this.getVertexArray=()=>re(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),L().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=el(this.gl,r),As(this.gl,a))this.textureHalfFloatExtension=el(this.gl,a);else if(L().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),As(this.gl,o))this.colorBufferHalfFloatExtension=el(this.gl,o);else if(L().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",As(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(As(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=AP(this.gl),this.indexBuffer=_P(this.gl),this.framebuffer=v9(this.gl),this.textureConfig=gf(this.gl,this.textureHalfFloatExtension)}get debug(){return L().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;re(e,()=>e.finish()),re(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),re(e,()=>e.deleteFramebuffer(this.framebuffer)),re(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),re(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),re(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),DP(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),RP(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),OP(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),jP(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,o){this.throwIfDisposed(),zP(this.gl,e,t,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),PP(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),FP(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(jg(this.gl,this.framebuffer),this.outputTexture=null),re(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>VP(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,o,r,a){return WP(this.gl,e,t,n,o,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return MP(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const o=BP(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(L().getBool("WEBGL_FENCE_API_ENABLED")){const o=e,r=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const a=o.clientWaitSync(r,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=r}else L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>UP(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=EP(t));const n=f9(t);re(t,()=>t.attachShader(n,this.vertexShader)),re(t,()=>t.attachShader(n,e)),g9(t,n);const o=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&Jp(t,o),o}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;re(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),LP(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(re(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Jp(this.gl,this.program),re(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?$9(this.gl,e,t):I9(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),re(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),C9(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[o,r]=Mr(t,n);this.setOutputMatrixTextureDriver(e,o,r)}setOutputMatrixWriteRegion(e,t,n,o){this.setOutputMatrixWriteRegionDriver(n,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Jp(this.gl,this.program),tl(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}re(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),re(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=el(this.gl,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Cf(()=>this.disposed||this.isQueryAvailable(e,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{const n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const n=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=GP(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in L().platform&&(n=L().platform.setTimeoutCustom.bind(L().platform)),Cf(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Qp(this.gl,e,this.framebuffer),this.debug&&tl(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Qp(this.gl,this.outputTexture,this.framebuffer),this.debug&&tl(this.gl)):jg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const o=this.gl;Qp(o,e,this.framebuffer),this.debug&&tl(o),this.outputTexture=e,re(o,()=>o.viewport(0,0,t,n)),re(o,()=>o.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,o){this.throwIfDisposed(),re(this.gl,()=>this.gl.scissor(e,t,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function GP(s){let e=0;for(;e<s.length&&s[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:HP,bincountImpl:P2,bincountReduceImpl:qP,bitwiseAndImpl:KP,castImpl:XP,ceilImpl:YP,concatImpl:ZP,equalImpl:JP,expImpl:QP,expm1Impl:eL,floorImpl:tL,gatherNdImpl:sL,gatherV2Impl:nL,greaterImpl:oL,greaterEqualImpl:rL,lessImpl:aL,lessEqualImpl:iL,linSpaceImpl:lL,logImpl:cL,maxImpl:pL,maximumImpl:uL,minimumImpl:hL,multiplyImpl:dL,negImpl:mL,notEqualImpl:fL,prodImpl:gL,raggedGatherImpl:xL,raggedRangeImpl:yL,raggedTensorToTensorImpl:bL,rangeImpl:wL,rsqrtImpl:vL,scatterImpl:kL,sigmoidImpl:$L,simpleAbsImpl:L2,sliceImpl:IL,sparseFillEmptyRowsImpl:CL,sparseReshapeImpl:NL,sparseSegmentReductionImpl:z2,sqrtImpl:SL,staticRegexReplaceImpl:TL,stridedSliceImpl:EL,stringNGramsImpl:AL,stringSplitImpl:_L,stringToHashBucketFastImpl:DL,subImpl:RL,tileImpl:OL,topKImpl:FL,transposeImpl:wf,uniqueImpl:PL}=jR;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(s,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${s}.${t}`)}function jt(s,e){return e===1?[s]:j2(s,e)}function LL(s,e){if(s===1)return"rc";let t="";for(let n=0;n<s;n++)t+=e[n],n<s-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zL{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Ft(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=jt("rc",this.rank),n=Pe(this.rank),o=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let r=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B2{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);let n="";for(let o=0;o<4;o++){let r="thisRC = rc;";o%2===1&&(r+="thisRC.z += 1;"),o>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${jL(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?yf():xf(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}}function jL(s,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?L9(["r","c","d"],"inputShape"):Zo(["r","c","d"],s)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BL{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const o=Ug(t,n),r=Gg(e,o,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=Wg(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[r].pop();return this.usedTextures[r].push(l),l}let i;return o===Nt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===Nt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===Nt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===Nt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===Nt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,o){if(this.freeTextures==null)return;const r=Ug(n,o),a=Gg(t,r,o);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Wg(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,o),l=L().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const c=this.usedTextures[a],p=c&&c.indexOf(e);if(p==null||p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[p]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function ML(s,e){const t=s;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===s.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Wg(s,e,t,n,o){const r=VL(e,n);let a;if(o){const[l,c]=Mr(s[0],s[1]);a=l*c}else{const[l,c]=ji(s[0],s[1]);a=l*c}const i=ML(t,r);return a*i}function VL(s,e){switch(s){case Nt.PACKED_2X2_FLOAT32:return O2(e);case Nt.PACKED_2X2_FLOAT16:return F2(e);case Nt.UNPACKED_FLOAT32:return _2(e);case Nt.UNPACKED_FLOAT16:return D2(e);case Nt.PACKED_4X1_UNSIGNED_BYTE:return R2(e);default:throw new Error(`Unknown physical texture type ${s}`)}}function WL(s){return L().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?s?Nt.PACKED_2X2_FLOAT32:Nt.UNPACKED_FLOAT32:s?Nt.PACKED_2X2_FLOAT16:Nt.UNPACKED_FLOAT16}function Ug(s,e){if(s===ms.UPLOAD)return Nt.PACKED_2X2_FLOAT32;if(s===ms.RENDER||s==null)return WL(e);if(s===ms.DOWNLOAD||s===ms.PIXELS)return Nt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${s}`)}function Gg(s,e,t){return`${s[0]}_${s[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class on{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const zs="if (isnan(x)) return x;",UL="return x;",Hg="return abs(x);",GL="return (x >= 0.0) ? x : (exp(x) - 1.0);",HL=zs+`
  return (x < 0.0) ? 0.0 : x;
`,qL=zs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Pn="return x;",KL="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XL="return x;",YL=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ZL=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,JL=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,QL="return 1.0 / (1.0 + exp(-1.0 * x));";class jn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ez{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);const t=e.length,n=jt("rc",t),o=Pe(t),r=LL(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz=sm,sz=1e-7,nz=1e-4,ol={};function oz(s){return s in ol||(ol[s]={}),ol[s]}const rz=L().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),az=600;function iz(){return L().global.screen==null?1024:L().global.screen.height*L().global.screen.width*window.devicePixelRatio*az/1024/1024}class Rp extends fh{nextDataId(){return Rp.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!L().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof su)t=e;else{const n=Ys(L().getNumber("WEBGL_VERSION"),e);t=new su(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const n=Ys(L().getNumber("WEBGL_VERSION"));t=new su(n),this.binaryCache=oz(L().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new BL(this.gpgpu),this.numMBBeforeWarning=iz(),this.texData=new h0(this,en())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,o,r,a){const i=this.makeTensorInfo(t,n),l=this.texData.get(i.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[o,r]},l.texShape=[o,r];const c=sl(t),p=new Vg(c,!1,a),u=this.runWebGLProgram(p,[i],n,[[o,r]]);return u.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(i),u.dataId}write(e,t,n){if((L().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||L().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:n,values:e,usage:ms.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,o,r){if(L().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:o,values:t,usage:ms.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:o,complexTensorInfos:r,slice:a,shape:i,isPacked:l}=t;if(a!=null){let h;l?h=new jn(i,Pn):h=new on(i,Pn);const d=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:o}],o),m=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return n;const c=this.activeTimers!=null;let p;c&&(p=Ut());let u;if(o==="complex64"){const h=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);u=Cn(h,d)}else u=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Ut()-p),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){const m=this.pendingRead.get(e);return new Promise(g=>m.push(g))}const t=this.texData.get(e),{values:n,shape:o,slice:r,dtype:a,complexTensorInfos:i,isPacked:l}=t;if(r!=null){let m;l?m=new jn(o,Pn):m=new on(o,Pn);const g=this.runWebGLProgram(m,[{dataId:e,shape:o,dtype:a}],a),f=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(L().getBool("DEBUG")&&!L().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&L().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,p;if(a!=="complex64"&&L().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);const m=this.texData.get(p.dataId);c=this.gpgpu.createBufferFromTexture(m.texture.texture,...Qi(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let u;if(a==="complex64"){const m=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),g=m[0],f=m[1];u=Cn(g,f)}else if(c==null)u=this.getValuesFromTexture(e);else{const m=W(o);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,m)}if(p!=null&&this.disposeIntermediateTensorInfo(p),c!=null){const m=this.gpgpu.gl;re(m,()=>m.deleteBuffer(c))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(m=>m(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&en().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:o,shape:r,slice:a,dtype:i,isPacked:l,texture:c}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;l?d=new jn(r,Pn):d=new on(r,Pn);const m=this.runWebGLProgram(d,[{dataId:e,shape:r,dtype:i}],i),g=this.readToGPU(m,t);return this.disposeIntermediateTensorInfo(m),g}if(c==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const p=this.decode(e,t.customTexShape),u=en().makeTensorFromTensorInfo(p),h=this.texData.get(p.dataId);return Object.assign({tensorRef:u},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const n=t.map(o=>Gn(o));return ke(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ke(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const n=e[t];if(!p9(n))throw L().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:o}=this.texData.get(e),r=W(t);if(L().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),d=this.texData.get(h.dataId),m=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...Qi(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(h),m}const a=L().getBool("WEBGL_PACK")&&o===!0,i=a?sl(t):t,l=a?new NP(i):new CP(i),c=this.runWebGLProgram(l,[{shape:i,dtype:n,dataId:e}],"float32"),p=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=Ao(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=Ao(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,o&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(r);i.kernelMs=Ev(l),i.getExtraProfileInfo=()=>l.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ut(),endMs:null}}endTimer(e){return L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ut(),e)}async getQueryTime(e){if(L().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:o,usage:r,isPacked:a,slice:i}=this.texData.get(e),l=i&&i.origDataId||e,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,n),this.textureManager.releaseTexture(t,o,r,a)));const p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=rz){return L().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&W(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){ds("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return tz(e.shape,t)}packedUnaryOp(e,t,n){const o=new jn(e.shape,t),r=this.compileAndRun(o,[e],n);return en().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const o=L2(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(L().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Hg,e.dtype);const t=new on(e.shape,Hg),n=this.compileAndRun(t,[e]);return en().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let o;if(t==="string"&&n!=null&&n.length>0&&$a(n[0])){const r=n.map(a=>Vn(a));o=this.write(r,e,t)}else o=this.write(n,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,n){return en().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new ez(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new zL(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){const n=[Er(e.shape),...Ar(e.shape)],o={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Er(t),...Ar(t)],a=new B2(r,n),i=!0,l=[n],c=this.runWebGLProgram(a,[o],e.dtype,l,i);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:o,shape:r,dtype:a}=n;if(t!=null){const h=W(r),d=t[0]*t[1]*4;$(h<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=sl(r);let l;o?l=new IP(i):l=new $P(i);const c=!0,p=[t??Qi(i)],u=this.runWebGLProgram(l,[{shape:i,dtype:a,dataId:e}],a,p,c,t);return{dtype:a,shape:r,dataId:u.dataId}}runWebGLProgram(e,t,n,o,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(i.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===ba.DENSE){const x=a??Qi(e.outputShape);l.texShape=x.map(y=>y*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),W(i.shape)===0)return l.values=St(i.dtype,0),i;const c=[],p=t.map(x=>{if(x.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(x.dataId);if(y.texture==null){if(!e.packedInputs&&W(x.shape)<=L().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:x.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=x.shape)}if(this.uploadToGPU(x.dataId),!!y.isPacked!=!!e.packedInputs)x=y.isPacked?this.unpackTensor(x):this.packTensor(x),c.push(x),y=this.texData.get(x.dataId);else if(y.isPacked&&!jl(y.shape,x.shape)){const w=x,b=x.shape;x.shape=y.shape,x=this.packedReshape(x,b),c.push(x),y=this.texData.get(x.dataId),w.shape=b}return{shape:x.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);const u={shape:i.shape,texData:l,isUniform:!1},h=kP(e,p,u),d=this.getAndSaveBinary(h,()=>wP(this.gpgpu,e,p,u)),m=this.activeTimers!=null;let g;m&&(g=this.startTimer()),L().get("ENGINE_COMPILE_ONLY")||vP(this.gpgpu,d,p,u,o),c.forEach(x=>this.disposeIntermediateTensorInfo(x)),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const f=L().getNumber("WEBGL_FLUSH_THRESHOLD");if(f>0){const x=Ut();x-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=x)}if(!L().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&r===!1){const x=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),x}return i}compileAndRun(e,t,n,o,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,o,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(L().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=P(()=>{if(!L().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=L().getBool("DEBUG");L().set("DEBUG",!1);const t=this.abs(me(1e-8)).dataSync()[0];if(L().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?sz:nz}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:o,values:r,texture:a,usage:i,isPacked:l}=t;if(a!=null)return;const c=this.activeTimers!=null;let p;c&&(p=Ut());let u=t.texShape;if(u==null&&(u=T9(n,l),t.texShape=u),r!=null){const h=sl(n);let d,m=u[1],g=u[0];const f=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(l||!f)&&([m,g]=Mr(u[0],u[1])),l?d=new TP(h,f):d=new Vg(h,f);const x=f?[g,m]:u,y=this.makeTensorInfo(x,o),w=this.texData.get(y.dataId);f?w.usage=ms.PIXELS:w.usage=ms.UPLOAD,w.texShape=x,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),m,g,r);const b=[[g,m]],k=!0,I=this.runWebGLProgram(d,[y],o,b,k),N=this.texData.get(I.dataId);t.texShape=N.texShape,t.isPacked=N.isPacked,t.usage=N.usage,L().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(t.texture=N.texture,t.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(y),c&&(this.uploadWaitMs+=Ut()-p)}else{const h=this.acquireTexture(u,i,o,l);t.texture=h}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:o}=n;return t!=null&&(n.values=lz(t,o)),n.values}acquireTexture(e,t,n,o){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*hl(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(r){throw r}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await N1(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(C2(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:o,nanLoc:r,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:l}=A2(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=o,e.nanLoc=r,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:o,height:r,width:a,channels:i}=e,l=en().backend;if(!l.gpgpu.gl.isTexture(o))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(o,t,n,r,a,i);return en().makeTensorFromDataId(c,t,n,l)}}Rp.nextDataId=0;function lz(s,e){if(e==="float32"||e==="complex64")return s;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(s.length):new Uint8Array(s.length);for(let n=0;n<t.length;++n)t[n]=Math.round(s[n]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */F0()&&J0("webgl",()=>new Rp,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vf=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Bo{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ye(t,n),this.enableShapeUniforms=Ft(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Hr{constructor(e,t,n,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ye(t,n);const r=this.outputShape.length;this.enableShapeUniforms=Ft(r);let a="";if(o)if(r===0||W(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Pe(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=jt("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${l[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${l[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ls(s){const{inputs:e,backend:t}=s,{x:n}=e;return t.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const cz={kernelName:Ua,backendName:"webgl",kernelFunc:ls};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(s){const{inputs:e,backend:t}=s,{real:n,imag:o}=e,r=t.makeTensorInfo(n.shape,"complex64"),a=t.texData.get(r.dataId),i=ls({inputs:{x:n},backend:t}),l=ls({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:l},r}const pz={kernelName:Ch,backendName:"webgl",kernelFunc:ho};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M2="return (a < 0.) ? b * a : a;",V2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function uz(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{alpha:r}=n,a=t.makeTensorInfo([],"float32",so(r,"float32")),i=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(V2,o.shape,a.shape):new Bo(M2,o.shape,a.shape),l=t.runWebGLProgram(i,[o,a],"float32");return t.disposeIntermediateTensorInfo(a),l}const hz={kernelName:hc,backendName:"webgl",kernelFunc:uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W2="return (a < 0.) ? b * a : a;",U2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function dz(s){const{inputs:e,backend:t}=s,{x:n,alpha:o}=e,r=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(U2,n.shape,o.shape):new Bo(W2,n.shape,o.shape);return t.runWebGLProgram(r,[n,o],"float32")}const mz={kernelName:_c,backendName:"webgl",kernelFunc:dz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qr="if (isnan(x)) return x;";function _e({opSnippet:s,packedOpSnippet:e,cpuKernelImpl:t,dtype:n}){return({inputs:o,backend:r})=>{const{x:a}=o,i=r,l=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const u=i.texData.get(a.dataId),h=t(u.values,l);return i.makeTensorInfo(a.shape,l,h)}const c=L().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let p;return c?p=new jn(a.shape,e):p=new on(a.shape,s),i.runWebGLProgram(p,[a],l)}}function _t({opSnippet:s,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:r}){return({inputs:a,backend:i})=>{const{a:l,b:c}=a,p=i;if(n&&l.dtype==="complex64"){const m=p.texData.get(l.dataId),g=p.texData.get(c.dataId),[f,x]=[[m.complexTensorInfos.real,g.complexTensorInfos.real],[m.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(w=>{const[b,k]=w,I={dataId:b.dataId,dtype:b.dtype,shape:l.shape},N={dataId:k.dataId,dtype:k.dtype,shape:c.shape},S=new Bo(s,l.shape,c.shape);return p.runWebGLProgram(S,[I,N],ns(b.dtype,k.dtype))}),y=ho({inputs:{real:f,imag:x},backend:p});return p.disposeIntermediateTensorInfo(f),p.disposeIntermediateTensorInfo(x),y}const u=r||ns(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||p.shouldExecuteOnCPU([l,c]))&&o!=null){const m=p.texData.get(l.dataId).values,g=p.texData.get(c.dataId).values,f=l.dtype==="string"?Nn(m):m,x=l.dtype==="string"?Nn(g):g,[y,w]=o(l.shape,c.shape,f,x,u),b=p.makeTensorInfo(w,u),k=p.texData.get(b.dataId);return k.values=y,b}const h=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let d;return h?d=new Hr(e,l.shape,c.shape,t):d=new Bo(s,l.shape,c.shape),p.runWebGLProgram(d,[l,c],u)}}function wa(s,e=!1){if(s==="linear")return e?XL:UL;if(s==="relu")return e?ZL:HL;if(s==="elu")return e?YL:GL;if(s==="relu6")return e?JL:qL;if(s==="prelu")return e?U2:W2;if(s==="leakyrelu")return e?V2:M2;if(s==="sigmoid")return e?QL:KL;throw new Error(`Activation ${s} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G2{constructor(e,t,n,o=!1,r=!1,a=!1,i=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Ft(this.outputShape.length);const p=o?e[1]:e[2],u=Math.ceil(p/2),h=o?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",m=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",x="";i&&(l?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:c?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:f=`vec4 activation(vec4 x) {
          ${i}
        }`,x="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let w="rc.x",b="rc.x";e[0]<t[0]?w=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${f}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${u}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${b};
        for (int i = 0; i < ${u}; i++) {
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${m[0]} * ${g[0]});
          result += (${m[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qg={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Kg{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ye(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xg="return a * b;";function kf(s){const{inputs:e,backend:t}=s,{a:n,b:o}=e,r=ns(n.dtype,o.dtype);if(n.dtype==="complex64"){const i=t.texData.get(n.dataId),l=t.texData.get(o.dataId),c=new Kg(qg.REAL,n.shape,o.shape),p=new Kg(qg.IMAG,n.shape,o.shape),u=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:n.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],h=t.runWebGLProgram(c,u,"float32"),d=t.runWebGLProgram(p,u,"float32"),m=ho({inputs:{real:h,imag:d},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),m}if(t.shouldExecuteOnCPU([n,o])){const i=t.texData.get(n.dataId),l=t.texData.get(o.dataId),[c,p]=dL(n.shape,o.shape,i.values,l.values,r),u=t.makeTensorInfo(p,r),h=t.texData.get(u.dataId);return h.values=c,u}let a;return L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Hr(Xg,n.shape,o.shape):a=new Bo(Xg,n.shape,o.shape),t.runWebGLProgram(a,[n,o],r)}const fz={kernelName:Qa,backendName:"webgl",kernelFunc:kf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(s,e,t){const n=[Er(s.shape),...Ar(s.shape)],o={dtype:s.dtype,shape:n,dataId:s.dataId},r=[Er(e),...Ar(e)],a=new B2(r,n),i=!0,l=[n],c=t.runWebGLProgram(a,[o],s.dtype,l,i);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function te(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{shape:r}=n,a=t,i=W(o.shape),l=d0(r,i),c=W(l);$(i===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const p=a.texData.get(o.dataId);return p.isPacked&&!jl(o.shape,l)&&!(p.texture!==null&&jl(p.shape,l))?gz(o,l,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype})}const xz={kernelName:Rc,backendName:"webgl",kernelFunc:te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yg{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:o,inSize:r,outSize:a}=e;this.outputShape=[o,a];const i=Math.floor(n/4)*4,l=n%4;let c="sumValue += dot(values, ones);";if(t!=null){const u=1/t;c=`sumValue += dot(values * ${xr(u)?u.toPrecision(2):u}, ones);`}let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${i};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yz{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:o,inSize:r,outSize:a}=e;this.outputShape=[o,a];let i="0.0",l="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",l="min"):t==="max"&&(i="-1.0 / 1e-20",l="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const p=Math.floor(n/4)*4,u=n%4;let h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let m="";r%n>0&&(m=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${p};
        if (${u===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${u===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${u===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(s){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:s[1],n=xp(t);e.push({inSize:t,windowSize:n,outSize:Math.ceil(t/n)})}return e}function er(s,e,t,n){const o=bz(s.shape);let r=s;for(let a=0;a<o.length;a++){const{inSize:i,windowSize:l,outSize:c}=o[a];let p,u;t==="mean"?p=a===0?new Yg({windowSize:l,inSize:i,batchSize:s.shape[0],outSize:c},i):new Yg({windowSize:l,inSize:i,batchSize:s.shape[0],outSize:c}):p=new yz({windowSize:l,inSize:i,batchSize:s.shape[0],outSize:c},t),u=r,r=n.runWebGLProgram(p,[r],e),u.dataId!==s.dataId&&n.disposeIntermediateTensorInfo(u)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wz{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const o=Pe(this.rank),r=vz(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function vz(s){const e=s.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(e);for(let o=0;o<s.length;o++)n[s[o]]=t[o];return n.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=Pe(this.rank),r=j2("rc",this.rank),a=new Array(this.rank);for(let p=0;p<t.length;p++)a[t[p]]=r[p];const i=`vec2(${a.slice(-2).join()})`,l=`++${r[this.rank-1]} < ${n[this.rank-1]}`,c=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Op(s,e,t){const n=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kz(s.shape,e):new wz(s.shape,e);return t.runWebGLProgram(n,[s],s.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(s,e,t,n){const o=e,r=s.shape.length,a=Ie(o,s.shape);let i=a;const l=et(i,r),c=l!=null;let p=s;c&&(p=Op(s,l,n),i=at(i.length,r)),Et("sum",i,r);const[u,h]=$t(p.shape,i);let d=u;t&&(d=rt(u,a));const m=W(h),f=W(s.shape)/m,x=te({inputs:{x:p},attrs:{shape:[f,m]},backend:n}),y=Id(s.dtype),w=er(x,y,"sum",n),b=te({inputs:{x:w},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),c&&n.disposeIntermediateTensorInfo(p),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fp(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n;return $z(o,r,a,t)}const Iz={kernelName:jc,backendName:"webgl",kernelFunc:Fp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mt(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{perm:r}=n,a=t,i=o.shape.length,l=new Array(i);for(let p=0;p<l.length;p++)l[p]=o.shape[r[p]];let c;if(a.shouldExecuteOnCPU([o])){const u=a.texData.get(o.dataId).values,h=wf(u,o.shape,o.dtype,r,l);c=a.makeTensorInfo(l,o.dtype);const d=a.texData.get(c.dataId);d.values=h}else c=Op(o,r,a);return c}const Cz={kernelName:ur,backendName:"webgl",kernelFunc:Mt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H2=1e3;function Bl({a:s,b:e,transposeA:t,transposeB:n,backend:o,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:l=null}){const c=s.shape.length,p=e.shape.length,u=t?s.shape[c-2]:s.shape[c-1],h=n?e.shape[p-1]:e.shape[p-2],d=t?s.shape[c-1]:s.shape[c-2],m=n?e.shape[p-2]:e.shape[p-1],g=s.shape.slice(0,-2),f=e.shape.slice(0,-2),x=W(g),y=W(f),b=ye(s.shape.slice(0,-2),e.shape.slice(0,-2)).concat([d,m]);$(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${s.shape} and ${e.shape} and transposeA=${t} and transposeB=${n} must match.`);const k=t?[x,u,d]:[x,d,u],I=n?[y,m,h]:[y,h,m],N=te({inputs:{x:s},backend:o,attrs:{shape:k}}),S=te({inputs:{x:e},backend:o,attrs:{shape:I}}),T=[N,S],E=Math.max(x,y),F=t?N.shape[1]:N.shape[2],z=r!=null,j=a!=null,B=l==="leakyrelu",M=l!=null?wa(l,!0):null,V=z||j||B||M!=null;let H;if((d===1||m===1)&&F>H2&&V===!1){let q=N,Y=S;t&&(q=Mt({inputs:{x:N},backend:o,attrs:{perm:[0,2,1]}}),T.push(q)),n&&(Y=Mt({inputs:{x:S},backend:o,attrs:{perm:[0,2,1]}}),T.push(Y));const Z=m!==1,Q=m===1;let J=q;Z&&(J=te({inputs:{x:q},backend:o,attrs:{shape:[E,F,1]}}),T.push(J));const oe=m===1?2:1;let ee=Y;Q&&(ee=te({inputs:{x:Y},backend:o,attrs:{shape:[E,1,F]}}),T.push(ee));const ae=kf({inputs:{a:J,b:ee},backend:o});H=Fp({inputs:{x:ae},backend:o,attrs:{axis:oe,keepDims:!0}}),T.push(ae)}else{const q=ns(s.dtype,e.dtype),Y=new G2(k,I,[E,d,m],t,n,z,M,j,B),Z=[N,S];if(r!=null&&Z.push(r),j&&Z.push(a),B){const Q=o.makeTensorInfo([],"float32",so(i,"float32"));Z.push(Q),T.push(Q)}H=o.runWebGLProgram(Y,Z,q)}const G=te({inputs:{x:H},backend:o,attrs:{shape:b}});T.push(H);for(const q of T)o.disposeIntermediateTensorInfo(q);return G}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(s){const{inputs:e,backend:t,attrs:n}=s,{a:o,b:r,bias:a,preluActivationWeights:i}=e,{transposeA:l,transposeB:c,activation:p,leakyreluAlpha:u}=n;return Bl({a:o,b:r,transposeA:l,transposeB:c,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:u,activation:p})}const Sz={kernelName:dl,backendName:"webgl",kernelFunc:Nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zg="return abs(x);";function Tz(s){const{inputs:e,backend:t}=s,{x:n}=e;if(t.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){const r=t.texData.get(n.dataId),a=L2(r.values);return t.makeTensorInfo(n.shape,n.dtype,a)}let o;return L().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new jn(n.shape,Zg):o=new on(n.shape,Zg),t.runWebGLProgram(o,[n],n.dtype)}const Ez={kernelName:Ul,backendName:"webgl",kernelFunc:Tz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Az=zs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,_z=_e({opSnippet:Az}),Dz={kernelName:Ia,backendName:"webgl",kernelFunc:_z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rz=zs+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Oz=_e({opSnippet:Rz}),Fz={kernelName:Ca,backendName:"webgl",kernelFunc:Oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jg="return a + b;",Pz=_t({opSnippet:Jg,packedOpSnippet:Jg,supportsComplex:!0,cpuKernelImpl:HP}),Lz={kernelName:Or,backendName:"webgl",kernelFunc:Pz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zz{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);const n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jz{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);const n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ul(s){const{inputs:e,backend:t}=s,n=e;if(n.length===1)return ls({inputs:{x:n[0]},backend:t});if(n.length>L().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(n.length/2),c=ul({inputs:n.slice(0,l),backend:t}),p=ul({inputs:n.slice(l),backend:t});return ul({inputs:[c,p],backend:t})}const o=n.map(l=>l.dtype).reduce((l,c)=>ns(l,c)),r=n.map(l=>l.shape),i=L().getBool("WEBGL_PACK")?new jz(n[0].shape,r):new zz(n[0].shape,r);return t.runWebGLProgram(i,n,o)}const Bz={kernelName:Gl,backendName:"webgl",kernelFunc:ul};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n,i=o.shape.length,l=Ie(r,o.shape);let c=l;const p=et(c,i);let u=o;p!=null&&(u=Mt({inputs:{x:o},backend:t,attrs:{perm:p}}),c=at(c.length,i)),Et("all",c,i);const[h,d]=$t(u.shape,c),m=W(d),g=te({inputs:{x:u},backend:t,attrs:{shape:[-1,m]}}),f=er(g,g.dtype,"all",t);let x;if(a){const y=rt(h,l);x=te({inputs:{x:f},backend:t,attrs:{shape:y}})}else x=te({inputs:{x:f},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),p!=null&&t.disposeIntermediateTensorInfo(u),x}const Vz={kernelName:bh,backendName:"webgl",kernelFunc:Mz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n,i=o.shape.length,l=Ie(r,o.shape);let c=l;const p=et(c,i);let u=o;p!=null&&(u=Mt({inputs:{x:o},backend:t,attrs:{perm:p}}),c=at(c.length,i)),Et("any",c,i);const[h,d]=$t(u.shape,c),m=W(d),g=te({inputs:{x:u},backend:t,attrs:{shape:[-1,m]}}),f=er(g,g.dtype,"any",t);let x;if(a){const y=rt(h,l);x=te({inputs:{x:f},backend:t,attrs:{shape:y}})}else x=te({inputs:{x:f},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),p!=null&&t.disposeIntermediateTensorInfo(u),x}const Uz={kernelName:wh,backendName:"webgl",kernelFunc:Wz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gz{constructor(e,t,n){this.variableNames=["A"];const{windowSize:o,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i=t==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hz{constructor(e,t,n,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,$(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");const i=this.outputShape,l=i.length,c=Pe(l),p=jt("coords",l);let u,h;if(a===1){h=l+1;const S=Pe(h);u=`
        ${S} sourceLocR = ${S}(${p.join()}, 0);
        ++${p[l-1]};
        ${S} sourceLocG = ${S}(${p.join()}, 0);
        ++${p[l-2]};
        ${S} sourceLocA = ${S}(${p.join()}, 0);
        --${p[l-1]};
        ${S} sourceLocB = ${S}(${p.join()}, 0);
        --${p[l-2]};`}else h=l,u=`
        ${c} sourceLocR = coords;
        ++${p[l-1]};
        ${c} sourceLocG = coords;
        ++${p[l-2]};
        ${c} sourceLocA = coords;
        --${p[l-1]};
        ${c} sourceLocB = coords;
        --${p[l-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),m="."+d[h-1],g=d.map(S=>"int "+S),f=jt("sourceLocR",h-1).concat("inIdx.r"),x=jt("sourceLocG",h-1).concat("inIdx.g"),y=jt("sourceLocB",h-1).concat("inIdx.b"),w=jt("sourceLocA",h-1).concat("inIdx.a"),b=n==="max"?"greaterThan":"lessThan",k=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${w.join()})));`,I=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,N=o?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${p[l-1]} < ${i[l-1]-1};
        bool hasNextRow = ${p[l-2]} < ${i[l-2]-1};
        ${u}
        ivec4 srcIdx = ivec4(sourceLocR${m}, sourceLocG${m},
          sourceLocB${m}, sourceLocA${m}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${k}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(s,e,t,n=null){let o=e.shape[0],r=e.shape[1];n!=null&&(o=n.shape[0],r=n.shape[1]);const a=xp(r),i={windowSize:a,inSize:r,batchSize:o,outSize:Math.ceil(r/a)},l=new Gz(i,t,n==null),c=[e];n!=null&&c.push(n);const p=s.runWebGLProgram(l,c,"int32");if(p.shape[1]===1)return p;const u=q2(s,e,t,p);return s.disposeIntermediateTensorInfo(p),u}function K2(s,e,t,n=null){const o=n!=null?n.shape:e.shape,r=o[o.length-1],a=xp(r),i=new Hz(o,a,t,n==null),l=n==null?[e]:[e,n],c=s.runWebGLProgram(i,l,"int32");if(c.shape.length===e.shape.length){const p=K2(s,e,t,c);return s.disposeIntermediateTensorInfo(c),p}return c}function X2(s,e,t,n){const o=[t];if(Et("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,e.shape.length),!L().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],a=s.texData.get(e.dataId),i=a!==null&&a.isPacked;let l=e;i&&(l=s.unpackTensor(e),r.push(l));const[c,p]=$t(l.shape,o),u=W(p),h=te({inputs:{x:l},backend:s,attrs:{shape:[-1,u]}});r.push(h);const d=q2(s,h,n);r.push(d);const m=te({inputs:{x:d},backend:s,attrs:{shape:c}});return r.forEach(g=>s.disposeIntermediateTensorInfo(g)),m}return K2(s,e,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r}=n;let a=Ie(r,o.shape);const i=et(a,o.shape.length);let l=o;const c=[];i!=null&&(l=Mt({inputs:{x:o},backend:t,attrs:{perm:i}}),c.push(l),a=at(a.length,l.shape.length)),Et("argMax",[a[0]],l.shape.length);const p=X2(t,l,a[0],"max");return c.forEach(u=>t.disposeIntermediateTensorInfo(u)),p}const Kz={kernelName:Hl,backendName:"webgl",kernelFunc:qz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r}=n;let a=Ie(r,o.shape);const i=et(a,o.shape.length);let l=o;const c=[];i!=null&&(l=Mt({inputs:{x:o},backend:t,attrs:{perm:i}}),c.push(l),a=at(a.length,l.shape.length)),Et("argMin",[a[0]],l.shape.length);const p=X2(t,l,a[0],"min");return c.forEach(u=>t.disposeIntermediateTensorInfo(u)),p}const Yz={kernelName:ql,backendName:"webgl",kernelFunc:Xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zz=zs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Jz=_e({opSnippet:Zz}),Qz={kernelName:Na,backendName:"webgl",kernelFunc:Jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej=zs+"return log(x + sqrt(x * x + 1.0));",tj=_e({opSnippet:ej}),sj={kernelName:Sa,backendName:"webgl",kernelFunc:tj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj=zs+`
  return atan(x);
`,oj=_e({opSnippet:nj}),rj={kernelName:Ta,backendName:"webgl",kernelFunc:oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj=vf+`
  return atan(a, b);
`,ij=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Qo+`
  return result;
`,lj=_t({opSnippet:aj,packedOpSnippet:ij}),cj={kernelName:Aa,backendName:"webgl",kernelFunc:lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj=zs+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,uj=_e({opSnippet:pj}),hj={kernelName:Ea,backendName:"webgl",kernelFunc:uj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class va{constructor(e,t,n,o=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,p=e.dilationWidth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,m=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,x=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(g||(y="-1.0 / 1e-20"),n){const S=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${l});
        const ivec2 pads = ivec2(${d}, ${m});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${u};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${S} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?r?f:x:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(b="avgValue / max(count, 1.0)");const k=Math.floor(a/4)*4,I=a%4,N=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${l});
      const ivec2 pads = ivec2(${d}, ${m});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${u};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${k}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${k};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${b});
      }
    `}}class $f{constructor(e,t,n,o=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,l=e.strideHeight,c=e.strideWidth,p=e.dilationDepth,u=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,m=e.effectiveFilterHeight,g=e.effectiveFilterWidth,f=e.padInfo.front,x=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const w=t==="avg";let b="0.0";if(w||(b="-1.0 / 1e-20"),n){const E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${l}, ${c});
        const ivec3 pads = ivec3(${f}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${m};
                wR += ${u}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${m} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const k="max";let I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");const N=Math.floor(a/4)*4,S=a%4,T=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${l}, ${c});
      const ivec3 pads = ivec3(${f}, ${x}, ${y});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m};
            wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${N};
            if (${S===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${S===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${S===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${T}
            }
          }
        }
        setOutput(${I});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dj(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e;Bi(o,"avgPool");const{filterSize:r,strides:a,pad:i,dimRoundingMode:l}=n,c=1;$(Tt(a,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const p=Ps(o.shape,r,a,c,i,l);if(p.filterWidth===1&&p.filterHeight===1&&Se(p.inShape,p.outShape))return ls({inputs:{x:o},backend:t});const u=new va(p,"avg",!1);return t.runWebGLProgram(u,[o],"float32")}const mj={kernelName:Kl,backendName:"webgl",kernelFunc:dj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fj(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:l,dataFormat:c}=n,p=[1,1,1],u=Sn(o.shape,r,a,p,i,l,c),h=new $f(u,"avg",!1);return t.runWebGLProgram(h,[o],"float32")}const gj={kernelName:Xl,backendName:"webgl",kernelFunc:fj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xj{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,p=l-1-e.padInfo.top,u=c-1-e.padInfo.left,h=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${u});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class yj{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,u=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,m=u-1-e.padInfo.front,g=h-1-e.padInfo.top,f=d-1-e.padInfo.left,x=1/(t*n*o);this.userCode=`
      const ivec3 pads = ivec3(${m}, ${g}, ${f});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bj(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,input:r}=e,a=r,{filterSize:i,strides:l,pad:c,dimRoundingMode:p}=n,u=[1,1,1],h=Sn(a.shape,i,l,u,c,p),d=new yj(h);return t.runWebGLProgram(d,[o],a.dtype)}const wj={kernelName:kh,backendName:"webgl",kernelFunc:bj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,input:r}=e,a=r;Bi([o,r],"avgPoolGrad");const{filterSize:i,strides:l,pad:c}=n,p=Ps(a.shape,i,l,1,c),u=new xj(p);return t.runWebGLProgram(u,[o],a.dtype)}const kj={kernelName:vh,backendName:"webgl",kernelFunc:vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(s){const{inputs:e,backend:t,attrs:n}=s,{a:o,b:r}=e,{transposeA:a,transposeB:i}=n;return Bl({a:o,b:r,transposeA:a,transposeB:i,backend:t})}const Ij={kernelName:Yl,backendName:"webgl",kernelFunc:$j};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cj{constructor(e,t,n,o,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ye(e,t),ye(e,n);let i="0.0";o!=null&&(ye(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="1.0";r!=null&&(ye(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nj{constructor(e,t,n,o,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ye(e,t),ye(e,n);let i="vec4(0.0)";o!=null&&(ye(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let l="vec4(1.0)";r!=null&&(ye(e,r),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sj=({inputs:s,backend:e,attrs:t})=>{const{x:n,mean:o,variance:r,offset:a,scale:i}=s;$(o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const c=[n,o,r];let p=null;a!=null&&(p=a.shape,c.push(a));let u=null;i!=null&&(u=i.shape,c.push(i));const h=L().getBool("WEBGL_PACK_NORMALIZATION")?new Nj(n.shape,o.shape,r.shape,p,u,l):new Cj(n.shape,o.shape,r.shape,p,u,l);return e.runWebGLProgram(h,c,c[0].dtype)},Tj={kernelName:cc,backendName:"webgl",kernelFunc:Sj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ej{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Pe(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=Aj(this.rank);let o;const r=e.map((a,i)=>`sourceLoc.${hh[i]} = start[${i}] + coords.${hh[i]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}}const hh=["x","y","z","w","u","v"];function Aj(s){if(s===1)return"sourceLoc";if(s<=6)return hh.slice(0,s).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _j{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Pe(this.rank),n=jt("coords",this.rank),o=jt("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${r})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,u)=>`start[${u}]`).join()});`:e.map((p,u)=>`${o[u]} = ${n[u]} + start[${u}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${i}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dj(s,e,t,n){const o=n.texData.get(s.dataId),r=n.makeTensorInfo(t,s.dtype),a=n.texData.get(r.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=s.dtype;let i=gm(e,de(s.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||s.dataId};const l=n.dataRefCount.get(a.slice.origDataId)||1;return n.dataRefCount.set(a.slice.origDataId,l+1),r}function Kr(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{begin:r,size:a}=n,[i,l]=gp(o,r,a);if(dm(o,i,l),W(l)===0)return t.makeTensorInfo(l,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){const u=t.texData.get(o.dataId),h=IL(u.values,i,l,o.shape,o.dtype);return t.makeTensorInfo(l,o.dtype,h)}const{isPacked:c}=t.texData.get(o.dataId),p=fm(o.shape,i,l);if(c||!p){const u=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _j(l):new Ej(l),h=[i];return t.runWebGLProgram(u,[o],o.dtype,h)}return t.uploadToGPU(o.dataId),Dj(o,i,l,t)}const Rj={kernelName:zc,backendName:"webgl",kernelFunc:Kr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oj=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{blockShape:r,crops:a}=n;$(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=r.reduce((y,w)=>y*w),l=Si(o.shape,r,i),c=Ti(l.length,r.length),p=Ei(o.shape,r,i),u=vm(a,r.length),h=km(p,a,r.length),d=[],m=te({inputs:{x:o},backend:t,attrs:{shape:l}}),g=Mt({inputs:{x:m},backend:t,attrs:{perm:c}}),f=te({inputs:{x:g},backend:t,attrs:{shape:p}}),x=Kr({inputs:{x:f},backend:t,attrs:{begin:u,size:h}});return d.push(m),d.push(g),d.push(f),d.forEach(y=>t.disposeIntermediateTensorInfo(y)),x},Fj={kernelName:Zl,backendName:"webgl",kernelFunc:Oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,weights:r}=e,{size:a}=n,i=t.readSync(o.dataId),l=t.readSync(r.dataId),c=P2(i,l,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,c)}const Lj={kernelName:$h,backendName:"webgl",kernelFunc:Pj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zj=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,jj=`
  return float(int(a.r) & int(b.r));
`;function Bj(s){const{inputs:e,backend:t}=s,{a:n,b:o}=e,r=L().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=L().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([n,o])||a===1){const l=t.texData.get(n.dataId).values,c=t.texData.get(o.dataId).values,[p,u]=KP(n.shape,o.shape,l,c,n.dtype),h=t.makeTensorInfo(u,n.dtype),d=t.texData.get(h.dataId);return d.values=p,h}let i;return r?i=new Hr(zj,n.shape,o.shape,!1):i=new Bo(jj,n.shape,o.shape),t.runWebGLProgram(i,[n,o],n.dtype)}const Mj={kernelName:Jl,backendName:"webgl",kernelFunc:Bj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(s){const{inputs:e,backend:t}=s,{s0:n,s1:o}=e,r=t.readSync(n.dataId),a=t.readSync(o.dataId),i=ye(Array.from(r),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const Wj={kernelName:Ih,backendName:"webgl",kernelFunc:Vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uj="return float(a != b);",Y2=_t({opSnippet:Uj,cpuKernelImpl:fL,dtype:"bool"}),Gj={kernelName:Nc,backendName:"webgl",kernelFunc:Y2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vi(s){const{inputs:e,backend:t}=s,{input:n}=e,o=t.texData.get(n.dataId);return ls({inputs:{x:o.complexTensorInfos.real},backend:t})}const Hj={kernelName:nd,backendName:"webgl",kernelFunc:Vi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qj="return float(int(x));";function Kj(s,e){const t=new on(s.shape,qj),n=e.runWebGLProgram(t,[s],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dh(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{dtype:r}=n;if(r==="complex64"){if(o.dtype==="complex64")return ls({inputs:{x:o},backend:t});const a=ct(o.shape),i=dh({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),l=ho({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),l}if(o.dtype==="complex64"){const a=Vi({inputs:{input:o},backend:t}),i=dh({inputs:{x:a},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(a),i}if(!m0(o.dtype,r)){const a=ls({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:r}}if(t.shouldExecuteOnCPU([o])){const a=t.texData.get(o.dataId).values,[i,l,c]=XP(a,o.shape,o.dtype,r);return t.makeTensorInfo(i,l,c)}if(r==="int32")return Kj(o,t);if(r==="bool"){const a=t.makeTensorInfo([],"bool",St("bool",1)),l=Y2({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),l}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${r}`)}const Xj={kernelName:_a,backendName:"webgl",kernelFunc:dh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qg="return ceil(x);",Yj=_e({opSnippet:Qg,packedOpSnippet:Qg,cpuKernelImpl:YP}),Zj={kernelName:Da,backendName:"webgl",kernelFunc:Yj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jj{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qj{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{clipValueMin:r,clipValueMax:a}=n;let i;L().getBool("WEBGL_PACK_CLIP")?i=new Qj(o.shape):i=new Jj(o.shape);const l=[[r],[a]];return t.runWebGLProgram(i,[o],o.dtype,l)}const tB={kernelName:Ra,backendName:"webgl",kernelFunc:eB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sB{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e0(s,e){return{dataId:e.dataId,dtype:e.dtype,shape:s.shape}}function nB(s){const{inputs:e,backend:t}=s,{x:n}=e,o=t.texData.get(n.dataId),r=new sB(n.shape),a=[e0(n,o.complexTensorInfos.real),e0(n,o.complexTensorInfos.imag)];return t.runWebGLProgram(r,a,a[0].dtype)}const oB={kernelName:Ql,backendName:"webgl",kernelFunc:nB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rB{constructor(e){this.outputShape=[],this.outputShape=ln(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const o=t.length,r=t[t.length-1];n.push(`else setOutput(getT${o}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aB{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ln(e,t);const n=this.outputShape,o=n.length,r=Pe(o),a=jt("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((g,f)=>`T${f}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let g=1;g<l.length;g++)l[g]=l[g-1]+e[g][t];const c=i[t],p=i.slice(-2),u=i.join();let h=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${u}), vec2(${p.join()}));
        }`;for(let g=1;g<l.length;g++){const f=l[g-1];h+=`
        if (${c} < ${l[g]}  && ${c} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${rl(i,c,f)}),
            vec2(${rl(p,c,f)}));
        }`}const d=l.length,m=l[l.length-1];h+=`
        return getChannel(
          getT${d}(${rl(i,c,m)}),
          vec2(${rl(p,c,m)}));`,this.userCode=`
      float getValue(${i.map(g=>"int "+g)}) {
        ${h}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${n[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${n[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${n[o-2]} &&
            ${a[o-1]} < ${n[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function rl(s,e,t){const n=s.indexOf(e);return s.map((r,a)=>a===n?`${r} - ${t}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pp(s){const{inputs:e,backend:t}=s,{input:n}=e,o=t.texData.get(n.dataId);return ls({inputs:{x:o.complexTensorInfos.imag},backend:t})}const iB={kernelName:Wh,backendName:"webgl",kernelFunc:Pp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ra(s,e,t){const n=s[0].dtype;if(n==="complex64"){const d=s.map(y=>Vi({inputs:{input:y},backend:t})),m=s.map(y=>Pp({inputs:{input:y},backend:t})),g=ra(d,e,t),f=ra(m,e,t),x=ho({inputs:{real:g,imag:f},backend:t});return d.forEach(y=>t.disposeIntermediateTensorInfo(y)),m.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),x}let o=t.shouldExecuteOnCPU(s);if(n==="string"&&(o=!0),o){const d=s.map(b=>{const I=[-1,W(b.shape.slice(e))];return te({inputs:{x:b},backend:t,attrs:{shape:I}})}),m=d.map(b=>({vals:t.readSync(b.dataId),shape:b.shape})),g=ln(d.map(b=>b.shape),1),f=d[0].shape[0]===1,x=ZP(m,g,n,f),y=ln(s.map(b=>b.shape),e),w=t.makeTensorInfo(y,n,x);return d.forEach(b=>t.disposeIntermediateTensorInfo(b)),w}const r=s.filter(d=>W(d.shape)>0),a=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const d=a?new on(s[0].shape,Pn):new jn(s[0].shape,Pn);return t.runWebGLProgram(d,s,n)}const i=L().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>i){const d=[];for(let g=0;g<r.length;g+=i){const f=r.slice(g,g+i);d.push(ra(f,e,t))}const m=ra(d,e,t);for(const g of d)t.disposeIntermediateTensorInfo(g);return m}if(a){const d=new aB(r.map(m=>m.shape),e);return t.runWebGLProgram(d,r,n)}const{tensors2D:l,outShape:c}=lB(r,e,t),p=new rB(l.map(d=>d.shape)),u=t.runWebGLProgram(p,l,n);l.forEach(d=>t.disposeIntermediateTensorInfo(d));const h=te({inputs:{x:u},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(u),h}function lB(s,e,t){const n=ln(s.map(r=>r.shape),e);return{tensors2D:s.map(r=>te({inputs:{x:r},attrs:{shape:[-1,W(r.shape.slice(e))]},backend:t})),outShape:n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(s){const{inputs:e,backend:t,attrs:n}=s,{axis:o}=n,r=Ie(o,e[0].shape)[0],a=e.map(c=>c.shape);ym(a,r);const i=ln(e.map(c=>c.shape),r);if(W(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const l=e.filter(c=>W(c.shape)>0);return l.length===1?ls({inputs:{x:l[0]},backend:t}):ra(l,r,t)}const cB={kernelName:ec,backendName:"webgl",kernelFunc:Z2};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J2{constructor(e,t=!1,n=null,o=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,p=e.dilationHeight,u=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,m=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,f=e.dataFormat==="channelsLast",x=f?1:2,y=f?2:3,w=f?3:1;let b="",k="";n&&(o?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:b=`
          float activation(float x) {
            ${n}
          }
        `,k="result = activation(result);");const I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${u};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${m}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${m}) *
                    getW(wR, wC, ${m}, d2);
              } else {
                dotProd +=
                    getX(batch, ${m}, xR, xC) *
                    getW(wR, wC, ${m}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${m}, d2),
                getW(wR, wC, ${m} + 1, d2),
                getW(wR, wC, ${m} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${m}),
                  getX(batch, xR, xC, ${m} + 1),
                  getX(batch, xR, xC, ${m} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${m}, xR, xC),
                  getX(batch, ${m} + 1, xR, xC),
                  getX(batch, ${m} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${k}
        setOutput(result);
      }
    `}}class pB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,o=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,u=e.filterDepth,h=e.filterHeight,d=e.filterWidth,m=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${u}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${m}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${m}) *
                  getW(wF, wR, wC, ${m}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${m}),
                  getX(batch, xF, xR, xC, ${m} + 1),
                  getX(batch, xF, xR, xC, ${m} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${m}, d2),
                  getW(wF, wR, wC, ${m} + 1, d2),
                  getW(wF, wR, wC, ${m} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q2{constructor(e,t=!1,n=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ft(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,p=e.filterWidth,u=p;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let f=0;f<p;f++)h+=`
           vec4 xTexelC${f*2};
           int xTexelC${f*2}Ready;
           vec4 xTexelC${f*2+1};
           int xTexelC${f*2+1}Ready;
           vec4 xC${f};`;h+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let f=0;f<p;f++)h+=`
           xTexelC${f*2} = vec4(0.0);
           xTexelC${f*2}Ready = 0;
           xTexelC${f*2+1} = vec4(0.0);
           xTexelC${f*2+1}Ready = 0;
           xC${f} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let f=0;f<(u+1)/2;f++){const x=f*2;if(h+=`
           xC = xCCorner + ${x*l};
           `,i===1){if(x<p&&(a%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?h+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<p)){const y=a%2===0?gh(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:h+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):y===1?h+=`
                     xC${x+1} = xTexelC${x};
                     `:h+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<p&&(a%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<p&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<p&&(h+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<p&&(h+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<p&&(h+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let d="",m="";n&&(o?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${m}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Ft(this.outputShape.length);const{dataFormat:n}=t,o=Wt(),r=n==="channelsLast",a=r?1:2,i=r?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let p=0;p<=1;p++)for(let u=0;u<=1;u++)c+=`
          blockIndex = rc.z + ${u};
          pos = rc.y + ${p};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+u}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+u}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ml(s,e){const t=s.length;return t>=3?e?[...s.slice(0,-3),s[t-3]*s[t-2],s[t-1]]:[...s.slice(0,-3),s[t-3],s[t-2]*s[t-1]]:!e&&t===1&&s[0]>1?[s[0],1]:null}function ev({x:s,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:a=0,activation:i=null}){const l=s.shape,c=n.texData.get(s.dataId),p=t.inChannels,u=l[0]*l[1]*l[2],h=t.outChannels,d=t.dataFormat==="channelsLast",m=!1,g=!1;let f;const x=[];if(r!=null){const b=Ml(r.shape,d);b!=null&&(r=te({inputs:{x:r},backend:n,attrs:{shape:b}}),x.push(r))}if(o!=null){const b=Ml(o.shape,d);b!=null&&(o=te({inputs:{x:o},backend:n,attrs:{shape:b}}),x.push(o))}if(!((u===1||h===1)&&p>H2)&&c.isPacked&&d&&c.texture!=null&&l[2]%2!==0&&Se(c.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),k={dataId:s.dataId,shape:[1,b,t.inChannels],dtype:s.dtype},I=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,$(jl(c.shape,k.shape),()=>`packed reshape ${c.shape} to ${k.shape} isn't free`);const N=te({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}});x.push(N);const S=Bl({a:k,b:N,backend:n,transposeA:m,transposeB:g,bias:o,activation:i,preluActivationWeights:r,leakyreluAlpha:a}),T=n.texData.get(S.dataId);$(T.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=I,T.shape=t.outShape,f=ls({inputs:{x:S},backend:n}),f.shape=t.outShape,x.push(S)}else{const b=t.outHeight*t.outWidth,k=te({inputs:{x:s},backend:n,attrs:{shape:d?[t.batchSize,b,t.inChannels]:[t.batchSize,t.inChannels,b]}}),I=te({inputs:{x:e},backend:n,attrs:{shape:[1,t.inChannels,t.outChannels]}}),N=Bl({a:d?k:I,b:d?I:k,transposeA:!d,transposeB:g,backend:n,bias:o,activation:i,preluActivationWeights:r,leakyreluAlpha:a});f=te({inputs:{x:N},backend:n,attrs:{shape:t.outShape}}),x.push(k),x.push(I),x.push(N)}for(const b of x)n.disposeIntermediateTensorInfo(b);return f}function tv({x:s,filter:e,convInfo:t,backend:n,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:l,filterHeight:c,inChannels:p,outWidth:u,outHeight:h,dataFormat:d}=t,m=d==="channelsLast",g=l*c*p,f=h*u,x=[t.batchSize,g,f],y=!0,w=!1,b=[];if(r!=null){const G=Ml(r.shape,m);G!=null&&(r=te({inputs:{x:r},backend:n,attrs:{shape:G}}),b.push(r))}if(o!=null){const G=Ml(o.shape,m);G!=null&&(o=te({inputs:{x:o},backend:n,attrs:{shape:G}}),b.push(o))}const k=te({inputs:{x:e},backend:n,attrs:{shape:[1,g,W(e.shape)/g]}});b.push(k);const I=new uB(x,t),N=[s.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],S=n.runWebGLProgram(I,[s],"float32",N),T=te({inputs:{x:S},backend:n,attrs:{shape:x}});b.push(S),b.push(T);const E=o!=null,F=r!=null,z=i==="leakyrelu",j=i?wa(i,!0):null,B=new G2(m?T.shape:k.shape,m?k.shape:T.shape,m?[t.batchSize,f,t.outChannels]:[t.batchSize,t.outChannels,f],y,w,E,j,F,z),M=m?[T,k]:[k,T];if(o&&M.push(o),F&&M.push(r),z){const G=n.makeTensorInfo([],"float32",so(a,"float32"));M.push(G),b.push(G)}const V=n.runWebGLProgram(B,M,"float32"),H=te({inputs:{x:V},backend:n,attrs:{shape:t.outShape}});b.push(V);for(const G of b)n.disposeIntermediateTensorInfo(G);return H}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r}=e,{strides:a,pad:i,dataFormat:l,dilations:c,dimRoundingMode:p}=n,u=Tn(l),h=kt(o.shape,r.shape,a,c,i,p,!1,u);let d;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))d=ev({x:o,filter:r,convInfo:h,backend:t});else if(h.strideWidth<=2&&u==="channelsLast"&&L().getBool("WEBGL_EXP_CONV")){const g=new Q2(h),f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];d=t.runWebGLProgram(g,[o,r],"float32",f)}else if(L().getBool("WEBGL_CONV_IM2COL"))d=tv({x:o,filter:r,convInfo:h,backend:t});else{const g=new J2(h);d=t.runWebGLProgram(g,[o,r],"float32")}const m=te({inputs:{x:d},backend:t,attrs:{shape:h.outShape}});return t.disposeIntermediateTensorInfo(d),m}const dB={kernelName:tc,backendName:"webgl",kernelFunc:hB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class fB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,l=n-1-e.padInfo.left,c=a?1:2,p=a?2:3,u=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${u}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class gB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class xB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,o=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,l=t-1-e.padInfo.front,c=n-1-e.padInfo.top,p=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,dy:r}=e,{strides:a,pad:i,dataFormat:l,dimRoundingMode:c,filterShape:p}=n,u=Tn(l),h=kt(o.shape,p,a,1,i,c,!1,u),d=new mB(h);return t.runWebGLProgram(d,[o,r],"float32")}const bB={kernelName:Nh,backendName:"webgl",kernelFunc:yB};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wB{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Ft(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,o=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,filter:r}=e,{inputShape:a,strides:i,pad:l,dataFormat:c,dimRoundingMode:p}=n,u=Tn(c),h=kt(a,r.shape,i,1,l,p,!1,u);if(L().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&u==="channelsLast"){const d=[[h.strideHeight,h.strideWidth]],m=new wB(h);return t.runWebGLProgram(m,[o,r],"float32",d)}else{const d=new fB(h);return t.runWebGLProgram(d,[o,r],"float32")}}const kB={kernelName:sc,backendName:"webgl",kernelFunc:vB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r}=e,{strides:a,pad:i,dilations:l}=n,c=ro(o.shape,r.shape,a,l,i),p=new pB(c);return t.runWebGLProgram(p,[o,r],"float32")}const IB={kernelName:nc,backendName:"webgl",kernelFunc:$B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,dy:r}=e,{strides:a,pad:i,filterShape:l}=n,c=ro(o.shape,l,a,1,i),p=new gB(c);return t.runWebGLProgram(p,[o,r],"float32")}const NB={kernelName:Sh,backendName:"webgl",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,filter:r}=e,{pad:a,strides:i,inputShape:l}=n,c=ro(l,r.shape,i,1,a),p=new xB(c);return t.runWebGLProgram(p,[o,r],"float32")}const TB={kernelName:Th,backendName:"webgl",kernelFunc:SB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EB=qr+`
  return cos(x);
`,AB=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Qo}
  return result;
`,_B=_e({opSnippet:EB,packedOpSnippet:AB}),DB={kernelName:Oa,backendName:"webgl",kernelFunc:_B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RB=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,OB=_e({opSnippet:RB}),FB={kernelName:Fa,backendName:"webgl",kernelFunc:OB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PB{constructor(e,t,n,o,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,l,c]=e,[p]=t,[u,h]=n;this.outputShape=[p,u,h,c];const d=o==="bilinear"?1:0,[m,g]=[`${i-1}.0`,`${l-1}.0`],[f,x,y]=u>1?[`${(i-1)/(u-1)}`,"(y2-y1) * height_ratio",`y1*${m} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${m}`],[w,b,k]=h>1?[`${(l-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${b};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${m} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${k};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LB=s=>{const{inputs:e,backend:t,attrs:n}=s,{image:o,boxes:r,boxInd:a}=e,{cropSize:i,method:l,extrapolationValue:c}=n,p=new PB(o.shape,r.shape,i,l,c);return t.runWebGLProgram(p,[o,r,a],"float32")},zB={kernelName:Ah,backendName:"webgl",kernelFunc:LB};var ka;(function(s){s.Prod="*",s.Sum="+"})(ka||(ka={}));class t0{constructor(e,t,n,o){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,a=this.op===ka.Prod?"1.0":"0.0",i=n?a:`getX(${s0(r,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",p="";n?(c=o?`end != ${l-1}`:"end != 0",p=o?"end + 1":"end - 1"):(c=o?`end + pow2 < ${l}`:"end >= pow2",p=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Pe(r)} coords = getOutputCoords();
        int end = ${n0(r,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${p};
          ${n0(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${s0(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function s0(s,e,t){if(s===1)return`${e}`;if(s===2)return`${e}.x, ${e}.y`;if(s===3)return`${e}.x, ${e}.y, ${e}.z`;if(s===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${s} is not yet supported`)}function n0(s,e,t){if(s===1)return`${e}`;if(s===2)return`${e}.y`;if(s===3)return`${e}.z`;if(s===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${s} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sv(s,e,t,n,o,r){const a=e.shape.length,i=et([n],a);let l=e;i!=null&&(l=Mt({inputs:{x:e},backend:t,attrs:{perm:i}}));const c=at(1,a)[0];if(c!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${n}`);const p=l.shape[c];let u=ls({inputs:{x:l},backend:t});for(let h=0;h<=Math.ceil(Math.log2(p))-1;h++){const d=new t0(s,l.shape,!1,r),m=[[h]],g=u;u=t.runWebGLProgram(d,[u],u.dtype,m),t.disposeIntermediateTensorInfo(g)}if(o){const h=new t0(s,l.shape,o,r),d=u;u=t.runWebGLProgram(h,[u],u.dtype),t.disposeIntermediateTensorInfo(d)}if(i!=null){const h=ao(i),d=Mt({inputs:{x:u},backend:t,attrs:{perm:h}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),d}return u}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,exclusive:a,reverse:i}=n;return sv(ka.Prod,o,t,r,a,i)}const BB={kernelName:Eh,backendName:"webgl",kernelFunc:jB};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,exclusive:a,reverse:i}=n;return sv(ka.Sum,o,t,r,a,i)}const VB={kernelName:oc,backendName:"webgl",kernelFunc:MB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,weights:r}=e,{size:a,binaryOutput:i}=n;if(o.shape.length===1){const l=t.readSync(o.dataId),c=t.readSync(r.dataId),p=P2(l,c,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,p)}else if(o.shape.length===2){const l=t.bufferSync(o),c=t.bufferSync(r),p=qP(l,c,a,i);return t.makeTensorInfo(p.shape,r.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const UB={kernelName:_h,backendName:"webgl",kernelFunc:WB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{blockSize:r,dataFormat:a}=n,i=o.shape[0],l=a==="NHWC"?o.shape[1]:o.shape[2],c=a==="NHWC"?o.shape[2]:o.shape[3],p=a==="NHWC"?o.shape[3]:o.shape[1],u=l*r,h=c*r,d=p/(r*r),m=a==="NHWC"?[i,u,h,d]:[i,d,u,h],g=new GB(m,r,a);return t.runWebGLProgram(g,[o],o.dtype)}const qB={kernelName:Dh,backendName:"webgl",kernelFunc:HB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nv{constructor(e,t=!1,n=null,o=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ft(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,l=e.outChannels/e.inChannels;let c="",p="";n&&(o?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${u}
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ov{constructor(e,t=!1,n=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ft(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,p=e.filterHeight,u=e.filterWidth,h=u;let d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<u;x++)d+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;d+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let x=0;x<u;x++)d+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(h+1)/2;x++){const y=x*2;if(d+=`
          xC = xCCorner + ${y*c};
          `,l===1){if(y<u&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,c===1&&y>0?d+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<u)){const w=i%2===0?gh(c):c;c%2===0&&i%2===1||c%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,c>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:d+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):w===1?d+=`
                    xC${y+1} = xTexelC${y};
                    `:d+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<u&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<u&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<u&&(d+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<u&&(d+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<u&&(d+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let m="",g="";n&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:m=`vec4 activation(vec4 x) {
          ${n}
        }`,g="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${m}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${f}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r}=e,{strides:a,pad:i,dilations:l,dimRoundingMode:c}=n;let p=l;p==null&&(p=[1,1]),$(Tt(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);const u=kt(o.shape,r.shape,a,p,i,c,!0);let h;L().getBool("WEBGL_PACK_DEPTHWISECONV")&&u.strideWidth<=2&&u.outChannels/u.inChannels===1?h=new ov(u):h=new nv(u);const d=[[u.padInfo.top,u.padInfo.left],[u.strideHeight,u.strideWidth],[u.dilationHeight,u.dilationWidth],[u.inHeight,u.inWidth]];return t.runWebGLProgram(h,[o,r],"float32",d)}const XB={kernelName:rc,backendName:"webgl",kernelFunc:KB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YB{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ZB{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,o=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,dy:r}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:c,filterShape:p}=n,u=kt(o.shape,p,a,i,l,c,!0),h=new YB(u);return t.runWebGLProgram(h,[o,r],"float32")}const QB={kernelName:Rh,backendName:"webgl",kernelFunc:JB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,filter:r}=e,{strides:a,dilations:i,pad:l,dimRoundingMode:c,inputShape:p}=n,u=kt(p,r.shape,a,i,l,c,!0),h=new ZB(u);return t.runWebGLProgram(h,[o,r],"float32")}const tM={kernelName:Oh,backendName:"webgl",kernelFunc:eM};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sM{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(s){const{inputs:e,backend:t}=s,{x:n}=e,o=[...n.shape,...n.shape],r=W(n.shape),a=te({inputs:{x:n},backend:t,attrs:{shape:[r]}}),i=new sM(r),l=t.runWebGLProgram(i,[a],a.dtype),c=te({inputs:{x:l},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const oM={kernelName:Fh,backendName:"webgl",kernelFunc:nM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:o,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:l,dilationHeight:c,dilationWidth:p}=e,{top:u,left:h}=o;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${u}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r}=e,{strides:a,pad:i,dilations:l}=n,c=wi(o.shape,r.shape,a,i,"NHWC",l);let p;const u=new rM(c);p=t.runWebGLProgram(u,[o,r],"float32");const h=te({inputs:{x:p},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(p),h}const iM={kernelName:ac,backendName:"webgl",kernelFunc:aM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(s){const{inputs:e,backend:t,attrs:n}=s,{equation:o}=n,r=e,{allDims:a,summedDims:i,idDims:l}=Am(o,r.length);Dm(a.length,l,r);const{path:c,steps:p}=Rm(i,l),u=p.length;let h=null,d=a.length;const m=[];for(let g=0;g<u;++g){for(const f of p[g]){const{permutationIndices:x,expandDims:y}=_m(d,l[f]);let w;Om(x)?w=r[f]:(w=Mt({inputs:{x:r[f]},backend:t,attrs:{perm:x}}),m.push(w));const b=w.shape.slice();for(let k=0;k<y.length;++k)b.splice(y[k],0,1);Se(w.shape,b)||(w=te({inputs:{x:w},backend:t,attrs:{shape:b}}),m.push(w)),h===null?h=w:(h=kf({inputs:{a:w,b:h},backend:t}),m.push(h))}g<u-1&&(c[g]>=0&&(h=Fp({inputs:{x:h},backend:t,attrs:{axis:c[g]-(a.length-d),keepDims:!1}}),m.push(h)),d--)}for(const g of m)g!==h&&t.disposeIntermediateTensorInfo(g);return h}const cM={kernelName:Ph,backendName:"webgl",kernelFunc:lM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pM="return (x >= 0.0) ? x : (exp(x) - 1.0);",uM=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,hM=_e({opSnippet:pM,packedOpSnippet:uM}),dM={kernelName:La,backendName:"webgl",kernelFunc:hM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mM="return (b >= 0.0) ? a : a * (b + 1.0);",fM=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,gM=s=>{const{inputs:e,backend:t}=s,{dy:n,y:o}=e,r=L().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Hr(fM,n.shape,o.shape):new Bo(mM,n.shape,o.shape);return t.runWebGLProgram(r,[n,o],n.dtype)},xM={kernelName:Lh,backendName:"webgl",kernelFunc:gM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yM=`
  return vec4(equal(a, b));
`,bM="return float(a == b);",wM=_t({opSnippet:bM,packedOpSnippet:yM,dtype:"bool",cpuKernelImpl:JP}),vM={kernelName:ic,backendName:"webgl",kernelFunc:wM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kM=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${$m};
  float a1 = ${Im};
  float a2 = ${Cm};
  float a3 = ${Nm};
  float a4 = ${Sm};
  float a5 = ${Tm};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,$M=_e({opSnippet:kM}),IM={kernelName:za,backendName:"webgl",kernelFunc:$M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CM=qr+`
  return exp(x);
`,NM=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rv=_e({opSnippet:CM,packedOpSnippet:NM,cpuKernelImpl:QP,dtype:"float32"}),SM={kernelName:ja,backendName:"webgl",kernelFunc:rv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mh(s){const{inputs:e,attrs:t,backend:n}=s,{dim:o}=t,{input:r}=e,a=r.shape.length,i=r.shape.slice();let l=o;return o<0&&($(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+o+1),i.splice(l,0,1),te({inputs:{x:r},backend:n,attrs:{shape:i}})}const TM={kernelName:lc,backendName:"webgl",kernelFunc:mh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o0="return exp(x) - 1.0;",EM=_e({opSnippet:o0,packedOpSnippet:o0,cpuKernelImpl:eL}),AM={kernelName:Ba,backendName:"webgl",kernelFunc:EM};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r0{constructor(e,t,n){this.variableNames=["real","imag"];const o=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${o}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function av(s,e,t){const n=t.texData.get(s.dataId),o=W(s.shape),r=s.shape[s.shape.length-1],a=o/r,i=te({inputs:{x:s},backend:t,attrs:{shape:[a,r]}}),l=i.shape,c=new r0("real",l,e),p=new r0("imag",l,e),u=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],h=t.runWebGLProgram(c,u,"float32"),d=t.runWebGLProgram(p,u,"float32"),m=ho({inputs:{real:h,imag:d},backend:t});t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d);const g=te({inputs:{x:m},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(m),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(s){const{inputs:e,backend:t}=s,{input:n}=e;return av(n,!1,t)}const DM={kernelName:zh,backendName:"webgl",kernelFunc:_M};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RM{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wi(s){const{backend:e,attrs:t}=s,{shape:n,value:o}=t;let{dtype:r}=t;if(r=r||Dr(o),r==="string"){const a=ot(r,W(n));return a.fill(o),e.makeTensorInfo(n,r,a)}else{const a=new RM(n,o),i=[[o]];return e.runWebGLProgram(a,[],r,i)}}const OM={kernelName:jh,backendName:"webgl",kernelFunc:Wi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FM{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PM={kernelName:Bh,backendName:"webgl",kernelFunc:({inputs:s,backend:e})=>{const{image:t}=s,n=e,o=new FM(t.shape);return n.runWebGLProgram(o,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a0="return floor(x);",LM=_e({opSnippet:a0,packedOpSnippet:a0,cpuKernelImpl:tL}),zM={kernelName:Ma,backendName:"webgl",kernelFunc:LM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jM=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,BM=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,MM=_t({opSnippet:jM,packedOpSnippet:BM,dtype:"int32"}),VM={kernelName:Va,backendName:"webgl",kernelFunc:MM};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WM{constructor(e){this.variableNames=["A"];const t=Wt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Wt(),[n,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GM={kernelName:du,backendName:"webgl",kernelFunc:HM};let nr,nu=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function HM(s){const{inputs:e,backend:t,attrs:n}=s;let{pixels:o}=e;const{numChannels:r}=n,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[l,c]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[c,l],u=[c,l,r];if(i||a){const g=L().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(nr==null||g!==nu)&&(nu=g,nr=document.createElement("canvas").getContext("2d",{willReadFrequently:nu})),nr.canvas.width=l,nr.canvas.height=c,nr.drawImage(o,0,0,l,c),o=nr.canvas}const h=t.makeTensorInfo(p,"int32");t.texData.get(h.dataId).usage=ms.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(h.dataId),o);const d=L().getBool("WEBGL_PACK")?new UM(u):new WM(u),m=t.runWebGLProgram(d,[h],"int32");return t.disposeData(h.dataId),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:l,pad:c,dataFormat:p,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:m}=n,g=Tn(p),f=kt(o.shape,r.shape,l,u,c,h,!1,g);let x;const y=[],w=a!=null,b=i!=null,k=d==="leakyrelu",I=()=>{const S=[o,r],T=(E,F)=>{if(F==="NCHW"&&E.shape.length===1&&E.shape[0]!==1){const z=te({inputs:{x:E},backend:t,attrs:{shape:[E.shape[0],1,1]}});return y.push(z),z}return E};if(w&&S.push(T(a,p)),b&&S.push(T(i,p)),k){const E=t.makeTensorInfo([],"float32",so(m,"float32"));S.push(E),y.push(E)}return S};if(f.filterHeight===1&&f.filterWidth===1&&f.dilationHeight===1&&f.dilationWidth===1&&f.strideHeight===1&&f.strideWidth===1&&(f.padInfo.type==="SAME"||f.padInfo.type==="VALID"))x=ev({x:o,filter:r,convInfo:f,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:m});else if(f.strideWidth<=2&&g==="channelsLast"&&L().getBool("WEBGL_EXP_CONV")){const S=d?wa(d,!0):null,T=new Q2(f,w,S,b,k),E=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]],F=I();x=t.runWebGLProgram(T,F,"float32",E)}else if(L().getBool("WEBGL_CONV_IM2COL"))x=tv({x:o,filter:r,convInfo:f,backend:t,bias:a,activation:d,preluActivationWeights:i,leakyreluAlpha:m});else{const S=d?wa(d,!1):null,T=new J2(f,w,S,b,k),E=I();x=t.runWebGLProgram(T,E,"float32")}const N=te({inputs:{x},backend:t,attrs:{shape:f.outShape}});return y.push(x),y.forEach(S=>t.disposeIntermediateTensorInfo(S)),N}const KM={kernelName:ml,backendName:"webgl",kernelFunc:qM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XM(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:l,pad:c,dilations:p,dimRoundingMode:u,activation:h,leakyreluAlpha:d}=n,m=[];let g=p;g==null&&(g=[1,1]),$(Tt(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const f=kt(o.shape,r.shape,l,g,c,u,!0),x=L().getBool("WEBGL_PACK_DEPTHWISECONV")&&f.strideWidth<=2&&f.outChannels/f.inChannels===1,y=h?wa(h,x):null,w=[o,r],b=a!=null,k=i!=null,I=h==="leakyrelu";if(b&&w.push(a),k&&w.push(i),I){const E=t.makeTensorInfo([],"float32",so(d,"float32"));w.push(E),m.push(E)}let N;x?N=new ov(f,b,y,k,I):N=new nv(f,b,y,k,I);const S=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]],T=t.runWebGLProgram(N,w,"float32",S);return m.forEach(E=>t.disposeIntermediateTensorInfo(E)),T}const YM={kernelName:fl,backendName:"webgl",kernelFunc:XM};class ZM{constructor(e,t,n,o){this.sliceDim=e,this.strides=t,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=n;const r=Pe(n.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(s){const{inputs:e,backend:t}=s,{params:n,indices:o}=e,r=o.shape,a=r[r.length-1],i=W(n.shape),[l,c,p,u]=hm(n,o),h=te({inputs:{x:o},backend:t,attrs:{shape:[c,a]}}),d=te({inputs:{x:n},backend:t,attrs:{shape:[W(n.shape)/p,p]}});if(t.shouldExecuteOnCPU([n,o])||n.dtype==="string"){const x=t.readSync(o.dataId),y=t.bufferSync(n),w=sL(x,y,n.dtype,c,a,p,u,n.shape,i);return t.makeTensorInfo(l,n.dtype,w.values)}const m=new ZM(a,u,[c,p],n.shape),g=t.runWebGLProgram(m,[d,h],d.dtype),f=te({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(g),f}const QM={kernelName:Mh,backendName:"webgl",kernelFunc:JM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eV{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Pe(this.rank),o=tV(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}}function tV(s,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<s.length;o++)o===2?n.push("index"):n.push(`${t[o]}`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iv(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,indices:r}=e,{axis:a,batchDims:i}=n,l=Ie(a,o.shape)[0];if(L().get("DEBUG")){const y=t.readSync(r.dataId),w=o.shape[l];for(let b=0;b<y.length;++b){const k=y[b];$(k<=w-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${w-1}]`)}}const c=Pm(o,r,l,i),p=W(r.shape),u=[],h=te({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=te({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,p/c.batchSize]}});u.push(h),u.push(d);const m=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([o,r])||o.dtype==="string"){const y=t.bufferSync(d),w=t.bufferSync(h),b=nL(w,y,m);return u.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.makeTensorInfo(c.outputShape,b.dtype,b.values)}const g=new eV(h.shape,m),f=t.runWebGLProgram(g,[h,d],h.dtype);u.push(f);const x=te({inputs:{x:f},backend:t,attrs:{shape:c.outputShape}});return u.forEach(y=>t.disposeIntermediateTensorInfo(y)),x}const sV={kernelName:pc,backendName:"webgl",kernelFunc:iv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV="return float(a > b);",oV=`
  return vec4(greaterThan(a, b));
`,rV=_t({opSnippet:nV,packedOpSnippet:oV,cpuKernelImpl:oL,dtype:"bool"}),aV={kernelName:uc,backendName:"webgl",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iV="return float(a >= b);",lV=`
  return vec4(greaterThanEqual(a, b));
`,cV=_t({opSnippet:iV,packedOpSnippet:lV,dtype:"bool",cpuKernelImpl:rL}),pV={kernelName:Wa,backendName:"webgl",kernelFunc:cV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(s){const{inputs:e,backend:t}=s,{input:n}=e;return av(n,!0,t)}const hV={kernelName:Vh,backendName:"webgl",kernelFunc:uV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dV="return float(!isnan(x) && !isinf(x));",mV=_e({opSnippet:dV,dtype:"bool"}),fV={kernelName:Ga,backendName:"webgl",kernelFunc:mV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gV="return float(isinf(x));",xV=_e({opSnippet:gV,dtype:"bool"}),yV={kernelName:Ha,backendName:"webgl",kernelFunc:xV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bV="return float(isnan(x));",wV=_e({opSnippet:bV,dtype:"bool"}),vV={kernelName:qa,backendName:"webgl",kernelFunc:wV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV="return float(a < b);",$V=`
  return vec4(lessThan(a, b));
`,IV=_t({opSnippet:kV,packedOpSnippet:$V,cpuKernelImpl:aL,dtype:"bool"}),CV={kernelName:dc,backendName:"webgl",kernelFunc:IV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NV="return float(a <= b);",SV=`
  return vec4(lessThanEqual(a, b));
`,TV=_t({opSnippet:NV,packedOpSnippet:SV,cpuKernelImpl:iL,dtype:"bool"}),EV={kernelName:mc,backendName:"webgl",kernelFunc:TV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(s){const{backend:e,attrs:t}=s,{start:n,stop:o,num:r}=t,a=lL(n,o,r);return e.makeTensorInfo([a.length],"float32",a)}const _V={kernelName:Uh,backendName:"webgl",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DV=qr+`
  return x < 0.0 ? 0./0. : log(x);
`,RV=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,OV=_e({opSnippet:DV,packedOpSnippet:RV,cpuKernelImpl:cL}),FV={kernelName:Ka,backendName:"webgl",kernelFunc:OV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PV=qr+`
  return log(1.0 + x);
`,LV=_e({opSnippet:PV}),zV={kernelName:Xa,backendName:"webgl",kernelFunc:LV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jV="return float(a >= 1.0 && b >= 1.0);",BV=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,MV=_t({opSnippet:jV,packedOpSnippet:BV,dtype:"bool"}),VV={kernelName:fc,backendName:"webgl",kernelFunc:MV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WV="return float(!(x >= 1.0));",UV=_e({opSnippet:WV}),GV={kernelName:gc,backendName:"webgl",kernelFunc:UV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV="return float(a >= 1.0 || b >= 1.0);",qV=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,KV=_t({opSnippet:HV,packedOpSnippet:qV,dtype:"bool"}),XV={kernelName:xc,backendName:"webgl",kernelFunc:KV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YV{constructor(e,t,n,o,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let l;const c=`float(${n}) + float(${o}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZV{constructor(e,t,n,o,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let l;const c=`float(${n}) + float(${o}) * sum`;r===.5?l=`inversesqrt(${c})`:r===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JV=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{depthRadius:r,bias:a,alpha:i,beta:l}=n,c=L().getBool("WEBGL_PACK_NORMALIZATION")?new ZV(o.shape,r,a,i,l):new YV(o.shape,r,a,i,l);return t.runWebGLProgram(c,[o],o.dtype)},QV={kernelName:yc,backendName:"webgl",kernelFunc:JV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eW{constructor(e,t,n,o,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=o,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tW=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:o,y:r,dy:a}=e,{depthRadius:i,bias:l,alpha:c,beta:p}=n,u=new eW(o.shape,i,l,c,p);return t.runWebGLProgram(u,[o,r,a],o.dtype)},sW={kernelName:Gh,backendName:"webgl",kernelFunc:tW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nW(s,e,t,n){const o=W(e),a=W(s.shape)/o,i=te({inputs:{x:s},attrs:{shape:[a,o]},backend:n}),l=er(i,s.dtype,"max",n),c=te({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lv(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{reductionIndices:r,keepDims:a}=n,i=o.shape.length,l=Ie(r,o.shape);let c=l;const p=et(c,i),u=p!=null,h=t.shouldExecuteOnCPU([o]);let d=o;if(u){if(h){const w=t.texData.get(d.dataId).values,b=new Array(i);for(let N=0;N<b.length;N++)b[N]=o.shape[p[N]];const k=wf(w,o.shape,o.dtype,p,b);d=t.makeTensorInfo(b,o.dtype);const I=t.texData.get(d.dataId);I.values=k}else d=Op(o,p,t);c=at(c.length,i)}Et("max",c,i);const[m,g]=$t(d.shape,c);let f=m;a&&(f=rt(m,l));let x;if(h){const w=t.texData.get(d.dataId).values,b=pL(w,W(g),f,o.dtype);x=t.makeTensorInfo(f,o.dtype);const k=t.texData.get(x.dataId);k.values=b}else x=nW(d,g,f,t);return u&&t.disposeIntermediateTensorInfo(d),x}const oW={kernelName:bc,backendName:"webgl",kernelFunc:lv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW=vf+`
  return max(a, b);
`,aW=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Qo+`
  return result;
`,iW=_t({opSnippet:rW,packedOpSnippet:aW,cpuKernelImpl:uL}),lW={kernelName:Ya,backendName:"webgl",kernelFunc:iW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cW(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e;Bi(o,"maxPool");const{filterSize:r,strides:a,pad:i,dimRoundingMode:l}=n,c=1;$(Tt(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const p=Ps(o.shape,r,a,c,i,l);if(p.filterWidth===1&&p.filterHeight===1&&Se(p.inShape,p.outShape))return ls({inputs:{x:o},backend:t});const u=new va(p,"max",!1);return t.runWebGLProgram(u,[o],o.dtype)}const pW={kernelName:wc,backendName:"webgl",kernelFunc:cW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uW(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{filterSize:r,strides:a,pad:i,dataFormat:l,dimRoundingMode:c}=n,p=[1,1,1],u=Sn(o.shape,r,a,p,i,c,l),h=new $f(u,"max",!1);return t.runWebGLProgram(h,[o],o.dtype)}const hW={kernelName:vc,backendName:"webgl",kernelFunc:uW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dW{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,o=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,l=a-1-e.padInfo.left,c=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class mW{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,o=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,u=l-1-e.padInfo.front,h=c-1-e.padInfo.top,d=p-1-e.padInfo.left,m=l*c*p-1;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${h}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${m} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,input:r}=e,a=r,{filterSize:i,strides:l,pad:c,dimRoundingMode:p}=n,u=[1,1,1],h=Sn(a.shape,i,l,u,c,p),d=new $f(h,"max",!0),m=t.runWebGLProgram(d,[a],a.dtype),g=new mW(h),f=t.runWebGLProgram(g,[o,m],a.dtype);return t.disposeIntermediateTensorInfo(m),f}const gW={kernelName:qh,backendName:"webgl",kernelFunc:fW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xW(s){const{inputs:e,backend:t,attrs:n}=s,{dy:o,input:r,output:a}=e,i=r;Bi([r,a],"maxPoolGrad");const{filterSize:l,strides:c,pad:p,dimRoundingMode:u}=n,h=Ps(i.shape,l,c,1,p,u),d=!0,m=new va(h,"max",d),g=t.runWebGLProgram(m,[i],i.dtype),f=new dW(h),x=t.runWebGLProgram(f,[o,g],i.dtype);return t.disposeIntermediateTensorInfo(g),x}const yW={kernelName:Hh,backendName:"webgl",kernelFunc:xW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bW(s,e,t,n){let o=new va(t,"max",!1);const r=n.runWebGLProgram(o,[s],"float32");o=new va(t,"max",!0,!0,e);const a=n.runWebGLProgram(o,[s],"float32");return[r,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wW={kernelName:Kh,backendName:"webgl",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{x:n}=s,{filterSize:o,strides:r,pad:a,includeBatchInIndex:i}=e,l=t;$(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);const c=[1,1];$(Tt(r,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${c}'`);const p=Ps(n.shape,o,r,c,a),[u,h]=bW(n,i,p,l);return[u,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vW(s,e,t,n){const o=W(e),a=W(s.shape)/o,i=te({inputs:{x:s},attrs:{shape:[a,o]},backend:n}),l=er(i,"float32","mean",n),c=te({inputs:{x:l},attrs:{shape:t},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kW={kernelName:kc,backendName:"webgl",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{x:n}=s,{keepDims:o,axis:r}=e,a=t,i=n.shape.length,l=Ie(r,n.shape);let c=l;const p=et(c,i),u=p!=null,h=a.shouldExecuteOnCPU([n]),d=[];let m=n;if(u){if(h){const b=a.texData.get(m.dataId).values,k=new Array(i);for(let S=0;S<k.length;S++)k[S]=n.shape[p[S]];const I=wf(b,n.shape,n.dtype,p,k);m=a.makeTensorInfo(k,n.dtype);const N=a.texData.get(m.dataId);N.values=I}else m=Op(n,p,a);d.push(m),c=at(c.length,i)}Et("sum",c,i);const[g,f]=$t(m.shape,c);let x=g;o&&(x=rt(g,l));const y=vW(m,f,x,a);for(const w of d)a.disposeIntermediateTensorInfo(w);return y}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $W(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n,i=o.shape.length,l=Ie(r,o.shape);let c=l;const p=et(c,i);let u=o;p!=null&&(u=Mt({inputs:{x:o},backend:t,attrs:{perm:p}}),c=at(c.length,o.shape.length)),Et("min",c,i);const[h,d]=$t(u.shape,c),m=W(d),g=te({inputs:{x:u},backend:t,attrs:{shape:[-1,m]}}),f=er(g,g.dtype,"min",t);let x;if(a){const y=rt(h,l);x=te({inputs:{x:f},backend:t,attrs:{shape:y}})}else x=te({inputs:{x:f},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(f),p!=null&&t.disposeIntermediateTensorInfo(u),x}const IW={kernelName:$c,backendName:"webgl",kernelFunc:$W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CW=vf+`
  return min(a, b);
`,NW=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Qo+`
  return result;
`,SW=_t({opSnippet:CW,packedOpSnippet:NW,cpuKernelImpl:hL}),TW={kernelName:Za,backendName:"webgl",kernelFunc:SW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EW{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((p,u)=>p[0]+e[u]+p[1]);const o=e.length,r=Pe(o),a=t.map(p=>p[0]).join(","),i=t.map((p,u)=>p[0]+e[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),c=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AW{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const o=e.length,r=Pe(o),a=t.map(m=>m[0]).join(","),i=t.map((m,g)=>m[0]+e[g]).join(","),l=jt("rc",o),c=jt("source",o),p=`${l[o-1]} < ${this.outputShape[o-1]}`,u=o===1?"source":`vec2(${c.slice(-2).join()})`,h=n==="reflect"?0:1;let d="";if(o===1){const m=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${u});
        ${l[o-1]} += 1;
        if(${p}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${u});
        }
      `}else{const m=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${m}
        result[0] = getChannel(getX(${c.join()}), ${u});
        ${l[o-1]} += 1;
        if(${p}) {
          ${m}
          result[1] = getChannel(getX(${c.join()}), ${u});
        }
        rc = outputLoc;
        ${l[o-2]} += 1;
        if(${l[o-2]} < ${this.outputShape[o-2]}) {
          ${m}
          result[2] = getChannel(getX(${c.join()}), ${u});
          ${l[o-1]} += 1;
          if(${p}) {
            ${m}
            result[3] = getChannel(getX(${c.join()}), ${u});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W=({inputs:s,backend:e,attrs:t})=>{const{x:n}=s,{paddings:o,mode:r}=t,a=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AW(n.shape,o,r):new EW(n.shape,o,r);return e.runWebGLProgram(a,[n],n.dtype)},DW={kernelName:Ic,backendName:"webgl",kernelFunc:_W};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW=`if (b == 0.0) return NAN;
  return mod(a, b);`,OW=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Qo+`
  return result;
`,FW=_t({opSnippet:RW,packedOpSnippet:OW}),PW={kernelName:Ja,backendName:"webgl",kernelFunc:FW};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LW{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zW=`
if (a == b) {
  return 1.0;
};
return a / b;`,jW=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,cv=_t({opSnippet:zW,packedOpSnippet:jW,checkOutOfBounds:!0}),BW={kernelName:Pa,backendName:"webgl",kernelFunc:cv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i0="return a - b;",pv=_t({opSnippet:i0,packedOpSnippet:i0,supportsComplex:!0,cpuKernelImpl:RL}),MW={kernelName:mi,backendName:"webgl",kernelFunc:pv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uv(s){const{inputs:e,backend:t,attrs:n}=s,{logits:o}=e,{dim:r}=n,a=Ie([r],o.shape),i=lv({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),l=rt(i.shape,a),c=te({inputs:{x:i},backend:t,attrs:{shape:l}}),p=pv({inputs:{a:o,b:c},backend:t}),u=rv({inputs:{x:p},backend:t}),h=Fp({inputs:{x:u},backend:t,attrs:{axis:a,keepDims:!1}}),d=te({inputs:{x:h},backend:t,attrs:{shape:l}}),m=cv({inputs:{a:u,b:d},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),m}const VW={kernelName:Vc,backendName:"webgl",kernelFunc:uv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WW(s){const{inputs:e,backend:t,attrs:n}=s,{logits:o}=e,{numSamples:r,seed:a,normalized:i}=n,l=i?o:uv({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),c=l.shape[0],p=l.shape[1],u=new LW(c,p,r),h=[[a]],d=t.runWebGLProgram(u,[l],"int32",h);return i||t.disposeIntermediateTensorInfo(l),d}const UW={kernelName:Xh,backendName:"webgl",kernelFunc:WW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GW=zs+`
  return -x;
`,HW=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function qW(s){const{inputs:e,backend:t}=s,{x:n}=e;if(t.shouldExecuteOnCPU([n])){const r=t.texData.get(n.dataId),[a,i]=mL(r.values,n.shape,n.dtype);return t.makeTensorInfo(i,n.dtype,a)}let o;return L().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new jn(n.shape,HW):o=new on(n.shape,GW),t.runWebGLProgram(o,[n],n.dtype)}const KW={kernelName:Cc,backendName:"webgl",kernelFunc:qW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW=rm;function YW(s){ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:n}=s,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l}=n,c=t.readSync(o.dataId),p=t.readSync(r.dataId),{selectedIndices:u}=XW(c,p,a,i,l);return t.makeTensorInfo([u.length],"int32",new Int32Array(u))}const ZW={kernelName:Yh,backendName:"webgl",kernelFunc:YW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JW=am;function QW(s){ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:n}=s,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,padToMaxOutputSize:c}=n,p=t.readSync(o.dataId),u=t.readSync(r.dataId),{selectedIndices:h,validOutputs:d}=JW(p,u,a,i,l,c);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([d]))]}const eU={kernelName:Zh,backendName:"webgl",kernelFunc:QW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tU=im;function sU(s){ds("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:n}=s,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:l,softNmsSigma:c}=n,p=t.readSync(o.dataId),u=t.readSync(r.dataId),h=a,d=i,m=l,g=c,{selectedIndices:f,selectedScores:x}=tU(p,u,h,d,m,g);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([x.length],"float32",new Float32Array(x))]}const nU={kernelName:Jh,backendName:"webgl",kernelFunc:sU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oU{constructor(e,t,n,o){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rU=s=>{const{inputs:e,backend:t,attrs:n}=s,{indices:o}=e,{dtype:r,depth:a,onValue:i,offValue:l}=n,c=W(o.shape),p=new oU(c,a,i,l),u=te({inputs:{x:o},backend:t,attrs:{shape:[c]}}),h=t.runWebGLProgram(p,[u],r);t.disposeIntermediateTensorInfo(u);const d=[...o.shape,a],m=te({inputs:{x:h},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(h),m},aU={kernelName:Tc,backendName:"webgl",kernelFunc:rU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vl(s){const{inputs:e,backend:t}=s,{x:n}=e;if(n.dtype==="complex64"){const o=Vi({inputs:{input:n},backend:t}),r=Vl({inputs:{x:o},backend:t}),a=Pp({inputs:{input:n},backend:t}),i=Vl({inputs:{x:a},backend:t}),l=ho({inputs:{real:r,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return Wi({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:t})}const iU={kernelName:Hc,backendName:"webgl",kernelFunc:Vl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(s){const{inputs:e,backend:t}=s,{x:n}=e;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){const o=Vi({inputs:{input:n},backend:t}),r=hv({inputs:{x:o},backend:t}),a=Pp({inputs:{input:n},backend:t}),i=Vl({inputs:{x:a},backend:t}),l=ho({inputs:{real:r,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),l}else return Wi({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:t})}const lU={kernelName:Sc,backendName:"webgl",kernelFunc:hv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cU(s){const{inputs:e,backend:t,attrs:n}=s,{axis:o}=n;if(e.length===1)return mh({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const r=e[0].shape,a=e[0].dtype;e.forEach(p=>{cs(r,p.shape,"All tensors passed to stack must have matching shapes"),$(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],l=e.map(p=>{const u=mh({inputs:{input:p},backend:t,attrs:{dim:o}});return i.push(u),u}),c=Z2({inputs:l,backend:t,attrs:{axis:o}});return i.forEach(p=>t.disposeIntermediateTensorInfo(p)),c}const pU={kernelName:Ec,backendName:"webgl",kernelFunc:cU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uU{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,p)=>c[0]+e[p]+c[1]);const o=e.length,r=Pe(o),a=t.map(c=>c[0]).join(","),i=t.map((c,p)=>c[0]+e[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hU{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,f)=>g[0]+e[f]+g[1]);const o=e.length,r=Pe(o),a=t.map(g=>g[0]).join(","),i=t.map((g,f)=>g[0]+e[f]).join(","),l=jt("rc",o),c=jt("source",o),p=`${l[o-1]} < ${this.outputShape[o-1]}`,u=o===1?"source":`vec2(${c.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${l[o-1]} += 1;
       if(${p}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${l[o-2]} += 1;
       if(${l[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${l[o-1]} += 1;
         if(${p}) {`],d=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let m="";for(let g=0,f=o===1?2:4;g<f;g++)m+=`
        ${h[g]}
        if (${d}) {
          result[${g}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${g}] = getChannel(getX(${c.join()}), ${u});
        }
      `;m+=o===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dv=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{paddings:r,constantValue:a}=n;if(W(o.shape)===0){const c=r.map((p,u)=>p[0]+o.shape[u]+p[1]);return Wi({backend:t,attrs:{shape:c,value:a,dtype:o.dtype}})}const i=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hU(o.shape,r,a):new uU(o.shape,r,a),l=[[a]];return t.runWebGLProgram(i,[o],o.dtype,l)},dU={kernelName:Ac,backendName:"webgl",kernelFunc:dv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mU=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,fU=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Qo+`
  return result;
`,gU=_t({opSnippet:mU,packedOpSnippet:fU}),xU={kernelName:ei,backendName:"webgl",kernelFunc:gU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yU(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{axis:r,keepDims:a}=n,i=o.shape.length,l=[],c=Ie(r,o.shape);let p=c;const u=et(p,i);let h=o;u!=null&&(h=Mt({inputs:{x:o},backend:t,attrs:{perm:u}}),p=at(p.length,i),l.push(h)),Et("prod",p,i);let d;if(t.shouldExecuteOnCPU([h])){const m=t.texData.get(h.dataId).values,{outVals:g,outShape:f,outDtype:x}=gL(h.shape,h.dtype,m,p);d=t.makeTensorInfo(f,x,g)}else{const[m,g]=$t(h.shape,p),f=W(g),x=te({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}}),y=Id(o.dtype),w=er(x,y,"prod",t);d=te({inputs:{x:w},backend:t,attrs:{shape:m}}),l.push(x),l.push(w)}if(a){l.push(d);const m=rt(d.shape,c);d=te({inputs:{x:d},backend:t,attrs:{shape:m}})}return l.forEach(m=>t.disposeIntermediateTensorInfo(m)),d}const bU={kernelName:Dc,backendName:"webgl",kernelFunc:yU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(s){const{inputs:e,backend:t,attrs:n}=s,{paramsNestedSplits:o,paramsDenseValues:r,indices:a}=e,{outputRaggedRank:i}=n,l=o.map(x=>t.readSync(x.dataId)),c=o.map(x=>x.shape),p=t.readSync(r.dataId),u=t.readSync(a.dataId),[h,d,m]=xL(l,c,p,r.shape,r.dtype,u,a.shape,i),g=h.map(x=>t.makeTensorInfo([x.length],"int32",x)),f=t.makeTensorInfo(m,r.dtype,d);return g.concat([f])}const vU={kernelName:Qh,backendName:"webgl",kernelFunc:wU};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(s){const{inputs:e,backend:t}=s,{starts:n,limits:o,deltas:r}=e,a=t.readSync(n.dataId),i=t.readSync(o.dataId),l=t.readSync(r.dataId),[c,p]=yL(a,n.shape,n.dtype,i,o.shape,l,r.shape),u=t.makeTensorInfo([c.length],"int32",c),h=t.makeTensorInfo([p.length],n.dtype,p);return[u,h]}const $U={kernelName:ed,backendName:"webgl",kernelFunc:kU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IU(s){const{inputs:e,backend:t,attrs:n}=s,{shape:o,values:r,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:l}=n,c=t.readSync(o.dataId),p=t.readSync(r.dataId),u=t.readSync(a.dataId),h=i.map(f=>t.readSync(f.dataId)),d=i.map(f=>f.shape),[m,g]=bL(c,o.shape,p,r.shape,r.dtype,u,a.shape,h,d,l);return t.makeTensorInfo(m,r.dtype,g)}const CU={kernelName:td,backendName:"webgl",kernelFunc:IU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mv=s=>{const{backend:e,attrs:t}=s,{start:n,stop:o,step:r,dtype:a}=t,i=wL(n,o,r,a);return e.makeTensorInfo([i.length],a,i)},NU={kernelName:sd,backendName:"webgl",kernelFunc:mv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SU="return 1.0 / x;",TU=_e({opSnippet:SU}),EU={kernelName:ti,backendName:"webgl",kernelFunc:TU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU=zs+`
  return (x < 0.0) ? 0.0 : x;
`,_U=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,DU=_e({opSnippet:AU,packedOpSnippet:_U}),RU={kernelName:si,backendName:"webgl",kernelFunc:DU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OU=zs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,FU=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,PU=_e({opSnippet:OU,packedOpSnippet:FU}),LU={kernelName:ni,backendName:"webgl",kernelFunc:PU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zU{constructor(e,t,n,o,r){this.variableNames=["A"],this.outputShape=[];const[a,i,l,c]=e;this.outputShape=[a,t,n,c];const p=[o&&t>1?i-1:i,o&&n>1?l-1:l],u=[o&&t>1?t-1:t,o&&n>1?n-1:n];let h;r?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/u[0]},
          ${p[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jU{constructor(e,t,n,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,l,c]=e;this.outputShape=[a,t,n,c];const p=[o&&t>1?i-1:i,o&&n>1?l-1:l],u=[o&&t>1?t-1:t,o&&n>1?n-1:n];let h;r?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/u[0]},
          ${p[1]/u[1]},
          ${p[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(s){const{inputs:e,backend:t,attrs:n}=s,{images:o}=e,{alignCorners:r,halfPixelCenters:a,size:i}=n,[l,c]=i,p=L().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new jU(o.shape,l,c,r,a):new zU(o.shape,l,c,r,a);return t.runWebGLProgram(p,[o],"float32")}const MU={kernelName:Fc,backendName:"webgl",kernelFunc:BU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VU{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,r]=t,[,a,i]=e,l=[n&&a>1?o-1:o,n&&i>1?r-1:r],c=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=l[0]/c[0],u=l[1]/c[1],h=1/p,d=1/u,m=Math.ceil(h)*2+2,g=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${u});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WU(s){const{inputs:e,backend:t,attrs:n}=s,{images:o,dy:r}=e,{alignCorners:a}=n,i=new VU(r.shape,o.shape,a);return t.runWebGLProgram(i,[r],r.dtype)}const UU={kernelName:rd,backendName:"webgl",kernelFunc:WU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GU{constructor(e,t,n,o,r){this.variableNames=["A"],this.outputShape=[];const[a,i,l,c]=e;this.outputShape=[a,t,n,c];const p=[o&&t>1?i-1:i,o&&n>1?l-1:l],u=[o&&t>1?t-1:t,o&&n>1?n-1:n],h=o?"0.5":"0.0";let d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/u[0]},
          ${p[1]/u[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HU{constructor(e,t,n,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,l,c]=e;this.outputShape=[a,t,n,c];const p=[o&&t>1?i-1:i,o&&n>1?l-1:l],u=[o&&t>1?t-1:t,o&&n>1?n-1:n],h=o?"0.5":"0.0";let d;r?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/u[0]},
          ${p[1]/u[1]},
          ${p[1]/u[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qU(s){const{inputs:e,backend:t,attrs:n}=s,{images:o}=e,{alignCorners:r,halfPixelCenters:a,size:i}=n,[l,c]=i,p=L().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new HU(o.shape,l,c,r,a):new GU(o.shape,l,c,r,a);return t.runWebGLProgram(p,[o],o.dtype)}const KU={kernelName:Oc,backendName:"webgl",kernelFunc:qU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XU{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,r]=t,[,a,i]=e,l=[n&&a>1?o-1:o,n&&i>1?r-1:r],c=[n&&a>1?a-1:a,n&&i>1?i-1:i],p=l[0]/c[0],u=l[1]/c[1],h=1/p,d=1/u,m=Math.ceil(h)*2+2,g=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${u});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${m});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YU(s){const{inputs:e,backend:t,attrs:n}=s,{images:o,dy:r}=e,{alignCorners:a}=n,i=new XU(r.shape,o.shape,a);return t.runWebGLProgram(i,[r],r.dtype)}const ZU={kernelName:od,backendName:"webgl",kernelFunc:YU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JU{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,l)=>o(l)).join(","),a=Pe(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QU{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const o=jt("rc",n),r=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Pe(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(o.slice())};
          if(${r}){
            result.g = ${c(o.slice())};
          }
          if(${a}) {
            result.b = ${p(o.slice())};
            if(${r}) {
              result.a = ${u(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(m){return h(m)}function c(m){return m[n-1]="("+m[n-1]+" + 1)",h(m)}function p(m){return m[n-2]="("+m[n-2]+" + 1)",h(m)}function u(m){return m[n-1]="("+m[n-1]+" + 1)",m[n-2]="("+m[n-2]+" + 1)",h(m)}function h(m){const g=e.map((y,w)=>d(w,m)),f=g.join(","),x=g.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${x}))`}function d(m,g){return t.indexOf(m)!==-1&&e[m]!==1?`${e[m]} - ${g[m]} - 1`:`${g[m]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{dims:r}=n,a=o.shape.length,i=Ie(r,o.shape);if(a===0)return ls({inputs:{x:o},backend:t});const l=L().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new QU(o.shape,i):new JU(o.shape,i);return t.runWebGLProgram(l,[o],o.dtype)}const tG={kernelName:Pc,backendName:"webgl",kernelFunc:eG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sG{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],o=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nG={kernelName:kd,backendName:"webgl",kernelFunc:({inputs:s,attrs:e,backend:t})=>{const{image:n}=s,{radians:o,fillValue:r,center:a}=e,i=t,l=new sG(n.shape,r),[c,p]=wm(a,n.shape[1],n.shape[2]),u=[[c,p,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(l,[n],n.dtype,u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oG=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,rG=_e({opSnippet:oG}),aG={kernelName:oi,backendName:"webgl",kernelFunc:rG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG="return inversesqrt(x);",lG=_e({opSnippet:iG,cpuKernelImpl:vL}),cG={kernelName:ri,backendName:"webgl",kernelFunc:lG};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class If{constructor(e,t,n,o,r,a,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=Pe(r.length),p=Pe(a.length);let u="";n===1?u="i":n===2&&(u="i, j");const h=`getIndices(${u})`;let d="";o===1?d="i":o===2&&(d="i, coords[1]");const m=`getUpdates(${d})`;let g="";l&&(g="coords[0], coords[1]");const f=`getDefaultValue(${g})`,x=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${r});

        void main() {
          ${p} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${m};
              found = true;
            }
          }
          setOutput(mix(${f}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pG{constructor(e,t,n,o,r,a,i=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const c=Pe(r.length),p=Pe(a.length);let u="";n===1?u="i":n===2&&(u="i, j");const h=`getIndices(${u})`;let d="";o===1?d="i":o===2&&(d="i, coords[1]");const m=`getUpdates(${d})`;let g="";l&&(g="coords[0], coords[1]");const f=`getDefaultValue(${g})`,x=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${r});

        void main() {
          ${p} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${m};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${f}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uG(s){const{inputs:e,backend:t,attrs:n}=s,{indices:o,updates:r}=e,{shape:a}=n,{sliceRank:i,numUpdates:l,sliceSize:c,strides:p,outputSize:u}=Ko(r,o,a),h=[u/c,c];if(u===0)return t.makeTensorInfo(a,o.dtype);const d=te({inputs:{x:o},backend:t,attrs:{shape:[l,i]}}),m=te({inputs:{x:r},backend:t,attrs:{shape:[l,c]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0]));let f;L().getBool("WEBGL_PACK")?f=new pG(l,i,d.shape.length,m.shape.length,p,h):f=new If(l,i,d.shape.length,m.shape.length,p,h);const x=t.runWebGLProgram(f,[m,d,g],m.dtype),y=te({inputs:{x},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),y}const hG={kernelName:ad,backendName:"webgl",kernelFunc:uG};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dG{constructor(e,t,n,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=L().getNumber("WEBGL_VERSION")===2?r:a,l=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mG(s){const{inputs:e,backend:t,attrs:n}=s,{sortedSequence:o,values:r}=e,{side:a}=n,i=new dG(o.shape[0],o.shape[1],r.shape[1],a),l=[[o.shape[1]]];return t.runWebGLProgram(i,[o,r],"int32",l)}const fG={kernelName:ld,backendName:"webgl",kernelFunc:mG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gG{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let o,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",o="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let p=0;p<t.length;p++)c.push(`${i[p]}`),p<e&&l.push(`${i[p]}`);o=l.join(),r=c.join()}const a=Pe(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(s){const{inputs:e,backend:t}=s,{condition:n,t:o,e:r}=e,a=new gG(n.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[n,o,r],ns(o.dtype,r.dtype))}const yG={kernelName:Lc,backendName:"webgl",kernelFunc:xG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bG=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${yp};
  float scale = ${bp};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,wG=_e({opSnippet:bG}),vG={kernelName:ai,backendName:"webgl",kernelFunc:wG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kG=qr+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,$G=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,IG=_e({opSnippet:kG,packedOpSnippet:$G,cpuKernelImpl:$L}),CG={kernelName:pi,backendName:"webgl",kernelFunc:IG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NG=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,SG=_e({opSnippet:NG}),TG={kernelName:ci,backendName:"webgl",kernelFunc:SG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EG=qr+`
  return sin(x);
`,AG=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Qo}
  return result;
`,_G=_e({opSnippet:EG,packedOpSnippet:AG}),DG={kernelName:ii,backendName:"webgl",kernelFunc:_G};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RG=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,OG=_e({opSnippet:RG}),FG={kernelName:li,backendName:"webgl",kernelFunc:OG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PG=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,LG=_e({opSnippet:PG}),zG={kernelName:ui,backendName:"webgl",kernelFunc:LG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG=s=>{const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{blockShape:r,paddings:a}=n;$(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=r.reduce((x,y)=>x*y),l=[[0,0]];l.push(...a);for(let x=1+r.length;x<o.shape.length;++x)l.push([0,0]);const c=[],p=dv({inputs:{x:o},backend:t,attrs:{paddings:l,constantValue:0}}),u=Si(p.shape,r,i,!1),h=Ti(u.length,r.length,!1),d=Ei(p.shape,r,i,!1),m=te({inputs:{x:p},backend:t,attrs:{shape:u}}),g=Mt({inputs:{x:m},backend:t,attrs:{perm:h}}),f=te({inputs:{x:g},backend:t,attrs:{shape:d}});return c.push(p),c.push(m),c.push(g),c.forEach(x=>t.disposeIntermediateTensorInfo(x)),f},BG={kernelName:Bc,backendName:"webgl",kernelFunc:jG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(s){const{inputs:e,backend:t}=s,{indices:n,values:o,denseShape:r,defaultValue:a}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.readSync(n.dataId),l=t.readSync(o.dataId),c=t.readSync(r.dataId),p=t.readSync(a.dataId)[0],[u,h,d,m,g]=CL(i,n.shape,n.dtype,l,o.dtype,c,p);return[t.makeTensorInfo(h,n.dtype,u),t.makeTensorInfo([h[0]],o.dtype,d),t.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(f=>Number(f)))),t.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}const VG={kernelName:cd,backendName:"webgl",kernelFunc:MG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(s){const{inputs:e,backend:t}=s,{inputIndices:n,inputShape:o,newShape:r}=e;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const a=Array.from(t.readSync(o.dataId)),i=t.readSync(n.dataId),l=Array.from(t.readSync(r.dataId)),[c,p,u]=NL(i,n.shape,n.dtype,a,l);return[t.makeTensorInfo(p,n.dtype,c),t.makeTensorInfo([u.length],r.dtype,new Int32Array(u))]}const UG={kernelName:pd,backendName:"webgl",kernelFunc:WG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(s){const{inputs:e,backend:t}=s,{data:n,indices:o,segmentIds:r}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const a=t.readSync(n.dataId),i=t.readSync(o.dataId),l=t.readSync(r.dataId),[c,p]=z2(a,n.shape,n.dtype,i,l,!0);return t.makeTensorInfo(p,n.dtype,c)}const HG={kernelName:ud,backendName:"webgl",kernelFunc:GG};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qG(s){const{inputs:e,backend:t}=s,{data:n,indices:o,segmentIds:r}=e;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const a=t.readSync(n.dataId),i=t.readSync(o.dataId),l=t.readSync(r.dataId),[c,p]=z2(a,n.shape,n.dtype,i,l);return t.makeTensorInfo(p,n.dtype,c)}const KG={kernelName:hd,backendName:"webgl",kernelFunc:qG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XG(s){const{inputs:e,backend:t,attrs:n}=s,{sparseIndices:o,sparseValues:r,defaultValue:a}=e,{outputShape:i}=n,{sliceRank:l,numUpdates:c,sliceSize:p,strides:u,outputSize:h}=Ko(r,o,i),d=!1;if(r.dtype==="string"){const x=t.bufferSync(o),y=t.bufferSync(r),w=Gn(t.readSync(a.dataId)[0]),b=kL(x,y,i,h,p,c,l,u,w,d);return t.makeTensorInfo(i,b.dtype,b.values)}const m=new If(c,l,o.shape.length,r.shape.length,u,[h,1],d),g=t.runWebGLProgram(m,[r,o,a],r.dtype),f=te({inputs:{x:g},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(g),f}const YG={kernelName:dd,backendName:"webgl",kernelFunc:XG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZG(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{numOrSizeSplits:r,axis:a}=n,i=Ie(a,o.shape)[0],l=Fm(o,r,i),c=o.shape.length,p=new Array(c).fill(0),u=o.shape.slice();return l.map(h=>{const d=[...u];d[i]=h;const m=Kr({inputs:{x:o},backend:t,attrs:{begin:p,size:d}});return p[i]+=h,m})}const JG={kernelName:Mc,backendName:"webgl",kernelFunc:ZG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l0="return sqrt(x);",QG=_e({opSnippet:l0,packedOpSnippet:l0,cpuKernelImpl:SL}),eH={kernelName:hi,backendName:"webgl",kernelFunc:QG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tH="return x * x;",sH=_e({opSnippet:tH}),nH={kernelName:md,backendName:"webgl",kernelFunc:sH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c0="return (a - b) * (a - b);",oH=_t({opSnippet:c0,packedOpSnippet:c0}),rH={kernelName:di,backendName:"webgl",kernelFunc:oH};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aH(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");const r=t.readSync(o.dataId),a=Nn(r),i=TL(a,"string",n);return t.makeTensorInfo(o.shape,"string",i)}const iH={kernelName:Wc,backendName:"webgl",kernelFunc:aH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lH({inputs:s,attrs:e,backend:t}){const{x:n}=s,o=zs+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new on(n.shape,o);return t.runWebGLProgram(r,[n],n.dtype)}const cH={kernelName:yi,backendName:"webgl",kernelFunc:lH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pH{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const o=n.length,r=Pe(n.length),a=Pe(n.length);let i="";if(o===1)i="coords * strides + begin";else{let l=0;i=n.map((c,p)=>(l++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${l-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{begin:r,end:a,strides:i,beginMask:l,endMask:c,ellipsisMask:p,newAxisMask:u,shrinkAxisMask:h}=n,{finalShapeSparse:d,finalShape:m,isIdentity:g,sliceDim0:f,isSimpleSlice:x,begin:y,end:w,strides:b}=xm(o.shape,r,a,i,l,c,p,u,h);let k;if(g)k=te({inputs:{x:o},backend:t,attrs:{shape:m}});else if(f||x){$(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const N=mm(y,w,b),S=Kr({inputs:{x:o},backend:t,attrs:{begin:y,size:N}});k=te({inputs:{x:S},backend:t,attrs:{shape:m}}),t.disposeIntermediateTensorInfo(S)}else if(t.shouldExecuteOnCPU([o])){const S=t.readSync(o.dataId),T=ke(o.shape,o.dtype,S),E=EL(d,T,b,y);k=t.makeTensorInfo(m,o.dtype,E.values)}else{const S=new pH(y,b,d);k=t.runWebGLProgram(S,[o],o.dtype)}const I=te({inputs:{x:k},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(k),I}const hH={kernelName:fd,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dH(s){const{inputs:e,backend:t,attrs:n}=s,{separator:o,nGramWidths:r,leftPad:a,rightPad:i,padWidth:l,preserveShortSequences:c}=n,{data:p,dataSplits:u}=e,h=t.readSync(p.dataId),d=t.readSync(u.dataId),[m,g]=AL(h,d,o,r,a,i,l,c);return[t.makeTensorInfo([m.length],"string",m),t.makeTensorInfo(u.shape,"int32",g)]}const mH={kernelName:gd,backendName:"webgl",kernelFunc:dH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(s){const{inputs:e,backend:t,attrs:n}=s,{skipEmpty:o}=n,{input:r,delimiter:a}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.readSync(r.dataId),l=t.readSync(a.dataId)[0],[c,p,u]=_L(i,l,o),h=p.length;return[t.makeTensorInfo([h,2],"int32",c),t.makeTensorInfo([h],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(u))]}const gH={kernelName:xd,backendName:"webgl",kernelFunc:fH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(s){const{inputs:e,backend:t,attrs:n}=s,{numBuckets:o}=n,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(r.dataId),i=DL(a,o);return t.makeTensorInfo(r.shape,"int32",i)}const yH={kernelName:yd,backendName:"webgl",kernelFunc:xH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH="return tan(x);",wH=_e({opSnippet:bH}),vH={kernelName:fi,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kH=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,$H=_e({opSnippet:kH}),IH={kernelName:gi,backendName:"webgl",kernelFunc:$H};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(s){const{inputs:e,backend:t,attrs:n}=s,{tensor:o,indices:r,updates:a}=e,{sliceRank:i,numUpdates:l,sliceSize:c,strides:p,outputSize:u}=Ko(a,r,o.shape),h=[u/c,c];if(u===0)return t.makeTensorInfo(o.shape,r.dtype);const d=te({inputs:{x:r},backend:t,attrs:{shape:[l,i]}}),m=te({inputs:{x:a},backend:t,attrs:{shape:[l,c]}}),g=te({inputs:{x:o},backend:t,attrs:{shape:h}}),f=new If(l,i,d.shape.length,m.shape.length,p,h,!1,!0),x=t.runWebGLProgram(f,[m,d,g],g.dtype),y=te({inputs:{x},backend:t,attrs:{shape:o.shape}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),y}const NH={kernelName:id,backendName:"webgl",kernelFunc:CH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SH{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const o=Pe(this.rank),r=TH(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function TH(s){const e=s.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${s[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<s.length;o++)n.push(`imod(${t[o]}, ${s[o]})`);return n.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fv(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{reps:r}=n;if(o.dtype==="string"||o.shape.length>5){const l=t.readSync(o.dataId),c=o.dtype==="string"?l.map(h=>Gn(h)):l,p=ke(o.shape,o.dtype,c),u=OL(p,r);return t.makeTensorInfo(u.shape,u.dtype,u.values)}const a=new SH(o.shape,r);return t.runWebGLProgram(a,[o],o.dtype)}const EH={kernelName:xi,backendName:"webgl",kernelFunc:fv};class AH{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class _H{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xo(s,e){e!==null&&s.disposeIntermediateTensorInfo(e)}function p0(s){let e=1;for(;e<s;)e*=2;return e}function DH(s){const{inputs:e,backend:t,attrs:n}=s,{x:o}=e,{k:r,sorted:a}=n,i=L().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=L().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=o.shape,p=c[c.length-1];if(t.shouldExecuteOnCPU([o])||p<i||r>l){const E=t.readSync(o.dataId),[F,z]=FL(E,c,o.dtype,r,a);return[t.makeTensorInfo(F.shape,F.dtype,F.values),t.makeTensorInfo(z.shape,z.dtype,z.values)]}if(r===0)return c[c.length-1]=0,[t.makeTensorInfo(c,o.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(p===1)return[o,Wi({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const u=t.texData.get(o.dataId),h=u!==null&&u.isPacked,d=h?t.unpackTensor(o):o,g=W(c)/p,f=te({inputs:{x:d},attrs:{shape:[g,p]},backend:t});h&&xo(t,d);const x=p0(r),y=p0(p);let w=null;const b=()=>w===null?[f,f]:[f,w],k=(E,F,z)=>{const j=b(),B=new AH(z),V=[[p],[w===null?1:0],[Number.NEGATIVE_INFINITY],[E],[F]],H=w;w=t.runWebGLProgram(B,j,"int32",V),xo(t,H)};for(let E=1;E<x;E*=2){const F=E*2;for(let z=E;z>=1;z/=2)k(F,z,[g,y])}for(let E=y;E>x;E/=2){const F=b(),z=new _H([g,E/2]),B=[[p],[w===null?1:0],[x]],M=w;w=t.runWebGLProgram(z,F,"int32",B),xo(t,M);const V=x/2,H=V*2;for(let G=V;G>=1;G/=2)k(H,G,w.shape)}let I=w;w=Kr({inputs:{x:w},backend:t,attrs:{begin:0,size:[g,r]}}),xo(t,I);let N=iv({inputs:{x:f,indices:w},backend:t,attrs:{axis:1,batchDims:1}});xo(t,f);const S=c.slice(0,-1);S.push(r),I=w,w=te({inputs:{x:w},attrs:{shape:S},backend:t}),xo(t,I);const T=N;return N=te({inputs:{x:N},attrs:{shape:S},backend:t}),xo(t,T),[N,w]}const RH={kernelName:bd,backendName:"webgl",kernelFunc:DH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OH{constructor(e,t,n,o,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=n==="nearest"?1:2;let l;switch(o){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH(s){const{inputs:e,backend:t,attrs:n}=s,{image:o,transforms:r}=e,{interpolation:a,fillMode:i,fillValue:l,outputShape:c}=n,[p,u,h,d]=o.shape,[m,g]=c??[u,h],f=[p,m,g,d],x=new OH(u,h,a,i,l,f);return t.runWebGLProgram(x,[o,r],"float32")}const PH={kernelName:wd,backendName:"webgl",kernelFunc:FH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(s){const{inputs:e,attrs:t,backend:n}=s,{axis:o}=t,{x:r}=e;Bi(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=n.readSync(r.dataId),{outputValues:i,outputShape:l,indices:c}=PL(a,o,r.shape,r.dtype);return[n.makeTensorInfo(l,r.dtype,i),n.makeTensorInfo([c.length],"int32",c)]}const zH={kernelName:vd,backendName:"webgl",kernelFunc:LH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(s){const{inputs:e,backend:t,attrs:n}=s,{value:o}=e;let{axis:r}=n;r<0&&(r+=o.shape.length);const a=o,i=a.shape.length,l=o.shape[r],c=new Array(i-1);let p=0;for(let g=0;g<i;g++)g!==r&&(c[p++]=a.shape[g]);const u=[],h=new Array(i).fill(0),d=a.shape.slice();d[r]=1;const m=new Array(l);for(let g=0;g<m.length;g++){h[r]=g;const f=Kr({inputs:{x:a},backend:t,attrs:{begin:h,size:d}}),x=te({inputs:{x:f},backend:t,attrs:{shape:c}});m[g]=x,u.push(f)}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const BH={kernelName:Uc,backendName:"webgl",kernelFunc:jH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MH{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,o=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[o,i];const l="0.0",c="sumValue",p=Math.floor(n/4)*4,u=n%4,h=`
        sumValue += dot(values, segFilter);
    `;let d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let m="";r%n>0&&(m=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${m}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${p};
        if (${u===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VH(s){const{inputs:e,backend:t,attrs:n}=s,{x:o,segmentIds:r}=e,{numSegments:a}=n,i=o.shape.length,l=[];let c=0;const p=et([c],i);let u=o;p!=null&&(u=Mt({inputs:{x:o},backend:t,attrs:{perm:p}}),l.push(u),c=at(1,i)[0]);const h=X1(u.shape,c,a),d=W([u.shape[c]]),m=te({inputs:{x:u},backend:t,attrs:{shape:[-1,d]}});l.push(m);const g=Id(o.dtype),f=(b,k,I,N,S)=>{const T=b.shape[0],E=b.shape[1],F=K1(E,S),z={windowSize:F,inSize:E,batchSize:T,numSegments:S},j=new MH(z,k),B=t.compileAndRun(j,[b,I],N);if(l.push(B),B.shape[1]===S)return B;const M=mv({backend:t,attrs:{start:0,stop:S,step:1,dtype:"float32"}}),V=fv({inputs:{x:M},backend:t,attrs:{reps:[E/F]}});return l.push(M),l.push(V),f(B,k,V,N,S)},x=f(m,"unsortedSegmentSum",r,g,a),y=te({inputs:{x},backend:t,attrs:{shape:h}});let w=y;if(p!=null){l.push(y);const b=ao(p);w=Mt({inputs:{x:w},backend:t,attrs:{perm:b}})}return l.forEach(b=>t.disposeIntermediateTensorInfo(b)),w}const WH={kernelName:Gc,backendName:"webgl",kernelFunc:VH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH=[Sz,Ez,Dz,Fz,Lz,Bz,Vz,Uz,Kz,Yz,Qz,sj,rj,cj,hj,mj,gj,wj,kj,Ij,Tj,Fj,Lj,Mj,Wj,Xj,Zj,tB,pz,oB,cB,dB,bB,kB,IB,NB,TB,DB,FB,zB,BB,VB,UB,qB,XB,QB,tM,oM,iM,cM,dM,xM,vM,IM,SM,TM,AM,DM,OM,PM,zM,VM,GM,KM,YM,QM,sV,aV,pV,cz,hV,iB,fV,yV,vV,hz,CV,EV,_V,FV,zV,VV,GV,XV,QV,sW,oW,lW,pW,hW,gW,yW,wW,kW,IW,TW,DW,PW,UW,fz,KW,ZW,eU,nU,Gj,aU,lU,pU,dU,xU,mz,bU,vU,$U,CU,NU,Hj,BW,EU,RU,LU,xz,MU,UU,KU,ZU,tG,nG,aG,cG,hG,fG,yG,vG,CG,TG,DG,FG,Rj,VW,zG,BG,VG,UG,HG,KG,YG,JG,eH,nH,rH,iH,cH,hH,mH,gH,yH,MW,Iz,vH,IH,NH,EH,RH,PH,Cz,zH,BH,WH,iU];for(const s of UH)b0(s);const Wl=320,GH="/models/yolov5-people-1.0/model.json",ou={0:"people"};let Bn=null;const gv=async()=>{if(Bn===null){const s=await CD(GH);if(s===null)throw new Error("Model not loaded");Bn=s}return await Bn.executeAsync(ct([1,Wl,Wl,3])).then(s=>{we(s)}),Bn},HH=async s=>{Bn==null&&(console.log("loading model"),await gv());const t=await(await fetch(s.src)).blob(),n=await createImageBitmap(t),o=V3(n),r=P(()=>Us.resizeBilinear(o,[Wl,Wl]).div(255).expandDims(0)),a=await(Bn==null?void 0:Bn.executeAsync(r)),[i,l,c,p]=a,u=Array.from(i.dataSync()),h=Array.from(l.dataSync()),d=Array.from(c.dataSync()),m=p.dataSync()[0];we(a);const g=[];if(m===0){for(const f in ou){const x=ou[f];g.push({className:x,probability:0,boxes:[0,0,0,0]})}return g}for(let f=0;f<m;++f){const x=ou[d[f]],y=h[f],[w,b,k,I]=u.slice(f*4,(f+1)*4),N=b*s.height,S=w*s.width,T=(k-w)*s.width,E=(I-b)*s.height;g.push({className:x,probability:y,boxes:[w,b,k,I],position:{top:N,left:S,width:T,height:E},area:T*E})}return we(a),g},qH={name:"Gallery",props:{links:{required:!0,type:Array,default:()=>[]},isHidden:{required:!1,type:Boolean,default:!1},isNatural:{required:!1,type:Boolean,default:!1},size:{required:!1,type:String,default:"original"}},data(){return{itemRefs:[],highLightedImages:[],imageWidth:0,imageHeight:0,naturalWidth:0,naturalHeight:0}},computed:{getWidth(){return this.isNatural?"":"1000"},getHeight(){return this.isNatural?"":"1000"}},methods:{setItemRef(s){s&&this.itemRefs.push(s)},getImageSrc(s){return this.size==="micro"?s.src.original+"?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=34&w=34":s.src[this.size]},onImageLoad(s){const e=s.target;this.imageWidth=e.width,this.imageHeight=e.height,this.naturalWidth=e.naturalWidth,this.naturalHeight=e.naturalHeight},async handleModelClick(s){var t;const e=this.itemRefs[s];if(this.highLightedImages.includes(e)){Array.from(document.getElementsByClassName("highlighter")).forEach(n=>{n.remove()}),this.highLightedImages=this.highLightedImages.filter(n=>n!==e);return}if(e instanceof HTMLImageElement){const n=await HH(e);for(const o of n){if(o.position){const{top:r,left:a,width:i,height:l}=o.position,c=document.createElement("div");c.setAttribute("class","highlighter"),c.style.top=`${r}px`,c.style.left=`${a}px`,c.style.width=`${i}px`,c.style.height=`${l}px`,(t=e.parentElement)==null||t.appendChild(c)}this.$forceUpdate()}this.highLightedImages.push(e),console.log("prediction: ",n),console.log("boxes: ",n.map(o=>o.boxes)),console.log("position: ",n.map(o=>o.position))}else console.error("Image element is not an instance of HTMLImageElement.")},handleLinkClick(s){const e=this.links[s];window.open(e.src.original,"_blank")}}};const KH={class:"flex flex-wrap"},XH=["src","alt","width","height"],YH={class:"absolute right-0 top-0 p-2 text-blue-600 cursor-pointer z-51"},ZH={class:"absolute right-10 top-0 p-2 text-green-600 cursor-pointer z-51"},JH={class:"absolute top-10 p-8 text-pink-300 flex flex-col z-50"},QH={class:"relative text-ellipsis overflow-hidden"},eq={class:"text-lg font-bold mb-3"},tq={class:"text-sm"},sq={class:"text-sm"};function nq(s,e,t,n,o,r){const a=$v("font-awesome-icon");return il(),al("main",null,[Zt("div",KH,[(il(!0),al(vv,null,kv(t.links,(i,l)=>(il(),al("div",{key:l,class:ru(["m-2 before:content-[''] before:rounded-md before:absolute before:inset-0 before:bg-black before:bg-opacity-20 relative",{"w-1/4":!t.isNatural,overlay:t.isHidden,"relative mb-4  before:content-[``] before:rounded-md before:absolute before:inset-0 before:bg-black before:bg-opacity-20":!0}])},[Zt("img",{ref_for:!0,ref:r.setItemRef,class:"rounded-md",src:r.getImageSrc(i),alt:i.alt,loading:"lazy",width:r.getWidth,height:r.getHeight,onLoad:e[0]||(e[0]=(...c)=>r.onImageLoad&&r.onImageLoad(...c))},null,40,XH),Zt("div",YH,[au(a,{icon:["fas","link"],size:"lg",border:!0,onClick:c=>r.handleLinkClick(l)},null,8,["onClick"])]),Zt("div",ZH,[au(a,{icon:["fas","eye"],size:"lg",border:!0,onClick:c=>r.handleModelClick(l)},null,8,["onClick"])]),Zt("div",JH,[Zt("div",QH,[Zt("h1",eq,or(i.alt),1),Zt("p",tq,"w/h "+or(o.imageWidth)+"x"+or(o.imageHeight),1),Zt("p",sq,"natural w/h "+or(o.naturalWidth)+"x"+or(o.naturalHeight),1)])])],2))),128))])])}const xv=u0(qH,[["render",nq]]),oq=[{type:"Photo",id:14933974,width:6e3,height:4e3,url:"https://www.pexels.com/photo/portrait-of-muslim-men-14933974/",photographer:"Zain Ali",photographer_url:"https://www.pexels.com/@zaktech90",photographer_id:116800,avg_color:"#70736C",src:{original:"https://images.pexels.com/photos/14933974/pexels-photo-14933974.jpeg",large2x:"https://images.pexels.com/photos/14933974/pexels-photo-14933974.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/14933974/pexels-photo-14933974.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/14933974/pexels-photo-14933974.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/14933974/pexels-photo-14933974.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/14933974/pexels-photo-14933974.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/14933974/pexels-photo-14933974.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/14933974/pexels-photo-14933974.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Portrait of Muslim Men"},{type:"Photo",id:16085455,width:4160,height:6240,url:"https://www.pexels.com/photo/woman-posing-by-fence-16085455/",photographer:"Ozan Çulha",photographer_url:"https://www.pexels.com/@ozanculha",photographer_id:1512687,avg_color:"#5D5D5D",src:{original:"https://images.pexels.com/photos/16085455/pexels-photo-16085455.jpeg",large2x:"https://images.pexels.com/photos/16085455/pexels-photo-16085455.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16085455/pexels-photo-16085455.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16085455/pexels-photo-16085455.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16085455/pexels-photo-16085455.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16085455/pexels-photo-16085455.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16085455/pexels-photo-16085455.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16085455/pexels-photo-16085455.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman Posing by Fence"},{type:"Photo",id:15832369,width:4160,height:6240,url:"https://www.pexels.com/photo/woman-sitting-on-a-running-track-15832369/",photographer:"Throughourlens. 35mm",photographer_url:"https://www.pexels.com/@hoinommm",photographer_id:1227306,avg_color:"#714930",src:{original:"https://images.pexels.com/photos/15832369/pexels-photo-15832369.jpeg",large2x:"https://images.pexels.com/photos/15832369/pexels-photo-15832369.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/15832369/pexels-photo-15832369.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/15832369/pexels-photo-15832369.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/15832369/pexels-photo-15832369.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/15832369/pexels-photo-15832369.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/15832369/pexels-photo-15832369.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/15832369/pexels-photo-15832369.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman Sitting on a Running Track "},{type:"Photo",id:13383272,width:3394,height:4242,url:"https://www.pexels.com/photo/woman-in-black-sweater-standing-on-rocky-seashore-13383272/",photographer:"Lany-Jade Mondou",photographer_url:"https://www.pexels.com/@lany",photographer_id:135943481,avg_color:"#76817B",src:{original:"https://images.pexels.com/photos/13383272/pexels-photo-13383272.jpeg",large2x:"https://images.pexels.com/photos/13383272/pexels-photo-13383272.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/13383272/pexels-photo-13383272.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/13383272/pexels-photo-13383272.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/13383272/pexels-photo-13383272.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/13383272/pexels-photo-13383272.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/13383272/pexels-photo-13383272.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/13383272/pexels-photo-13383272.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman in Black Sweater Standing on Rocky Seashore"},{type:"Photo",id:16051528,width:4016,height:6016,url:"https://www.pexels.com/photo/portrait-girl-16051528/",photographer:"Stephanie Lima",photographer_url:"https://www.pexels.com/@stephanie-lima-455905576",photographer_id:455905576,avg_color:"#A4ACAF",src:{original:"https://images.pexels.com/photos/16051528/pexels-photo-16051528.jpeg",large2x:"https://images.pexels.com/photos/16051528/pexels-photo-16051528.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16051528/pexels-photo-16051528.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16051528/pexels-photo-16051528.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16051528/pexels-photo-16051528.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16051528/pexels-photo-16051528.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16051528/pexels-photo-16051528.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16051528/pexels-photo-16051528.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Portrait Girl "},{type:"Photo",id:8499384,width:3333,height:5e3,url:"https://www.pexels.com/photo/a-beautiful-woman-in-pink-long-sleeves-8499384/",photographer:"Ivan Samkov",photographer_url:"https://www.pexels.com/@ivan-samkov",photographer_id:2563618,avg_color:"#9E5858",src:{original:"https://images.pexels.com/photos/8499384/pexels-photo-8499384.jpeg",large2x:"https://images.pexels.com/photos/8499384/pexels-photo-8499384.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/8499384/pexels-photo-8499384.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/8499384/pexels-photo-8499384.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/8499384/pexels-photo-8499384.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/8499384/pexels-photo-8499384.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/8499384/pexels-photo-8499384.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/8499384/pexels-photo-8499384.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"A Beautiful Woman in Pink Long Sleeves"},{type:"Photo",id:14664618,width:3540,height:4425,url:"https://www.pexels.com/photo/model-posing-against-sky-14664618/",photographer:"jasmin chew",photographer_url:"https://www.pexels.com/@majesticaljasmin",photographer_id:3315593,avg_color:"#C9CCD5",src:{original:"https://images.pexels.com/photos/14664618/pexels-photo-14664618.jpeg",large2x:"https://images.pexels.com/photos/14664618/pexels-photo-14664618.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/14664618/pexels-photo-14664618.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/14664618/pexels-photo-14664618.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/14664618/pexels-photo-14664618.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/14664618/pexels-photo-14664618.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/14664618/pexels-photo-14664618.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/14664618/pexels-photo-14664618.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Model Posing against Sky"},{type:"Photo",id:13193113,width:4800,height:6e3,url:"https://www.pexels.com/photo/sexy-woman-in-white-tank-top-and-denim-pants-13193113/",photographer:"Zarina Khalilova",photographer_url:"https://www.pexels.com/@zarina-khalilova-207741792",photographer_id:207741792,avg_color:"#2C2924",src:{original:"https://images.pexels.com/photos/13193113/pexels-photo-13193113.jpeg",large2x:"https://images.pexels.com/photos/13193113/pexels-photo-13193113.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/13193113/pexels-photo-13193113.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/13193113/pexels-photo-13193113.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/13193113/pexels-photo-13193113.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/13193113/pexels-photo-13193113.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/13193113/pexels-photo-13193113.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/13193113/pexels-photo-13193113.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Sexy Woman in White Tank Top and Denim Pants"},{type:"Photo",id:11958305,width:3317,height:4146,url:"https://www.pexels.com/photo/woman-in-a-dress-holding-a-straw-hat-11958305/",photographer:"Néo Rioux",photographer_url:"https://www.pexels.com/@neo-rioux-2386368",photographer_id:2386368,avg_color:"#4E3C30",src:{original:"https://images.pexels.com/photos/11958305/pexels-photo-11958305.jpeg",large2x:"https://images.pexels.com/photos/11958305/pexels-photo-11958305.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/11958305/pexels-photo-11958305.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/11958305/pexels-photo-11958305.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/11958305/pexels-photo-11958305.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/11958305/pexels-photo-11958305.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/11958305/pexels-photo-11958305.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/11958305/pexels-photo-11958305.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman in a Dress Holding a Straw Hat"},{type:"Photo",id:7507067,width:5637,height:3758,url:"https://www.pexels.com/photo/women-blowing-confetti-7507067/",photographer:"Antoni Shkraba",photographer_url:"https://www.pexels.com/@shkrabaanthony",photographer_id:2570462,avg_color:"#A17D5C",src:{original:"https://images.pexels.com/photos/7507067/pexels-photo-7507067.jpeg",large2x:"https://images.pexels.com/photos/7507067/pexels-photo-7507067.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/7507067/pexels-photo-7507067.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/7507067/pexels-photo-7507067.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/7507067/pexels-photo-7507067.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/7507067/pexels-photo-7507067.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/7507067/pexels-photo-7507067.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/7507067/pexels-photo-7507067.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Women Blowing Confetti"},{type:"Photo",id:8910439,width:6e3,height:4e3,url:"https://www.pexels.com/photo/people-sitting-on-party-8910439/",photographer:"ANTONI SHKRABA production",photographer_url:"https://www.pexels.com/@anthonyshkraba-production",photographer_id:57404688,avg_color:"#9F9675",src:{original:"https://images.pexels.com/photos/8910439/pexels-photo-8910439.jpeg",large2x:"https://images.pexels.com/photos/8910439/pexels-photo-8910439.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/8910439/pexels-photo-8910439.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/8910439/pexels-photo-8910439.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/8910439/pexels-photo-8910439.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/8910439/pexels-photo-8910439.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/8910439/pexels-photo-8910439.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/8910439/pexels-photo-8910439.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"People Sitting on Party"},{type:"Photo",id:9391491,width:5657,height:3772,url:"https://www.pexels.com/photo/women-chatting-while-sitting-on-a-purple-sofa-9391491/",photographer:"Mikhail Nilov",photographer_url:"https://www.pexels.com/@mikhail-nilov",photographer_id:11437196,avg_color:"#8E8B84",src:{original:"https://images.pexels.com/photos/9391491/pexels-photo-9391491.jpeg",large2x:"https://images.pexels.com/photos/9391491/pexels-photo-9391491.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/9391491/pexels-photo-9391491.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/9391491/pexels-photo-9391491.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/9391491/pexels-photo-9391491.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/9391491/pexels-photo-9391491.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/9391491/pexels-photo-9391491.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/9391491/pexels-photo-9391491.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Women Chatting while Sitting on a Purple Sofa"},{type:"Photo",id:1267239,width:3648,height:5472,url:"https://www.pexels.com/photo/two-women-holding-beer-while-sitting-on-rock-near-body-of-water-1267239/",photographer:"ELEVATE",photographer_url:"https://www.pexels.com/@elevate",photographer_id:531357,avg_color:"#7F7366",src:{original:"https://images.pexels.com/photos/1267239/pexels-photo-1267239.jpeg",large2x:"https://images.pexels.com/photos/1267239/pexels-photo-1267239.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1267239/pexels-photo-1267239.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1267239/pexels-photo-1267239.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1267239/pexels-photo-1267239.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1267239/pexels-photo-1267239.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1267239/pexels-photo-1267239.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1267239/pexels-photo-1267239.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Two Women Holding Beer While Sitting on Rock Near Body of Water"},{type:"Photo",id:3491680,width:3456,height:5184,url:"https://www.pexels.com/photo/three-women-having-a-picnic-3491680/",photographer:"Aline Viana Prado",photographer_url:"https://www.pexels.com/@alinevianafoto",photographer_id:1287165,avg_color:"#676157",src:{original:"https://images.pexels.com/photos/3491680/pexels-photo-3491680.jpeg",large2x:"https://images.pexels.com/photos/3491680/pexels-photo-3491680.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3491680/pexels-photo-3491680.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3491680/pexels-photo-3491680.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3491680/pexels-photo-3491680.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3491680/pexels-photo-3491680.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3491680/pexels-photo-3491680.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3491680/pexels-photo-3491680.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Three Women Having a Picnic"},{type:"Photo",id:3777017,width:5760,height:3840,url:"https://www.pexels.com/photo/acoustic-guitar-played-by-a-man-sitting-on-grass-field-3777017/",photographer:"Andrea Piacquadio",photographer_url:"https://www.pexels.com/@olly",photographer_id:224453,avg_color:"#887A6D",src:{original:"https://images.pexels.com/photos/3777017/pexels-photo-3777017.jpeg",large2x:"https://images.pexels.com/photos/3777017/pexels-photo-3777017.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3777017/pexels-photo-3777017.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3777017/pexels-photo-3777017.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3777017/pexels-photo-3777017.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3777017/pexels-photo-3777017.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3777017/pexels-photo-3777017.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3777017/pexels-photo-3777017.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Acoustic Guitar Played By a Man Sitting On Grass Field "},{type:"Photo",id:1090393,width:5184,height:3456,url:"https://www.pexels.com/photo/woman-holding-silver-iphone-5s-1090393/",photographer:"Vinicius Wiesehofer",photographer_url:"https://www.pexels.com/@vinicius-wiesehofer-289347",photographer_id:289347,avg_color:"#5D5C61",src:{original:"https://images.pexels.com/photos/1090393/pexels-photo-1090393.jpeg",large2x:"https://images.pexels.com/photos/1090393/pexels-photo-1090393.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1090393/pexels-photo-1090393.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1090393/pexels-photo-1090393.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1090393/pexels-photo-1090393.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1090393/pexels-photo-1090393.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1090393/pexels-photo-1090393.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1090393/pexels-photo-1090393.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman Holding Silver Iphone 5s"},{type:"Photo",id:2532216,width:8247,height:5495,url:"https://www.pexels.com/photo/photo-of-coupe-walking-on-grass-field-2532216/",photographer:"Subodh Bajpai",photographer_url:"https://www.pexels.com/@subodhbajpaiphotography",photographer_id:1027625,avg_color:"#B8ADA5",src:{original:"https://images.pexels.com/photos/2532216/pexels-photo-2532216.jpeg",large2x:"https://images.pexels.com/photos/2532216/pexels-photo-2532216.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2532216/pexels-photo-2532216.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2532216/pexels-photo-2532216.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2532216/pexels-photo-2532216.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2532216/pexels-photo-2532216.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2532216/pexels-photo-2532216.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2532216/pexels-photo-2532216.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo of Coupe Walking on Grass Field"},{type:"Photo",id:5876450,width:3490,height:5235,url:"https://www.pexels.com/photo/multiethnic-couple-having-online-conversation-via-smartphone-5876450/",photographer:"Monstera",photographer_url:"https://www.pexels.com/@gabby-k",photographer_id:3372733,avg_color:"#9C9692",src:{original:"https://images.pexels.com/photos/5876450/pexels-photo-5876450.jpeg",large2x:"https://images.pexels.com/photos/5876450/pexels-photo-5876450.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/5876450/pexels-photo-5876450.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/5876450/pexels-photo-5876450.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/5876450/pexels-photo-5876450.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/5876450/pexels-photo-5876450.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/5876450/pexels-photo-5876450.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/5876450/pexels-photo-5876450.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Full body of content Asian woman and African American man having video call while sitting on couch with crossed legs in room"},{type:"Photo",id:758898,width:3852,height:2832,url:"https://www.pexels.com/photo/wedding-couple-taking-a-traditional-ceremony-758898/",photographer:"Min An",photographer_url:"https://www.pexels.com/@minan1398",photographer_id:206851,avg_color:"#7E7284",src:{original:"https://images.pexels.com/photos/758898/pexels-photo-758898.png",large2x:"https://images.pexels.com/photos/758898/pexels-photo-758898.png?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/758898/pexels-photo-758898.png?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/758898/pexels-photo-758898.png?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/758898/pexels-photo-758898.png?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/758898/pexels-photo-758898.png?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/758898/pexels-photo-758898.png?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/758898/pexels-photo-758898.png?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Wedding Couple Taking a Traditional Ceremony"},{type:"Photo",id:5775049,width:4182,height:5260,url:"https://www.pexels.com/photo/group-of-people-spending-christmas-night-5775049/",photographer:"Nicole Michalou",photographer_url:"https://www.pexels.com/@nicole-michalou",photographer_id:3674679,avg_color:"#7A4C2E",src:{original:"https://images.pexels.com/photos/5775049/pexels-photo-5775049.jpeg",large2x:"https://images.pexels.com/photos/5775049/pexels-photo-5775049.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/5775049/pexels-photo-5775049.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/5775049/pexels-photo-5775049.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/5775049/pexels-photo-5775049.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/5775049/pexels-photo-5775049.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/5775049/pexels-photo-5775049.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/5775049/pexels-photo-5775049.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Group Of People Spending Christmas Night"},{type:"Photo",id:5471924,width:4e3,height:6e3,url:"https://www.pexels.com/photo/mother-and-son-making-cookies-5471924/",photographer:"olia danilevich",photographer_url:"https://www.pexels.com/@olia-danilevich",photographer_id:2638647,avg_color:"#91806D",src:{original:"https://images.pexels.com/photos/5471924/pexels-photo-5471924.jpeg",large2x:"https://images.pexels.com/photos/5471924/pexels-photo-5471924.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/5471924/pexels-photo-5471924.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/5471924/pexels-photo-5471924.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/5471924/pexels-photo-5471924.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/5471924/pexels-photo-5471924.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/5471924/pexels-photo-5471924.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/5471924/pexels-photo-5471924.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Mother and Son Making Cookies"},{type:"Photo",id:7469424,width:4480,height:6720,url:"https://www.pexels.com/photo/a-man-talking-to-his-baby-carried-by-her-wife-7469424/",photographer:"Meruyert Gonullu",photographer_url:"https://www.pexels.com/@meruyert-bissimbayeva",photographer_id:3929575,avg_color:"#8C8E88",src:{original:"https://images.pexels.com/photos/7469424/pexels-photo-7469424.jpeg",large2x:"https://images.pexels.com/photos/7469424/pexels-photo-7469424.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/7469424/pexels-photo-7469424.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/7469424/pexels-photo-7469424.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/7469424/pexels-photo-7469424.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/7469424/pexels-photo-7469424.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/7469424/pexels-photo-7469424.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/7469424/pexels-photo-7469424.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"A Man Talking to His Baby Carried by Her Wife"},{type:"Photo",id:14573146,width:5304,height:7952,url:"https://www.pexels.com/photo/woman-in-black-dress-standing-on-the-beach-14573146/",photographer:"Jalil Saeidi",photographer_url:"https://www.pexels.com/@jalil-saeidi-135940189",photographer_id:135940189,avg_color:"#D2D2D2",src:{original:"https://images.pexels.com/photos/14573146/pexels-photo-14573146.jpeg",large2x:"https://images.pexels.com/photos/14573146/pexels-photo-14573146.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/14573146/pexels-photo-14573146.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/14573146/pexels-photo-14573146.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/14573146/pexels-photo-14573146.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/14573146/pexels-photo-14573146.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/14573146/pexels-photo-14573146.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/14573146/pexels-photo-14573146.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman in Black Dress Standing on the Beach"},{type:"Photo",id:17169346,width:2724,height:4057,url:"https://www.pexels.com/photo/snow-sea-man-beach-17169346/",photographer:"Emmanuel Codden",photographer_url:"https://www.pexels.com/@ehma",photographer_id:1502600,avg_color:"#A9A6A1",src:{original:"https://images.pexels.com/photos/17169346/pexels-photo-17169346.jpeg",large2x:"https://images.pexels.com/photos/17169346/pexels-photo-17169346.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17169346/pexels-photo-17169346.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17169346/pexels-photo-17169346.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17169346/pexels-photo-17169346.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17169346/pexels-photo-17169346.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17169346/pexels-photo-17169346.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17169346/pexels-photo-17169346.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of adult, beach, boy"},{type:"Photo",id:16811711,width:4e3,height:6e3,url:"https://www.pexels.com/photo/stairs-to-the-underground-car-park-16811711/",photographer:"Annaëlle Quionquion",photographer_url:"https://www.pexels.com/@annaelle-quionquion-2652658",photographer_id:2652658,avg_color:"#1D1918",src:{original:"https://images.pexels.com/photos/16811711/pexels-photo-16811711.jpeg",large2x:"https://images.pexels.com/photos/16811711/pexels-photo-16811711.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16811711/pexels-photo-16811711.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16811711/pexels-photo-16811711.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16811711/pexels-photo-16811711.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16811711/pexels-photo-16811711.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16811711/pexels-photo-16811711.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16811711/pexels-photo-16811711.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of adult, athlete, child"},{type:"Photo",id:1486213,width:2160,height:3240,url:"https://www.pexels.com/photo/photo-of-woman-wearing-eyeglasses-1486213/",photographer:"Ogo",photographer_url:"https://www.pexels.com/@simplyogo",photographer_id:623586,avg_color:"#B3A9A3",src:{original:"https://images.pexels.com/photos/1486213/pexels-photo-1486213.jpeg",large2x:"https://images.pexels.com/photos/1486213/pexels-photo-1486213.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1486213/pexels-photo-1486213.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1486213/pexels-photo-1486213.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1486213/pexels-photo-1486213.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1486213/pexels-photo-1486213.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1486213/pexels-photo-1486213.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1486213/pexels-photo-1486213.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo of Woman Wearing Eyeglasses"},{type:"Photo",id:4006576,width:1825,height:2738,url:"https://www.pexels.com/photo/woman-in-white-button-up-shirt-wearing-headdress-4006576/",photographer:"Arianna Jadé",photographer_url:"https://www.pexels.com/@viscoseillusion",photographer_id:1458659,avg_color:"#A49795",src:{original:"https://images.pexels.com/photos/4006576/pexels-photo-4006576.jpeg",large2x:"https://images.pexels.com/photos/4006576/pexels-photo-4006576.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/4006576/pexels-photo-4006576.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/4006576/pexels-photo-4006576.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/4006576/pexels-photo-4006576.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/4006576/pexels-photo-4006576.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/4006576/pexels-photo-4006576.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/4006576/pexels-photo-4006576.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman in White Button Up Shirt Wearing Headdress"},{type:"Photo",id:4148984,width:5760,height:3840,url:"https://www.pexels.com/photo/happy-senior-couple-in-love-with-bunch-of-fresh-flowers-in-nature-4148984/",photographer:"Gustavo Fring",photographer_url:"https://www.pexels.com/@gustavo-fring",photographer_id:2206740,avg_color:"#A18776",src:{original:"https://images.pexels.com/photos/4148984/pexels-photo-4148984.jpeg",large2x:"https://images.pexels.com/photos/4148984/pexels-photo-4148984.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/4148984/pexels-photo-4148984.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/4148984/pexels-photo-4148984.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/4148984/pexels-photo-4148984.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/4148984/pexels-photo-4148984.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/4148984/pexels-photo-4148984.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/4148984/pexels-photo-4148984.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"From above of cheerful senior wife wearing wide scarf and headband with flower bouquet in hand and happy elderly gray haired husband in warm clothes lying on ground with fallen leaves in park with closed eyes"},{type:"Photo",id:4064423,width:3333,height:5e3,url:"https://www.pexels.com/photo/woman-sitting-on-wheelchair-while-touching-her-cat-4064423/",photographer:"Marcus Aurelius",photographer_url:"https://www.pexels.com/@marcus-aurelius",photographer_id:2416479,avg_color:"#83807D",src:{original:"https://images.pexels.com/photos/4064423/pexels-photo-4064423.jpeg",large2x:"https://images.pexels.com/photos/4064423/pexels-photo-4064423.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/4064423/pexels-photo-4064423.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/4064423/pexels-photo-4064423.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/4064423/pexels-photo-4064423.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/4064423/pexels-photo-4064423.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/4064423/pexels-photo-4064423.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/4064423/pexels-photo-4064423.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman Sitting on Wheelchair While Touching Her Cat"},{type:"Photo",id:2853592,width:3637,height:5456,url:"https://www.pexels.com/photo/photo-of-woman-near-chain-link-fence-2853592/",photographer:"Alvin Caal",photographer_url:"https://www.pexels.com/@alvincaal",photographer_id:1452819,avg_color:"#8C7368",src:{original:"https://images.pexels.com/photos/2853592/pexels-photo-2853592.jpeg",large2x:"https://images.pexels.com/photos/2853592/pexels-photo-2853592.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2853592/pexels-photo-2853592.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2853592/pexels-photo-2853592.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2853592/pexels-photo-2853592.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2853592/pexels-photo-2853592.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2853592/pexels-photo-2853592.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2853592/pexels-photo-2853592.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo Of Woman Near Chain Link Fence"},{type:"Photo",id:1250643,width:4966,height:3317,url:"https://www.pexels.com/photo/woman-riding-skateboard-at-the-road-1250643/",photographer:"Vidal Balielo Jr.",photographer_url:"https://www.pexels.com/@vidalbalielojrfotografia",photographer_id:519095,avg_color:"#BDAE9F",src:{original:"https://images.pexels.com/photos/1250643/pexels-photo-1250643.jpeg",large2x:"https://images.pexels.com/photos/1250643/pexels-photo-1250643.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1250643/pexels-photo-1250643.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1250643/pexels-photo-1250643.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1250643/pexels-photo-1250643.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1250643/pexels-photo-1250643.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1250643/pexels-photo-1250643.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1250643/pexels-photo-1250643.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman Riding Skateboard at the Road"},{type:"Photo",id:6646919,width:2894,height:4341,url:"https://www.pexels.com/photo/man-pushing-an-elderly-man-on-a-black-wheelchair-6646919/",photographer:"RDNE Stock project",photographer_url:"https://www.pexels.com/@rdne",photographer_id:3149039,avg_color:"#818283",src:{original:"https://images.pexels.com/photos/6646919/pexels-photo-6646919.jpeg",large2x:"https://images.pexels.com/photos/6646919/pexels-photo-6646919.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/6646919/pexels-photo-6646919.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/6646919/pexels-photo-6646919.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/6646919/pexels-photo-6646919.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/6646919/pexels-photo-6646919.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/6646919/pexels-photo-6646919.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/6646919/pexels-photo-6646919.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Man Pushing an Elderly Man on a Black Wheelchair"},{type:"Photo",id:16756606,width:3870,height:5797,url:"https://www.pexels.com/photo/man-and-woman-together-in-mountains-16756606/",photographer:"Luis Zambrano",photographer_url:"https://www.pexels.com/@luis-zambrano-3782493",photographer_id:3782493,avg_color:"#7D7E76",src:{original:"https://images.pexels.com/photos/16756606/pexels-photo-16756606.jpeg",large2x:"https://images.pexels.com/photos/16756606/pexels-photo-16756606.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16756606/pexels-photo-16756606.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16756606/pexels-photo-16756606.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16756606/pexels-photo-16756606.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16756606/pexels-photo-16756606.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16756606/pexels-photo-16756606.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16756606/pexels-photo-16756606.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Man and Woman Together in Mountains"},{type:"Photo",id:15212752,width:3649,height:5444,url:"https://www.pexels.com/photo/portrait-of-a-pretty-brunette-using-a-smart-phone-15212752/",photographer:"Elena Rubtsova",photographer_url:"https://www.pexels.com/@elenarubtso",photographer_id:177083790,avg_color:"#80736A",src:{original:"https://images.pexels.com/photos/15212752/pexels-photo-15212752.jpeg",large2x:"https://images.pexels.com/photos/15212752/pexels-photo-15212752.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/15212752/pexels-photo-15212752.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/15212752/pexels-photo-15212752.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/15212752/pexels-photo-15212752.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/15212752/pexels-photo-15212752.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/15212752/pexels-photo-15212752.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/15212752/pexels-photo-15212752.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Portrait of a Pretty Brunette Using a Smart Phone"},{type:"Photo",id:16958033,width:4106,height:4349,url:"https://www.pexels.com/photo/restaurant-man-people-woman-16958033/",photographer:"Bave Pictures",photographer_url:"https://www.pexels.com/@bave-pictures-64453798",photographer_id:64453798,avg_color:"#966E4A",src:{original:"https://images.pexels.com/photos/16958033/pexels-photo-16958033.jpeg",large2x:"https://images.pexels.com/photos/16958033/pexels-photo-16958033.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16958033/pexels-photo-16958033.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16958033/pexels-photo-16958033.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16958033/pexels-photo-16958033.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16958033/pexels-photo-16958033.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16958033/pexels-photo-16958033.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16958033/pexels-photo-16958033.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of adult, african girl, after party"},{type:"Photo",id:16462955,width:2400,height:3360,url:"https://www.pexels.com/photo/black-couple-16462955/",photographer:"Satumbo 9",photographer_url:"https://www.pexels.com/@satumbo-9-436475624",photographer_id:436475624,avg_color:"#837A6B",src:{original:"https://images.pexels.com/photos/16462955/pexels-photo-16462955.jpeg",large2x:"https://images.pexels.com/photos/16462955/pexels-photo-16462955.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16462955/pexels-photo-16462955.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16462955/pexels-photo-16462955.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16462955/pexels-photo-16462955.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16462955/pexels-photo-16462955.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16462955/pexels-photo-16462955.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16462955/pexels-photo-16462955.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Black Couple "},{type:"Photo",id:16922807,width:4160,height:6240,url:"https://www.pexels.com/photo/red-dress-16922807/",photographer:"Gerardo Manzano",photographer_url:"https://www.pexels.com/@gerardo-manzano-251119164",photographer_id:251119164,avg_color:"#B8823C",src:{original:"https://images.pexels.com/photos/16922807/pexels-photo-16922807.png",large2x:"https://images.pexels.com/photos/16922807/pexels-photo-16922807.png?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16922807/pexels-photo-16922807.png?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16922807/pexels-photo-16922807.png?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16922807/pexels-photo-16922807.png?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16922807/pexels-photo-16922807.png?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16922807/pexels-photo-16922807.png?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16922807/pexels-photo-16922807.png?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"red dress"},{type:"Photo",id:762080,width:5760,height:3840,url:"https://www.pexels.com/photo/woman-in-brown-suede-peacoat-reading-a-book-762080/",photographer:"Andrea Piacquadio",photographer_url:"https://www.pexels.com/@olly",photographer_id:224453,avg_color:"#586475",src:{original:"https://images.pexels.com/photos/762080/pexels-photo-762080.jpeg",large2x:"https://images.pexels.com/photos/762080/pexels-photo-762080.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/762080/pexels-photo-762080.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/762080/pexels-photo-762080.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/762080/pexels-photo-762080.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/762080/pexels-photo-762080.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/762080/pexels-photo-762080.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/762080/pexels-photo-762080.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman In Brown Suede Peacoat Reading A Book"},{type:"Photo",id:601170,width:6016,height:4016,url:"https://www.pexels.com/photo/two-women-holding-pen-601170/",photographer:"Tirachard Kumtanom",photographer_url:"https://www.pexels.com/@tirachard-kumtanom-112571",photographer_id:112571,avg_color:"#C9B4A3",src:{original:"https://images.pexels.com/photos/601170/pexels-photo-601170.jpeg",large2x:"https://images.pexels.com/photos/601170/pexels-photo-601170.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/601170/pexels-photo-601170.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/601170/pexels-photo-601170.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/601170/pexels-photo-601170.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/601170/pexels-photo-601170.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/601170/pexels-photo-601170.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/601170/pexels-photo-601170.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Two Women Holding Pen"},{type:"Photo",id:247304,width:2448,height:1632,url:"https://www.pexels.com/photo/woman-with-umbrella-on-beach-247304/",photographer:"Pixabay",photographer_url:"https://www.pexels.com/@pixabay",photographer_id:2659,avg_color:"#7C98B6",src:{original:"https://images.pexels.com/photos/247304/pexels-photo-247304.jpeg",large2x:"https://images.pexels.com/photos/247304/pexels-photo-247304.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/247304/pexels-photo-247304.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/247304/pexels-photo-247304.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/247304/pexels-photo-247304.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/247304/pexels-photo-247304.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/247304/pexels-photo-247304.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/247304/pexels-photo-247304.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman With Umbrella on Beach"},{type:"Photo",id:1848565,width:3648,height:5472,url:"https://www.pexels.com/photo/photo-of-woman-sitting-on-stairs-1848565/",photographer:"luizclas",photographer_url:"https://www.pexels.com/@luizclas-170497",photographer_id:170497,avg_color:"#483F3C",src:{original:"https://images.pexels.com/photos/1848565/pexels-photo-1848565.jpeg",large2x:"https://images.pexels.com/photos/1848565/pexels-photo-1848565.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1848565/pexels-photo-1848565.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1848565/pexels-photo-1848565.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1848565/pexels-photo-1848565.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1848565/pexels-photo-1848565.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1848565/pexels-photo-1848565.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1848565/pexels-photo-1848565.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo of Woman Sitting On Stairs"},{type:"Photo",id:354951,width:4876,height:3230,url:"https://www.pexels.com/photo/attractive-beauty-blonde-blur-354951/",photographer:"Pixabay",photographer_url:"https://www.pexels.com/@pixabay",photographer_id:2659,avg_color:"#7B7774",src:{original:"https://images.pexels.com/photos/354951/pexels-photo-354951.jpeg",large2x:"https://images.pexels.com/photos/354951/pexels-photo-354951.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/354951/pexels-photo-354951.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/354951/pexels-photo-354951.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/354951/pexels-photo-354951.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/354951/pexels-photo-354951.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/354951/pexels-photo-354951.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/354951/pexels-photo-354951.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Shallow Focus of Woman Wearing Black and White T-shirt"},{type:"Photo",id:2672979,width:3828,height:2475,url:"https://www.pexels.com/photo/group-of-people-standing-beside-body-of-water-2672979/",photographer:"Andrea Piacquadio",photographer_url:"https://www.pexels.com/@olly",photographer_id:224453,avg_color:"#B2A397",src:{original:"https://images.pexels.com/photos/2672979/pexels-photo-2672979.jpeg",large2x:"https://images.pexels.com/photos/2672979/pexels-photo-2672979.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2672979/pexels-photo-2672979.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2672979/pexels-photo-2672979.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2672979/pexels-photo-2672979.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2672979/pexels-photo-2672979.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2672979/pexels-photo-2672979.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2672979/pexels-photo-2672979.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Group of People Standing Beside Body of Water"},{type:"Photo",id:774866,width:5760,height:3840,url:"https://www.pexels.com/photo/photo-of-woman-looking-at-the-mirror-774866/",photographer:"Andrea Piacquadio",photographer_url:"https://www.pexels.com/@olly",photographer_id:224453,avg_color:"#AE9E8E",src:{original:"https://images.pexels.com/photos/774866/pexels-photo-774866.jpeg",large2x:"https://images.pexels.com/photos/774866/pexels-photo-774866.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/774866/pexels-photo-774866.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/774866/pexels-photo-774866.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/774866/pexels-photo-774866.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/774866/pexels-photo-774866.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/774866/pexels-photo-774866.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/774866/pexels-photo-774866.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo of Woman Looking at the Mirror"},{type:"Photo",id:745045,width:4716,height:3203,url:"https://www.pexels.com/photo/group-of-people-sitting-on-white-mat-on-grass-field-745045/",photographer:"Helena Lopes",photographer_url:"https://www.pexels.com/@wildlittlethingsphoto",photographer_id:210984,avg_color:"#686657",src:{original:"https://images.pexels.com/photos/745045/pexels-photo-745045.jpeg",large2x:"https://images.pexels.com/photos/745045/pexels-photo-745045.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/745045/pexels-photo-745045.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/745045/pexels-photo-745045.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/745045/pexels-photo-745045.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/745045/pexels-photo-745045.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/745045/pexels-photo-745045.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/745045/pexels-photo-745045.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Group of People Sitting on White Mat on Grass Field"},{type:"Photo",id:697244,width:5472,height:3648,url:"https://www.pexels.com/photo/four-person-standing-at-top-of-grassy-mountain-697244/",photographer:"Helena Lopes",photographer_url:"https://www.pexels.com/@wildlittlethingsphoto",photographer_id:210984,avg_color:"#8D705C",src:{original:"https://images.pexels.com/photos/697244/pexels-photo-697244.jpeg",large2x:"https://images.pexels.com/photos/697244/pexels-photo-697244.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/697244/pexels-photo-697244.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/697244/pexels-photo-697244.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/697244/pexels-photo-697244.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/697244/pexels-photo-697244.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/697244/pexels-photo-697244.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/697244/pexels-photo-697244.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Four Person Standing at Top of Grassy Mountain"},{type:"Photo",id:2031734,width:6e3,height:3376,url:"https://www.pexels.com/photo/woman-sitting-near-the-eiffel-tower-2031734/",photographer:"Chait Goli",photographer_url:"https://www.pexels.com/@chaitaastic",photographer_id:876963,avg_color:"#80928A",src:{original:"https://images.pexels.com/photos/2031734/pexels-photo-2031734.jpeg",large2x:"https://images.pexels.com/photos/2031734/pexels-photo-2031734.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2031734/pexels-photo-2031734.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2031734/pexels-photo-2031734.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2031734/pexels-photo-2031734.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2031734/pexels-photo-2031734.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2031734/pexels-photo-2031734.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2031734/pexels-photo-2031734.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman Sitting Near the Eiffel Tower"},{type:"Photo",id:16999877,width:4e3,height:6e3,url:"https://www.pexels.com/photo/miradas-16999877/",photographer:"Diego Tenreiro",photographer_url:"https://www.pexels.com/@diego-tenreiro-575449612",photographer_id:575449612,avg_color:"#8B9B9A",src:{original:"https://images.pexels.com/photos/16999877/pexels-photo-16999877.jpeg",large2x:"https://images.pexels.com/photos/16999877/pexels-photo-16999877.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16999877/pexels-photo-16999877.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16999877/pexels-photo-16999877.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16999877/pexels-photo-16999877.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16999877/pexels-photo-16999877.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16999877/pexels-photo-16999877.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16999877/pexels-photo-16999877.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Miradas"},{type:"Photo",id:16954314,width:4160,height:6240,url:"https://www.pexels.com/photo/young-woman-standing-in-the-meadow-16954314/",photographer:"Pew Nguyen",photographer_url:"https://www.pexels.com/@nguyendesigner",photographer_id:65907,avg_color:"#50612A",src:{original:"https://images.pexels.com/photos/16954314/pexels-photo-16954314.jpeg",large2x:"https://images.pexels.com/photos/16954314/pexels-photo-16954314.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16954314/pexels-photo-16954314.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16954314/pexels-photo-16954314.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16954314/pexels-photo-16954314.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16954314/pexels-photo-16954314.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16954314/pexels-photo-16954314.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16954314/pexels-photo-16954314.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Young Woman Standing in the Meadow "},{type:"Photo",id:16961306,width:4480,height:6720,url:"https://www.pexels.com/photo/fashion-person-people-woman-16961306/",photographer:"Alina Rossoshanska",photographer_url:"https://www.pexels.com/@alina-rossoshanska-338724645",photographer_id:338724645,avg_color:"#B09BBC",src:{original:"https://images.pexels.com/photos/16961306/pexels-photo-16961306.jpeg",large2x:"https://images.pexels.com/photos/16961306/pexels-photo-16961306.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16961306/pexels-photo-16961306.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16961306/pexels-photo-16961306.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16961306/pexels-photo-16961306.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16961306/pexels-photo-16961306.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16961306/pexels-photo-16961306.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16961306/pexels-photo-16961306.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of adult, attractive, bargain"},{type:"Photo",id:17437252,width:5304,height:7952,url:"https://www.pexels.com/photo/wood-fashion-people-woman-17437252/",photographer:"MEUM MARE",photographer_url:"https://www.pexels.com/@meum-mare-204165854",photographer_id:204165854,avg_color:"#644E40",src:{original:"https://images.pexels.com/photos/17437252/pexels-photo-17437252.jpeg",large2x:"https://images.pexels.com/photos/17437252/pexels-photo-17437252.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17437252/pexels-photo-17437252.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17437252/pexels-photo-17437252.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17437252/pexels-photo-17437252.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17437252/pexels-photo-17437252.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17437252/pexels-photo-17437252.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17437252/pexels-photo-17437252.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:""},{type:"Photo",id:16983235,width:2499,height:3749,url:"https://www.pexels.com/photo/people-woman-girl-animal-16983235/",photographer:"Reign  Martinez",photographer_url:"https://www.pexels.com/@reign-martinez-91949405",photographer_id:91949405,avg_color:"#8A8B85",src:{original:"https://images.pexels.com/photos/16983235/pexels-photo-16983235.jpeg",large2x:"https://images.pexels.com/photos/16983235/pexels-photo-16983235.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16983235/pexels-photo-16983235.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16983235/pexels-photo-16983235.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16983235/pexels-photo-16983235.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16983235/pexels-photo-16983235.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16983235/pexels-photo-16983235.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16983235/pexels-photo-16983235.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of adult, animal, canine"},{type:"Photo",id:12222912,width:5504,height:6880,url:"https://www.pexels.com/photo/portrait-of-woman-wearing-black-top-and-jeans-with-thunder-pattern-12222912/",photographer:"Lee chinyama",photographer_url:"https://www.pexels.com/@lee-chinyama-92380529",photographer_id:92380529,avg_color:"#AAA5AB",src:{original:"https://images.pexels.com/photos/12222912/pexels-photo-12222912.jpeg",large2x:"https://images.pexels.com/photos/12222912/pexels-photo-12222912.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/12222912/pexels-photo-12222912.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/12222912/pexels-photo-12222912.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/12222912/pexels-photo-12222912.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/12222912/pexels-photo-12222912.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/12222912/pexels-photo-12222912.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/12222912/pexels-photo-12222912.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Portrait of Woman Wearing Black Top and Jeans with Thunder Pattern"},{type:"Photo",id:7275390,width:2832,height:4240,url:"https://www.pexels.com/photo/stylish-black-woman-standing-in-studio-7275390/",photographer:"Dziana Hasanbekava",photographer_url:"https://www.pexels.com/@dziana-hasanbekava",photographer_id:3655843,avg_color:"#8D8B77",src:{original:"https://images.pexels.com/photos/7275390/pexels-photo-7275390.jpeg",large2x:"https://images.pexels.com/photos/7275390/pexels-photo-7275390.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/7275390/pexels-photo-7275390.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/7275390/pexels-photo-7275390.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/7275390/pexels-photo-7275390.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/7275390/pexels-photo-7275390.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/7275390/pexels-photo-7275390.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/7275390/pexels-photo-7275390.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Full body of young African American female with long braids in trendy outfit standing in creative studio with closed eyes"},{type:"Photo",id:15075e3,width:3072,height:3072,url:"https://www.pexels.com/photo/woman-in-pink-tank-top-with-colorful-strip-scarf-lying-on-ball-pit-15075000/",photographer:"Pierre Agogue",photographer_url:"https://www.pexels.com/@pierre-agogue-241204998",photographer_id:241204998,avg_color:"#594637",src:{original:"https://images.pexels.com/photos/15075000/pexels-photo-15075000.jpeg",large2x:"https://images.pexels.com/photos/15075000/pexels-photo-15075000.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/15075000/pexels-photo-15075000.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/15075000/pexels-photo-15075000.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/15075000/pexels-photo-15075000.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/15075000/pexels-photo-15075000.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/15075000/pexels-photo-15075000.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/15075000/pexels-photo-15075000.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Woman in Pink Tank Top with Colorful Strip Scarf Lying on Ball Pit"},{type:"Photo",id:13984625,width:4e3,height:6e3,url:"https://www.pexels.com/photo/a-woman-in-a-gray-top-looking-at-orchid-flowers-13984625/",photographer:"Rizky Sabriansyah",photographer_url:"https://www.pexels.com/@rizkysabriansyah",photographer_id:46443521,avg_color:"#A0A096",src:{original:"https://images.pexels.com/photos/13984625/pexels-photo-13984625.jpeg",large2x:"https://images.pexels.com/photos/13984625/pexels-photo-13984625.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/13984625/pexels-photo-13984625.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/13984625/pexels-photo-13984625.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/13984625/pexels-photo-13984625.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/13984625/pexels-photo-13984625.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/13984625/pexels-photo-13984625.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/13984625/pexels-photo-13984625.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"A Woman in a Gray Top Looking at Orchid Flowers"},{type:"Photo",id:10547284,width:3863,height:5794,url:"https://www.pexels.com/photo/women-wearing-suits-looking-away-10547284/",photographer:"cottonbro studio",photographer_url:"https://www.pexels.com/@cottonbro",photographer_id:1437723,avg_color:"#6D929A",src:{original:"https://images.pexels.com/photos/10547284/pexels-photo-10547284.jpeg",large2x:"https://images.pexels.com/photos/10547284/pexels-photo-10547284.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/10547284/pexels-photo-10547284.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/10547284/pexels-photo-10547284.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/10547284/pexels-photo-10547284.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/10547284/pexels-photo-10547284.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/10547284/pexels-photo-10547284.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/10547284/pexels-photo-10547284.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Women Wearing Suits Looking Away"}],rq=[{type:"Photo",id:572897,width:6914,height:4463,url:"https://www.pexels.com/photo/mountain-covered-snow-under-star-572897/",photographer:"eberhard grossgasteiger",photographer_url:"https://www.pexels.com/@eberhardgross",photographer_id:121938,avg_color:"#5D5A63",src:{original:"https://images.pexels.com/photos/572897/pexels-photo-572897.jpeg",large2x:"https://images.pexels.com/photos/572897/pexels-photo-572897.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/572897/pexels-photo-572897.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/572897/pexels-photo-572897.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/572897/pexels-photo-572897.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/572897/pexels-photo-572897.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/572897/pexels-photo-572897.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/572897/pexels-photo-572897.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Mountain Covered Snow Under Star"},{type:"Photo",id:3244513,width:5121,height:3525,url:"https://www.pexels.com/photo/brown-landscape-under-grey-sky-3244513/",photographer:"Andy Vu",photographer_url:"https://www.pexels.com/@andyhvu",photographer_id:1653971,avg_color:"#473C36",src:{original:"https://images.pexels.com/photos/3244513/pexels-photo-3244513.jpeg",large2x:"https://images.pexels.com/photos/3244513/pexels-photo-3244513.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3244513/pexels-photo-3244513.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3244513/pexels-photo-3244513.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3244513/pexels-photo-3244513.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3244513/pexels-photo-3244513.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3244513/pexels-photo-3244513.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3244513/pexels-photo-3244513.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Brown Landscape Under Grey Sky"},{type:"Photo",id:5282269,width:2945,height:3929,url:"https://www.pexels.com/photo/brown-mountain-covered-with-clouds-5282269/",photographer:"Nick Wehrli",photographer_url:"https://www.pexels.com/@oidonnyboy",photographer_id:1803654,avg_color:"#6D7170",src:{original:"https://images.pexels.com/photos/5282269/pexels-photo-5282269.jpeg",large2x:"https://images.pexels.com/photos/5282269/pexels-photo-5282269.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/5282269/pexels-photo-5282269.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/5282269/pexels-photo-5282269.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/5282269/pexels-photo-5282269.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/5282269/pexels-photo-5282269.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/5282269/pexels-photo-5282269.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/5282269/pexels-photo-5282269.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Brown Mountain Covered With Clouds"},{type:"Photo",id:1784578,width:3985,height:6e3,url:"https://www.pexels.com/photo/orange-jellyfish-wallpaper-1784578/",photographer:"Zetong Li",photographer_url:"https://www.pexels.com/@zetong-li-880728",photographer_id:880728,avg_color:"#F99654",src:{original:"https://images.pexels.com/photos/1784578/pexels-photo-1784578.jpeg",large2x:"https://images.pexels.com/photos/1784578/pexels-photo-1784578.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1784578/pexels-photo-1784578.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1784578/pexels-photo-1784578.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1784578/pexels-photo-1784578.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1784578/pexels-photo-1784578.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1784578/pexels-photo-1784578.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1784578/pexels-photo-1784578.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Orange Jellyfish Wallpaper"},{type:"Photo",id:2649403,width:7782,height:5191,url:"https://www.pexels.com/photo/photo-of-body-of-water-2649403/",photographer:"Quang Nguyen Vinh",photographer_url:"https://www.pexels.com/@quang-nguyen-vinh-222549",photographer_id:222549,avg_color:"#6E7891",src:{original:"https://images.pexels.com/photos/2649403/pexels-photo-2649403.jpeg",large2x:"https://images.pexels.com/photos/2649403/pexels-photo-2649403.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2649403/pexels-photo-2649403.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2649403/pexels-photo-2649403.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2649403/pexels-photo-2649403.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2649403/pexels-photo-2649403.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2649403/pexels-photo-2649403.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2649403/pexels-photo-2649403.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo Of Body Of Water "},{type:"Photo",id:3331094,width:2992,height:3992,url:"https://www.pexels.com/photo/areal-photo-of-sea-wave-3331094/",photographer:"Max Ravier",photographer_url:"https://www.pexels.com/@maxravier",photographer_id:1183810,avg_color:"#3F4C4D",src:{original:"https://images.pexels.com/photos/3331094/pexels-photo-3331094.jpeg",large2x:"https://images.pexels.com/photos/3331094/pexels-photo-3331094.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3331094/pexels-photo-3331094.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3331094/pexels-photo-3331094.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3331094/pexels-photo-3331094.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3331094/pexels-photo-3331094.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3331094/pexels-photo-3331094.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3331094/pexels-photo-3331094.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Areal Photo of Sea Wave"},{type:"Photo",id:3493777,width:3e3,height:3e3,url:"https://www.pexels.com/photo/photo-of-bridge-under-white-clouds-3493777/",photographer:"Aleksey Kuprikov",photographer_url:"https://www.pexels.com/@aleksey-kuprikov-1883853",photographer_id:1883853,avg_color:"#6B7874",src:{original:"https://images.pexels.com/photos/3493777/pexels-photo-3493777.jpeg",large2x:"https://images.pexels.com/photos/3493777/pexels-photo-3493777.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3493777/pexels-photo-3493777.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3493777/pexels-photo-3493777.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3493777/pexels-photo-3493777.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3493777/pexels-photo-3493777.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3493777/pexels-photo-3493777.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3493777/pexels-photo-3493777.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo of Bridge Under White Clouds"},{type:"Photo",id:2909077,width:6e3,height:4e3,url:"https://www.pexels.com/photo/scenic-photo-of-clouds-during-daytime-2909077/",photographer:"Stanislav Kondratiev",photographer_url:"https://www.pexels.com/@technobulka",photographer_id:1497515,avg_color:"#7E848C",src:{original:"https://images.pexels.com/photos/2909077/pexels-photo-2909077.jpeg",large2x:"https://images.pexels.com/photos/2909077/pexels-photo-2909077.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2909077/pexels-photo-2909077.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2909077/pexels-photo-2909077.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2909077/pexels-photo-2909077.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2909077/pexels-photo-2909077.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2909077/pexels-photo-2909077.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2909077/pexels-photo-2909077.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Scenic Photo Of Clouds During Daytime"},{type:"Photo",id:3621344,width:3648,height:5472,url:"https://www.pexels.com/photo/person-in-the-middle-of-a-forest-3621344/",photographer:"Sem Steenbergen",photographer_url:"https://www.pexels.com/@ssteenbergenn",photographer_id:1263156,avg_color:"#88857C",src:{original:"https://images.pexels.com/photos/3621344/pexels-photo-3621344.jpeg",large2x:"https://images.pexels.com/photos/3621344/pexels-photo-3621344.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3621344/pexels-photo-3621344.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3621344/pexels-photo-3621344.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3621344/pexels-photo-3621344.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3621344/pexels-photo-3621344.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3621344/pexels-photo-3621344.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3621344/pexels-photo-3621344.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Person In The Middle Of A Forest"},{type:"Photo",id:3214944,width:3807,height:5710,url:"https://www.pexels.com/photo/palm-trees-at-beach-3214944/",photographer:"Alex Azabache",photographer_url:"https://www.pexels.com/@alexazabache",photographer_id:1664241,avg_color:"#7F645B",src:{original:"https://images.pexels.com/photos/3214944/pexels-photo-3214944.jpeg",large2x:"https://images.pexels.com/photos/3214944/pexels-photo-3214944.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3214944/pexels-photo-3214944.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3214944/pexels-photo-3214944.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3214944/pexels-photo-3214944.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3214944/pexels-photo-3214944.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3214944/pexels-photo-3214944.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3214944/pexels-photo-3214944.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Palm Trees at Beach"},{type:"Photo",id:3265460,width:3959,height:5939,url:"https://www.pexels.com/photo/reflection-of-trees-3265460/",photographer:"Stijn Dijkstra",photographer_url:"https://www.pexels.com/@stijn-dijkstra-1306815",photographer_id:1306815,avg_color:"#829DAB",src:{original:"https://images.pexels.com/photos/3265460/pexels-photo-3265460.jpeg",large2x:"https://images.pexels.com/photos/3265460/pexels-photo-3265460.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3265460/pexels-photo-3265460.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3265460/pexels-photo-3265460.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3265460/pexels-photo-3265460.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3265460/pexels-photo-3265460.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3265460/pexels-photo-3265460.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3265460/pexels-photo-3265460.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Reflection of Trees"},{type:"Photo",id:3224156,width:2884,height:3605,url:"https://www.pexels.com/photo/photo-of-mountain-during-dawn-3224156/",photographer:"Hert Niks",photographer_url:"https://www.pexels.com/@hertwashere",photographer_id:1495637,avg_color:"#B78B9A",src:{original:"https://images.pexels.com/photos/3224156/pexels-photo-3224156.jpeg",large2x:"https://images.pexels.com/photos/3224156/pexels-photo-3224156.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3224156/pexels-photo-3224156.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3224156/pexels-photo-3224156.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3224156/pexels-photo-3224156.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3224156/pexels-photo-3224156.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3224156/pexels-photo-3224156.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3224156/pexels-photo-3224156.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo Of Mountain During Dawn"},{type:"Photo",id:709552,width:3504,height:2336,url:"https://www.pexels.com/photo/body-of-water-between-green-leaf-trees-709552/",photographer:"Ian Turnell",photographer_url:"https://www.pexels.com/@samandgos",photographer_id:221734,avg_color:"#3D513E",src:{original:"https://images.pexels.com/photos/709552/pexels-photo-709552.jpeg",large2x:"https://images.pexels.com/photos/709552/pexels-photo-709552.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/709552/pexels-photo-709552.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/709552/pexels-photo-709552.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/709552/pexels-photo-709552.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/709552/pexels-photo-709552.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/709552/pexels-photo-709552.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/709552/pexels-photo-709552.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Body of Water Between Green Leaf Trees"},{type:"Photo",id:788200,width:3456,height:4320,url:"https://www.pexels.com/photo/photography-of-waterfalls-between-trees-788200/",photographer:"Rifqi Ramadhan",photographer_url:"https://www.pexels.com/@rifkyilhamrd",photographer_id:257470,avg_color:"#33655E",src:{original:"https://images.pexels.com/photos/788200/pexels-photo-788200.jpeg",large2x:"https://images.pexels.com/photos/788200/pexels-photo-788200.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/788200/pexels-photo-788200.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/788200/pexels-photo-788200.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/788200/pexels-photo-788200.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/788200/pexels-photo-788200.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/788200/pexels-photo-788200.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/788200/pexels-photo-788200.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photography Of Waterfalls Between Trees"},{type:"Photo",id:2166695,width:5304,height:7952,url:"https://www.pexels.com/photo/foggy-lake-2166695/",photographer:"Quang Nguyen Vinh",photographer_url:"https://www.pexels.com/@quang-nguyen-vinh-222549",photographer_id:222549,avg_color:"#7D8C8F",src:{original:"https://images.pexels.com/photos/2166695/pexels-photo-2166695.jpeg",large2x:"https://images.pexels.com/photos/2166695/pexels-photo-2166695.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2166695/pexels-photo-2166695.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2166695/pexels-photo-2166695.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2166695/pexels-photo-2166695.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2166695/pexels-photo-2166695.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2166695/pexels-photo-2166695.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2166695/pexels-photo-2166695.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Foggy Lake"},{type:"Photo",id:355288,width:5106,height:3404,url:"https://www.pexels.com/photo/macro-photography-of-water-waves-355288/",photographer:"Pixabay",photographer_url:"https://www.pexels.com/@pixabay",photographer_id:2659,avg_color:"#2D5867",src:{original:"https://images.pexels.com/photos/355288/pexels-photo-355288.jpeg",large2x:"https://images.pexels.com/photos/355288/pexels-photo-355288.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/355288/pexels-photo-355288.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/355288/pexels-photo-355288.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/355288/pexels-photo-355288.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/355288/pexels-photo-355288.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/355288/pexels-photo-355288.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/355288/pexels-photo-355288.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Macro Photography of Water Waves"},{type:"Photo",id:2098405,width:3648,height:5472,url:"https://www.pexels.com/photo/house-near-lake-2098405/",photographer:"eberhard grossgasteiger",photographer_url:"https://www.pexels.com/@eberhardgross",photographer_id:121938,avg_color:"#162F37",src:{original:"https://images.pexels.com/photos/2098405/pexels-photo-2098405.jpeg",large2x:"https://images.pexels.com/photos/2098405/pexels-photo-2098405.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2098405/pexels-photo-2098405.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2098405/pexels-photo-2098405.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2098405/pexels-photo-2098405.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2098405/pexels-photo-2098405.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2098405/pexels-photo-2098405.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2098405/pexels-photo-2098405.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"House Near Lake"},{type:"Photo",id:1420440,width:3007,height:4511,url:"https://www.pexels.com/photo/sunray-through-trees-1420440/",photographer:"Todd Trapani",photographer_url:"https://www.pexels.com/@todd-trapani-488382",photographer_id:488382,avg_color:"#977F55",src:{original:"https://images.pexels.com/photos/1420440/pexels-photo-1420440.jpeg",large2x:"https://images.pexels.com/photos/1420440/pexels-photo-1420440.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1420440/pexels-photo-1420440.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1420440/pexels-photo-1420440.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1420440/pexels-photo-1420440.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1420440/pexels-photo-1420440.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1420440/pexels-photo-1420440.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1420440/pexels-photo-1420440.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Sunray Through Trees"},{type:"Photo",id:247600,width:4288,height:2704,url:"https://www.pexels.com/photo/scenic-view-of-lake-in-forest-247600/",photographer:"Pixabay",photographer_url:"https://www.pexels.com/@pixabay",photographer_id:2659,avg_color:"#426E6B",src:{original:"https://images.pexels.com/photos/247600/pexels-photo-247600.jpeg",large2x:"https://images.pexels.com/photos/247600/pexels-photo-247600.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/247600/pexels-photo-247600.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/247600/pexels-photo-247600.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/247600/pexels-photo-247600.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/247600/pexels-photo-247600.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/247600/pexels-photo-247600.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/247600/pexels-photo-247600.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Scenic View of Lake in Forest"},{type:"Photo",id:87812,width:2048,height:1365,url:"https://www.pexels.com/photo/silhouette-of-grasses-against-the-light-of-setting-sun-87812/",photographer:"brittany",photographer_url:"https://www.pexels.com/@brittany-17733",photographer_id:17733,avg_color:"#846B52",src:{original:"https://images.pexels.com/photos/87812/pexels-photo-87812.jpeg",large2x:"https://images.pexels.com/photos/87812/pexels-photo-87812.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/87812/pexels-photo-87812.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/87812/pexels-photo-87812.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/87812/pexels-photo-87812.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/87812/pexels-photo-87812.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/87812/pexels-photo-87812.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/87812/pexels-photo-87812.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Silhouette of Grasses Against the Light of Setting Sun"},{type:"Photo",id:1034887,width:4928,height:3264,url:"https://www.pexels.com/photo/green-grass-field-and-mountain-1034887/",photographer:"Rido Alwarno",photographer_url:"https://www.pexels.com/@ridoframe",photographer_id:259752,avg_color:"#747F77",src:{original:"https://images.pexels.com/photos/1034887/pexels-photo-1034887.jpeg",large2x:"https://images.pexels.com/photos/1034887/pexels-photo-1034887.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1034887/pexels-photo-1034887.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1034887/pexels-photo-1034887.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1034887/pexels-photo-1034887.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1034887/pexels-photo-1034887.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1034887/pexels-photo-1034887.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1034887/pexels-photo-1034887.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Green Grass Field and Mountain"},{type:"Photo",id:1192662,width:2978,height:4467,url:"https://www.pexels.com/photo/landscape-photography-of-body-of-water-near-mountains-1192662/",photographer:"Oziel Gómez",photographer_url:"https://www.pexels.com/@ozgomz",photographer_id:270062,avg_color:"#486777",src:{original:"https://images.pexels.com/photos/1192662/pexels-photo-1192662.jpeg",large2x:"https://images.pexels.com/photos/1192662/pexels-photo-1192662.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1192662/pexels-photo-1192662.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1192662/pexels-photo-1192662.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1192662/pexels-photo-1192662.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1192662/pexels-photo-1192662.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1192662/pexels-photo-1192662.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1192662/pexels-photo-1192662.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Landscape Photography of Body of Water Near Mountains"},{type:"Photo",id:2189682,width:3456,height:4320,url:"https://www.pexels.com/photo/body-of-water-near-mountain-2189682/",photographer:"Emre Can Acer",photographer_url:"https://www.pexels.com/@emrecan",photographer_id:1090567,avg_color:"#98A49D",src:{original:"https://images.pexels.com/photos/2189682/pexels-photo-2189682.jpeg",large2x:"https://images.pexels.com/photos/2189682/pexels-photo-2189682.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2189682/pexels-photo-2189682.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2189682/pexels-photo-2189682.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2189682/pexels-photo-2189682.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2189682/pexels-photo-2189682.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2189682/pexels-photo-2189682.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2189682/pexels-photo-2189682.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Body Of Water Near Mountain"},{type:"Photo",id:2724664,width:2048,height:2560,url:"https://www.pexels.com/photo/photo-of-person-standing-across-the-mountain-2724664/",photographer:"Trace Hudson",photographer_url:"https://www.pexels.com/@tracehudson",photographer_id:1235883,avg_color:"#5F6271",src:{original:"https://images.pexels.com/photos/2724664/pexels-photo-2724664.jpeg",large2x:"https://images.pexels.com/photos/2724664/pexels-photo-2724664.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2724664/pexels-photo-2724664.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2724664/pexels-photo-2724664.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2724664/pexels-photo-2724664.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2724664/pexels-photo-2724664.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2724664/pexels-photo-2724664.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2724664/pexels-photo-2724664.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo of Person Standing Across the Mountain"},{type:"Photo",id:1834399,width:2667,height:4e3,url:"https://www.pexels.com/photo/pine-trees-1834399/",photographer:"Yaroslav Shuraev",photographer_url:"https://www.pexels.com/@yaroslav-shuraev",photographer_id:649765,avg_color:"#74746F",src:{original:"https://images.pexels.com/photos/1834399/pexels-photo-1834399.jpeg",large2x:"https://images.pexels.com/photos/1834399/pexels-photo-1834399.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1834399/pexels-photo-1834399.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1834399/pexels-photo-1834399.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1834399/pexels-photo-1834399.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1834399/pexels-photo-1834399.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1834399/pexels-photo-1834399.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1834399/pexels-photo-1834399.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Pine Trees"},{type:"Photo",id:2627945,width:4e3,height:6e3,url:"https://www.pexels.com/photo/clouds-2627945/",photographer:"paul voie",photographer_url:"https://www.pexels.com/@paul-voie",photographer_id:1273920,avg_color:"#75524C",src:{original:"https://images.pexels.com/photos/2627945/pexels-photo-2627945.jpeg",large2x:"https://images.pexels.com/photos/2627945/pexels-photo-2627945.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2627945/pexels-photo-2627945.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2627945/pexels-photo-2627945.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2627945/pexels-photo-2627945.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2627945/pexels-photo-2627945.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2627945/pexels-photo-2627945.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2627945/pexels-photo-2627945.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Clouds"},{type:"Photo",id:2470655,width:3456,height:4935,url:"https://www.pexels.com/photo/pink-and-blue-sky-at-sunset-2470655/",photographer:"Darius Krause",photographer_url:"https://www.pexels.com/@dariuskrs",photographer_id:1144493,avg_color:"#B3ABCC",src:{original:"https://images.pexels.com/photos/2470655/pexels-photo-2470655.jpeg",large2x:"https://images.pexels.com/photos/2470655/pexels-photo-2470655.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2470655/pexels-photo-2470655.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2470655/pexels-photo-2470655.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2470655/pexels-photo-2470655.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2470655/pexels-photo-2470655.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2470655/pexels-photo-2470655.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2470655/pexels-photo-2470655.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Pink and Blue Sky at Sunset"},{type:"Photo",id:4601807,width:1874,height:2811,url:"https://www.pexels.com/photo/crescent-moon-on-a-pink-sky-4601807/",photographer:"Adonis Arias",photographer_url:"https://www.pexels.com/@adonisariass",photographer_id:2759275,avg_color:"#AF8B88",src:{original:"https://images.pexels.com/photos/4601807/pexels-photo-4601807.jpeg",large2x:"https://images.pexels.com/photos/4601807/pexels-photo-4601807.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/4601807/pexels-photo-4601807.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/4601807/pexels-photo-4601807.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/4601807/pexels-photo-4601807.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/4601807/pexels-photo-4601807.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/4601807/pexels-photo-4601807.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/4601807/pexels-photo-4601807.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Crescent Moon on a Pink Sky "},{type:"Photo",id:247160,width:3840,height:5760,url:"https://www.pexels.com/photo/brown-tree-trunk-247160/",photographer:"Markus Spiske",photographer_url:"https://www.pexels.com/@markusspiske",photographer_id:19851,avg_color:"#453F41",src:{original:"https://images.pexels.com/photos/247160/pexels-photo-247160.jpeg",large2x:"https://images.pexels.com/photos/247160/pexels-photo-247160.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/247160/pexels-photo-247160.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/247160/pexels-photo-247160.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/247160/pexels-photo-247160.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/247160/pexels-photo-247160.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/247160/pexels-photo-247160.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/247160/pexels-photo-247160.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Brown Tree Trunk"},{type:"Photo",id:2393835,width:3600,height:3600,url:"https://www.pexels.com/photo/photo-of-parked-motorcycle-2393835/",photographer:"Nishant Aneja",photographer_url:"https://www.pexels.com/@nishantaneja",photographer_id:1065076,avg_color:"#3D342A",src:{original:"https://images.pexels.com/photos/2393835/pexels-photo-2393835.jpeg",large2x:"https://images.pexels.com/photos/2393835/pexels-photo-2393835.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2393835/pexels-photo-2393835.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2393835/pexels-photo-2393835.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2393835/pexels-photo-2393835.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2393835/pexels-photo-2393835.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2393835/pexels-photo-2393835.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2393835/pexels-photo-2393835.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo of Parked Motorcycle"},{type:"Photo",id:2360684,width:3991,height:5986,url:"https://www.pexels.com/photo/green-trees-2360684/",photographer:"Tobias Bjørkli",photographer_url:"https://www.pexels.com/@tobiasbjorkli",photographer_id:706370,avg_color:"#2F3928",src:{original:"https://images.pexels.com/photos/2360684/pexels-photo-2360684.jpeg",large2x:"https://images.pexels.com/photos/2360684/pexels-photo-2360684.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2360684/pexels-photo-2360684.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2360684/pexels-photo-2360684.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2360684/pexels-photo-2360684.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2360684/pexels-photo-2360684.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2360684/pexels-photo-2360684.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2360684/pexels-photo-2360684.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Green Trees"},{type:"Photo",id:775201,width:1999,height:2998,url:"https://www.pexels.com/photo/black-hanging-bridge-surrounded-by-green-forest-trees-775201/",photographer:"Kaique Rocha",photographer_url:"https://www.pexels.com/@hikaique",photographer_id:4672,avg_color:"#3C423D",src:{original:"https://images.pexels.com/photos/775201/pexels-photo-775201.jpeg",large2x:"https://images.pexels.com/photos/775201/pexels-photo-775201.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/775201/pexels-photo-775201.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/775201/pexels-photo-775201.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/775201/pexels-photo-775201.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/775201/pexels-photo-775201.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/775201/pexels-photo-775201.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/775201/pexels-photo-775201.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Black Hanging Bridge Surrounded by Green Forest Trees"},{type:"Photo",id:2098427,width:2666,height:4e3,url:"https://www.pexels.com/photo/brown-rocky-mountain-photography-2098427/",photographer:"eberhard grossgasteiger",photographer_url:"https://www.pexels.com/@eberhardgross",photographer_id:121938,avg_color:"#181E26",src:{original:"https://images.pexels.com/photos/2098427/pexels-photo-2098427.jpeg",large2x:"https://images.pexels.com/photos/2098427/pexels-photo-2098427.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2098427/pexels-photo-2098427.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2098427/pexels-photo-2098427.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2098427/pexels-photo-2098427.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2098427/pexels-photo-2098427.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2098427/pexels-photo-2098427.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2098427/pexels-photo-2098427.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Brown Rocky Mountain Photography"},{type:"Photo",id:2178175,width:5304,height:7952,url:"https://www.pexels.com/photo/photo-of-a-boat-on-a-river-2178175/",photographer:"Quang Nguyen Vinh",photographer_url:"https://www.pexels.com/@quang-nguyen-vinh-222549",photographer_id:222549,avg_color:"#768491",src:{original:"https://images.pexels.com/photos/2178175/pexels-photo-2178175.jpeg",large2x:"https://images.pexels.com/photos/2178175/pexels-photo-2178175.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2178175/pexels-photo-2178175.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2178175/pexels-photo-2178175.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2178175/pexels-photo-2178175.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2178175/pexels-photo-2178175.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2178175/pexels-photo-2178175.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2178175/pexels-photo-2178175.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo of a Boat on a River"},{type:"Photo",id:2440061,width:3448,height:5168,url:"https://www.pexels.com/photo/forest-during-day-2440061/",photographer:"Ian Beckley",photographer_url:"https://www.pexels.com/@ian-beckley-1278367",photographer_id:1278367,avg_color:"#B47A5B",src:{original:"https://images.pexels.com/photos/2440061/pexels-photo-2440061.jpeg",large2x:"https://images.pexels.com/photos/2440061/pexels-photo-2440061.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2440061/pexels-photo-2440061.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2440061/pexels-photo-2440061.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2440061/pexels-photo-2440061.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2440061/pexels-photo-2440061.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2440061/pexels-photo-2440061.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2440061/pexels-photo-2440061.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Forest during Day"},{type:"Photo",id:2090653,width:2683,height:4096,url:"https://www.pexels.com/photo/photo-of-plants-in-front-of-house-2090653/",photographer:"Leah Kelley",photographer_url:"https://www.pexels.com/@leah-kelley-50725",photographer_id:50725,avg_color:"#C0C5C0",src:{original:"https://images.pexels.com/photos/2090653/pexels-photo-2090653.jpeg",large2x:"https://images.pexels.com/photos/2090653/pexels-photo-2090653.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2090653/pexels-photo-2090653.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2090653/pexels-photo-2090653.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2090653/pexels-photo-2090653.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2090653/pexels-photo-2090653.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2090653/pexels-photo-2090653.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2090653/pexels-photo-2090653.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Photo of Plants in Front of House"},{type:"Photo",id:1257860,width:3798,height:5689,url:"https://www.pexels.com/photo/stars-1257860/",photographer:"Philippe Donn",photographer_url:"https://www.pexels.com/@philippedonn",photographer_id:230606,avg_color:"#1C1F29",src:{original:"https://images.pexels.com/photos/1257860/pexels-photo-1257860.jpeg",large2x:"https://images.pexels.com/photos/1257860/pexels-photo-1257860.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1257860/pexels-photo-1257860.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1257860/pexels-photo-1257860.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1257860/pexels-photo-1257860.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1257860/pexels-photo-1257860.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1257860/pexels-photo-1257860.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1257860/pexels-photo-1257860.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Stars"},{type:"Photo",id:2079443,width:3456,height:5184,url:"https://www.pexels.com/photo/brown-wooden-table-and-chairs-2079443/",photographer:"Emre Can Acer",photographer_url:"https://www.pexels.com/@emrecan",photographer_id:1090567,avg_color:"#615C58",src:{original:"https://images.pexels.com/photos/2079443/pexels-photo-2079443.jpeg",large2x:"https://images.pexels.com/photos/2079443/pexels-photo-2079443.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2079443/pexels-photo-2079443.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2079443/pexels-photo-2079443.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2079443/pexels-photo-2079443.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2079443/pexels-photo-2079443.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2079443/pexels-photo-2079443.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2079443/pexels-photo-2079443.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Brown Wooden Table and Chairs"},{type:"Photo",id:16963896,width:3495,height:5242,url:"https://www.pexels.com/photo/celery-juice-16963896/",photographer:"Karl Solano",photographer_url:"https://www.pexels.com/@karlsolano",photographer_id:1413010,avg_color:"#2A3723",src:{original:"https://images.pexels.com/photos/16963896/pexels-photo-16963896.jpeg",large2x:"https://images.pexels.com/photos/16963896/pexels-photo-16963896.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16963896/pexels-photo-16963896.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16963896/pexels-photo-16963896.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16963896/pexels-photo-16963896.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16963896/pexels-photo-16963896.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16963896/pexels-photo-16963896.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16963896/pexels-photo-16963896.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Celery Juice"},{type:"Photo",id:16877637,width:3512,height:6240,url:"https://www.pexels.com/photo/close-up-of-a-white-clover-flower-16877637/",photographer:"Ahmet  Çiftçi",photographer_url:"https://www.pexels.com/@ahmet-ciftci-110688844",photographer_id:110688844,avg_color:"#475A2C",src:{original:"https://images.pexels.com/photos/16877637/pexels-photo-16877637.jpeg",large2x:"https://images.pexels.com/photos/16877637/pexels-photo-16877637.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16877637/pexels-photo-16877637.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16877637/pexels-photo-16877637.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16877637/pexels-photo-16877637.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16877637/pexels-photo-16877637.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16877637/pexels-photo-16877637.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16877637/pexels-photo-16877637.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of blur, clover, environment"},{type:"Photo",id:7532428,width:6e3,height:4e3,url:"https://www.pexels.com/photo/a-caribou-on-a-grassy-field-7532428/",photographer:"patrice schoefolt",photographer_url:"https://www.pexels.com/@sunny67",photographer_id:1867668,avg_color:"#747658",src:{original:"https://images.pexels.com/photos/7532428/pexels-photo-7532428.jpeg",large2x:"https://images.pexels.com/photos/7532428/pexels-photo-7532428.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/7532428/pexels-photo-7532428.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/7532428/pexels-photo-7532428.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/7532428/pexels-photo-7532428.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/7532428/pexels-photo-7532428.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/7532428/pexels-photo-7532428.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/7532428/pexels-photo-7532428.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"A Caribou on a Grassy Field"},{type:"Photo",id:17481292,width:3155,height:4732,url:"https://www.pexels.com/photo/17481292/",photographer:"Mehmet Turgut  Kirkgoz",photographer_url:"https://www.pexels.com/@tkirkgoz",photographer_id:2891577,avg_color:"#5C5E50",src:{original:"https://images.pexels.com/photos/17481292/pexels-photo-17481292.jpeg",large2x:"https://images.pexels.com/photos/17481292/pexels-photo-17481292.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17481292/pexels-photo-17481292.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17481292/pexels-photo-17481292.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17481292/pexels-photo-17481292.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17481292/pexels-photo-17481292.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17481292/pexels-photo-17481292.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17481292/pexels-photo-17481292.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:""},{type:"Photo",id:3647075,width:5405,height:3603,url:"https://www.pexels.com/photo/neglected-old-door-3647075/",photographer:"Maria Tyutina",photographer_url:"https://www.pexels.com/@mtyutina",photographer_id:68736,avg_color:"#A4A2A5",src:{original:"https://images.pexels.com/photos/3647075/pexels-photo-3647075.jpeg",large2x:"https://images.pexels.com/photos/3647075/pexels-photo-3647075.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/3647075/pexels-photo-3647075.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/3647075/pexels-photo-3647075.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/3647075/pexels-photo-3647075.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/3647075/pexels-photo-3647075.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/3647075/pexels-photo-3647075.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/3647075/pexels-photo-3647075.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Neglected Old Door"},{type:"Photo",id:17161076,width:4024,height:6048,url:"https://www.pexels.com/photo/relaxation-glass-luxury-flower-17161076/",photographer:"Meri Verbina",photographer_url:"https://www.pexels.com/@meri-verbina-450425482",photographer_id:450425482,avg_color:"#937CA6",src:{original:"https://images.pexels.com/photos/17161076/pexels-photo-17161076.jpeg",large2x:"https://images.pexels.com/photos/17161076/pexels-photo-17161076.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17161076/pexels-photo-17161076.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17161076/pexels-photo-17161076.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17161076/pexels-photo-17161076.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17161076/pexels-photo-17161076.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17161076/pexels-photo-17161076.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17161076/pexels-photo-17161076.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of aromatherapy, bath, dermatology"},{type:"Photo",id:17405328,width:3208,height:5702,url:"https://www.pexels.com/photo/large-doorway-on-a-lavender-field-17405328/",photographer:"M e r v e",photographer_url:"https://www.pexels.com/@m-e-r-v-e-42708268",photographer_id:42708268,avg_color:"#44566A",src:{original:"https://images.pexels.com/photos/17405328/pexels-photo-17405328.jpeg",large2x:"https://images.pexels.com/photos/17405328/pexels-photo-17405328.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17405328/pexels-photo-17405328.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17405328/pexels-photo-17405328.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17405328/pexels-photo-17405328.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17405328/pexels-photo-17405328.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17405328/pexels-photo-17405328.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17405328/pexels-photo-17405328.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:""},{type:"Photo",id:7573657,width:2999,height:3702,url:"https://www.pexels.com/photo/grayscale-photo-of-arched-hallway-7573657/",photographer:"Shahadat  Hossain",photographer_url:"https://www.pexels.com/@shahadat-hossain-1853045",photographer_id:1853045,avg_color:"#232323",src:{original:"https://images.pexels.com/photos/7573657/pexels-photo-7573657.jpeg",large2x:"https://images.pexels.com/photos/7573657/pexels-photo-7573657.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/7573657/pexels-photo-7573657.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/7573657/pexels-photo-7573657.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/7573657/pexels-photo-7573657.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/7573657/pexels-photo-7573657.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/7573657/pexels-photo-7573657.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/7573657/pexels-photo-7573657.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Grayscale Photo of Arched Hallway"},{type:"Photo",id:11843497,width:3900,height:5850,url:"https://www.pexels.com/photo/dark-tunnel-leading-towards-shore-11843497/",photographer:"Mathilde Langevin",photographer_url:"https://www.pexels.com/@mathilde",photographer_id:157994802,avg_color:"#16130E",src:{original:"https://images.pexels.com/photos/11843497/pexels-photo-11843497.jpeg",large2x:"https://images.pexels.com/photos/11843497/pexels-photo-11843497.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/11843497/pexels-photo-11843497.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/11843497/pexels-photo-11843497.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/11843497/pexels-photo-11843497.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/11843497/pexels-photo-11843497.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/11843497/pexels-photo-11843497.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/11843497/pexels-photo-11843497.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Dark Tunnel Leading Towards Shore"},{type:"Photo",id:15873647,width:3024,height:4032,url:"https://www.pexels.com/photo/building-in-black-and-white-15873647/",photographer:"Amina",photographer_url:"https://www.pexels.com/@amina-165508359",photographer_id:165508359,avg_color:"#6B6B6B",src:{original:"https://images.pexels.com/photos/15873647/pexels-photo-15873647.jpeg",large2x:"https://images.pexels.com/photos/15873647/pexels-photo-15873647.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/15873647/pexels-photo-15873647.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/15873647/pexels-photo-15873647.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/15873647/pexels-photo-15873647.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/15873647/pexels-photo-15873647.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/15873647/pexels-photo-15873647.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/15873647/pexels-photo-15873647.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Building in Black and White"},{type:"Photo",id:14966916,width:3456,height:5184,url:"https://www.pexels.com/photo/dome-of-the-church-of-san-francisco-in-san-miguel-de-allende-14966916/",photographer:"Christian Luengas",photographer_url:"https://www.pexels.com/@jentssen",photographer_id:332284505,avg_color:"#6A6A60",src:{original:"https://images.pexels.com/photos/14966916/pexels-photo-14966916.jpeg",large2x:"https://images.pexels.com/photos/14966916/pexels-photo-14966916.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/14966916/pexels-photo-14966916.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/14966916/pexels-photo-14966916.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/14966916/pexels-photo-14966916.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/14966916/pexels-photo-14966916.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/14966916/pexels-photo-14966916.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/14966916/pexels-photo-14966916.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Dome of the Church of San Francisco in San Miguel de Allende"},{type:"Photo",id:11184989,width:4e3,height:6e3,url:"https://www.pexels.com/photo/tree-trunk-in-close-up-photography-11184989/",photographer:"Aedrian",photographer_url:"https://www.pexels.com/@aedrian",photographer_id:29419609,avg_color:"#1A1613",src:{original:"https://images.pexels.com/photos/11184989/pexels-photo-11184989.jpeg",large2x:"https://images.pexels.com/photos/11184989/pexels-photo-11184989.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/11184989/pexels-photo-11184989.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/11184989/pexels-photo-11184989.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/11184989/pexels-photo-11184989.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/11184989/pexels-photo-11184989.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/11184989/pexels-photo-11184989.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/11184989/pexels-photo-11184989.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Tree Trunk in Close Up Photography"},{type:"Photo",id:17436056,width:7008,height:4672,url:"https://www.pexels.com/photo/sea-beach-vacation-sand-17436056/",photographer:"Katia Miasoed",photographer_url:"https://www.pexels.com/@katia-miasoed-624959709",photographer_id:624959709,avg_color:"#644D3D",src:{original:"https://images.pexels.com/photos/17436056/pexels-photo-17436056.jpeg",large2x:"https://images.pexels.com/photos/17436056/pexels-photo-17436056.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17436056/pexels-photo-17436056.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17436056/pexels-photo-17436056.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17436056/pexels-photo-17436056.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17436056/pexels-photo-17436056.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17436056/pexels-photo-17436056.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17436056/pexels-photo-17436056.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:""},{type:"Photo",id:17029301,width:4e3,height:6e3,url:"https://www.pexels.com/photo/desert-leaf-medicine-cactus-17029301/",photographer:"Gilmer Diaz Estela",photographer_url:"https://www.pexels.com/@gilmerdiaz",photographer_id:1208490,avg_color:"#5B6451",src:{original:"https://images.pexels.com/photos/17029301/pexels-photo-17029301.jpeg",large2x:"https://images.pexels.com/photos/17029301/pexels-photo-17029301.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17029301/pexels-photo-17029301.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17029301/pexels-photo-17029301.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17029301/pexels-photo-17029301.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17029301/pexels-photo-17029301.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17029301/pexels-photo-17029301.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17029301/pexels-photo-17029301.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of agave, aloe, aloe vera"},{type:"Photo",id:16886454,width:2688,height:4032,url:"https://www.pexels.com/photo/wood-summer-garden-animal-16886454/",photographer:"Big Element",photographer_url:"https://www.pexels.com/@big-element-418917601",photographer_id:418917601,avg_color:"#495845",src:{original:"https://images.pexels.com/photos/16886454/pexels-photo-16886454.jpeg",large2x:"https://images.pexels.com/photos/16886454/pexels-photo-16886454.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16886454/pexels-photo-16886454.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16886454/pexels-photo-16886454.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16886454/pexels-photo-16886454.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16886454/pexels-photo-16886454.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16886454/pexels-photo-16886454.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16886454/pexels-photo-16886454.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of animal, biology, blur"},{type:"Photo",id:16984227,width:2671,height:4006,url:"https://www.pexels.com/photo/playa-16984227/",photographer:"Andrea Garibay",photographer_url:"https://www.pexels.com/@andreagaribay",photographer_id:280714993,avg_color:"#958E7E",src:{original:"https://images.pexels.com/photos/16984227/pexels-photo-16984227.jpeg",large2x:"https://images.pexels.com/photos/16984227/pexels-photo-16984227.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16984227/pexels-photo-16984227.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16984227/pexels-photo-16984227.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16984227/pexels-photo-16984227.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16984227/pexels-photo-16984227.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16984227/pexels-photo-16984227.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16984227/pexels-photo-16984227.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"PLAYA"},{type:"Photo",id:16972014,width:4e3,height:6e3,url:"https://www.pexels.com/photo/greenway-16972014/",photographer:"3Colour_s",photographer_url:"https://www.pexels.com/@3colour_s-553088217",photographer_id:553088217,avg_color:"#A4A293",src:{original:"https://images.pexels.com/photos/16972014/pexels-photo-16972014.jpeg",large2x:"https://images.pexels.com/photos/16972014/pexels-photo-16972014.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16972014/pexels-photo-16972014.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16972014/pexels-photo-16972014.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16972014/pexels-photo-16972014.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16972014/pexels-photo-16972014.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16972014/pexels-photo-16972014.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16972014/pexels-photo-16972014.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"GreenWay"},{type:"Photo",id:17381993,width:2710,height:3428,url:"https://www.pexels.com/photo/love-summer-garden-park-17381993/",photographer:"qiying wang",photographer_url:"https://www.pexels.com/@qiying-wang-622159881",photographer_id:622159881,avg_color:"#807C5F",src:{original:"https://images.pexels.com/photos/17381993/pexels-photo-17381993.jpeg",large2x:"https://images.pexels.com/photos/17381993/pexels-photo-17381993.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17381993/pexels-photo-17381993.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17381993/pexels-photo-17381993.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17381993/pexels-photo-17381993.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17381993/pexels-photo-17381993.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17381993/pexels-photo-17381993.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17381993/pexels-photo-17381993.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of beautiful, blooming, bright"},{type:"Photo",id:17145697,width:2660,height:3982,url:"https://www.pexels.com/photo/street-hotel-building-house-17145697/",photographer:"Josh Hild",photographer_url:"https://www.pexels.com/@josh-hild-1270765",photographer_id:1270765,avg_color:"#9E8E6D",src:{original:"https://images.pexels.com/photos/17145697/pexels-photo-17145697.jpeg",large2x:"https://images.pexels.com/photos/17145697/pexels-photo-17145697.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17145697/pexels-photo-17145697.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17145697/pexels-photo-17145697.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17145697/pexels-photo-17145697.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17145697/pexels-photo-17145697.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17145697/pexels-photo-17145697.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17145697/pexels-photo-17145697.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of architecture, balcony, building"},{type:"Photo",id:16336486,width:3264,height:4896,url:"https://www.pexels.com/photo/beautiful-daisies-in-top-view-16336486/",photographer:"miniperde",photographer_url:"https://www.pexels.com/@miniperde",photographer_id:325929688,avg_color:"#5E584A",src:{original:"https://images.pexels.com/photos/16336486/pexels-photo-16336486.jpeg",large2x:"https://images.pexels.com/photos/16336486/pexels-photo-16336486.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16336486/pexels-photo-16336486.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16336486/pexels-photo-16336486.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16336486/pexels-photo-16336486.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16336486/pexels-photo-16336486.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16336486/pexels-photo-16336486.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16336486/pexels-photo-16336486.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Beautiful Daisies in Top View"},{type:"Photo",id:12859059,width:4912,height:7360,url:"https://www.pexels.com/photo/still-life-photo-with-tangerines-and-a-vase-12859059/",photographer:"Kader D. Kahraman",photographer_url:"https://www.pexels.com/@kaderdygnn",photographer_id:1865434,avg_color:"#ECE5DF",src:{original:"https://images.pexels.com/photos/12859059/pexels-photo-12859059.jpeg",large2x:"https://images.pexels.com/photos/12859059/pexels-photo-12859059.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/12859059/pexels-photo-12859059.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/12859059/pexels-photo-12859059.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/12859059/pexels-photo-12859059.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/12859059/pexels-photo-12859059.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/12859059/pexels-photo-12859059.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/12859059/pexels-photo-12859059.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Still Life Photo with Tangerines and a Vase"},{type:"Photo",id:16513277,width:4673,height:7008,url:"https://www.pexels.com/photo/tulips-in-glass-vase-on-table-16513277/",photographer:"Valeriya Kobzar",photographer_url:"https://www.pexels.com/@valeriya-kobzar-42371713",photographer_id:42371713,avg_color:"#B3A195",src:{original:"https://images.pexels.com/photos/16513277/pexels-photo-16513277.jpeg",large2x:"https://images.pexels.com/photos/16513277/pexels-photo-16513277.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16513277/pexels-photo-16513277.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16513277/pexels-photo-16513277.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16513277/pexels-photo-16513277.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16513277/pexels-photo-16513277.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16513277/pexels-photo-16513277.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16513277/pexels-photo-16513277.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of art, bright, color"},{type:"Photo",id:7377076,width:2670,height:4e3,url:"https://www.pexels.com/photo/close-up-shot-of-an-alcoholic-beverage-on-a-shot-glass-7377076/",photographer:"Arina Krasnikova",photographer_url:"https://www.pexels.com/@arina-krasnikova",photographer_id:3414985,avg_color:"#7F6E58",src:{original:"https://images.pexels.com/photos/7377076/pexels-photo-7377076.jpeg",large2x:"https://images.pexels.com/photos/7377076/pexels-photo-7377076.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/7377076/pexels-photo-7377076.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/7377076/pexels-photo-7377076.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/7377076/pexels-photo-7377076.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/7377076/pexels-photo-7377076.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/7377076/pexels-photo-7377076.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/7377076/pexels-photo-7377076.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Close-Up Shot of an Alcoholic Beverage on a Shot Glass"},{type:"Photo",id:17476617,width:3552,height:5328,url:"https://www.pexels.com/photo/city-building-tower-sky-background-17476617/",photographer:"AhmadReza Pishnamazi",photographer_url:"https://www.pexels.com/@ahmadreza-pishnamazi-285173651",photographer_id:285173651,avg_color:"#555B59",src:{original:"https://images.pexels.com/photos/17476617/pexels-photo-17476617.jpeg",large2x:"https://images.pexels.com/photos/17476617/pexels-photo-17476617.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17476617/pexels-photo-17476617.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17476617/pexels-photo-17476617.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17476617/pexels-photo-17476617.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17476617/pexels-photo-17476617.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17476617/pexels-photo-17476617.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17476617/pexels-photo-17476617.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of building, building construction, city"},{type:"Photo",id:11520132,width:3264,height:4928,url:"https://www.pexels.com/photo/cake-fruit-and-coffee-on-the-table-11520132/",photographer:"Lalezarfa",photographer_url:"https://www.pexels.com/@lalezarfa-61078864",photographer_id:61078864,avg_color:"#655243",src:{original:"https://images.pexels.com/photos/11520132/pexels-photo-11520132.jpeg",large2x:"https://images.pexels.com/photos/11520132/pexels-photo-11520132.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/11520132/pexels-photo-11520132.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/11520132/pexels-photo-11520132.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/11520132/pexels-photo-11520132.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/11520132/pexels-photo-11520132.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/11520132/pexels-photo-11520132.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/11520132/pexels-photo-11520132.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Cake, Fruit and Coffee on the Table "},{type:"Photo",id:17406435,width:4e3,height:6e3,url:"https://www.pexels.com/photo/food-fall-market-health-17406435/",photographer:"Patrick",photographer_url:"https://www.pexels.com/@jaralol",photographer_id:181009866,avg_color:"#962C1F",src:{original:"https://images.pexels.com/photos/17406435/pexels-photo-17406435.jpeg",large2x:"https://images.pexels.com/photos/17406435/pexels-photo-17406435.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17406435/pexels-photo-17406435.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17406435/pexels-photo-17406435.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17406435/pexels-photo-17406435.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17406435/pexels-photo-17406435.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17406435/pexels-photo-17406435.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17406435/pexels-photo-17406435.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:""},{type:"Photo",id:15013324,width:4031,height:5039,url:"https://www.pexels.com/photo/stand-pipe-on-sidewalk-15013324/",photographer:"Malcolm Garret",photographer_url:"https://www.pexels.com/@malcolm-garret-3023588",photographer_id:3023588,avg_color:"#706F6B",src:{original:"https://images.pexels.com/photos/15013324/pexels-photo-15013324.jpeg",large2x:"https://images.pexels.com/photos/15013324/pexels-photo-15013324.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/15013324/pexels-photo-15013324.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/15013324/pexels-photo-15013324.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/15013324/pexels-photo-15013324.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/15013324/pexels-photo-15013324.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/15013324/pexels-photo-15013324.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/15013324/pexels-photo-15013324.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Stand Pipe on Sidewalk"},{type:"Photo",id:4748360,width:3648,height:5472,url:"https://www.pexels.com/photo/fresh-fruits-and-fruit-tart-on-table-4748360/",photographer:"Regina Ferraz",photographer_url:"https://www.pexels.com/@reginaferraz",photographer_id:2332937,avg_color:"#B28460",src:{original:"https://images.pexels.com/photos/4748360/pexels-photo-4748360.jpeg",large2x:"https://images.pexels.com/photos/4748360/pexels-photo-4748360.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/4748360/pexels-photo-4748360.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/4748360/pexels-photo-4748360.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/4748360/pexels-photo-4748360.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/4748360/pexels-photo-4748360.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/4748360/pexels-photo-4748360.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/4748360/pexels-photo-4748360.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Fresh Fruits and Fruit Tart On Table"},{type:"Photo",id:16972094,width:1920,height:2880,url:"https://www.pexels.com/photo/perro-16972094/",photographer:"Aser Freh",photographer_url:"https://www.pexels.com/@aserfreh",photographer_id:576894862,avg_color:"#745A4B",src:{original:"https://images.pexels.com/photos/16972094/pexels-photo-16972094.jpeg",large2x:"https://images.pexels.com/photos/16972094/pexels-photo-16972094.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/16972094/pexels-photo-16972094.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/16972094/pexels-photo-16972094.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/16972094/pexels-photo-16972094.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/16972094/pexels-photo-16972094.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/16972094/pexels-photo-16972094.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/16972094/pexels-photo-16972094.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Perro"},{type:"Photo",id:8184547,width:3024,height:4032,url:"https://www.pexels.com/photo/brown-concrete-buildings-during-daytime-8184547/",photographer:"Ümit Kaya Balcı",photographer_url:"https://www.pexels.com/@umit-kaya-balci-1176437",photographer_id:1176437,avg_color:"#83605A",src:{original:"https://images.pexels.com/photos/8184547/pexels-photo-8184547.jpeg",large2x:"https://images.pexels.com/photos/8184547/pexels-photo-8184547.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/8184547/pexels-photo-8184547.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/8184547/pexels-photo-8184547.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/8184547/pexels-photo-8184547.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/8184547/pexels-photo-8184547.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/8184547/pexels-photo-8184547.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/8184547/pexels-photo-8184547.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Brown Concrete Buildings During Daytime"},{type:"Photo",id:17044901,width:3432,height:5148,url:"https://www.pexels.com/photo/snow-dawn-landscape-sunset-17044901/",photographer:"Renzo Tirado",photographer_url:"https://www.pexels.com/@rtiradom1",photographer_id:576902175,avg_color:"#2F546E",src:{original:"https://images.pexels.com/photos/17044901/pexels-photo-17044901.jpeg",large2x:"https://images.pexels.com/photos/17044901/pexels-photo-17044901.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17044901/pexels-photo-17044901.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17044901/pexels-photo-17044901.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17044901/pexels-photo-17044901.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17044901/pexels-photo-17044901.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17044901/pexels-photo-17044901.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17044901/pexels-photo-17044901.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of adventure, cliff, dawn"},{type:"Photo",id:17389139,width:3375,height:6e3,url:"https://www.pexels.com/photo/photography-architecture-high-travel-17389139/",photographer:"Jdlr Photography",photographer_url:"https://www.pexels.com/@jdlr-photography-622163228",photographer_id:622163228,avg_color:"#1578AF",src:{original:"https://images.pexels.com/photos/17389139/pexels-photo-17389139.jpeg",large2x:"https://images.pexels.com/photos/17389139/pexels-photo-17389139.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17389139/pexels-photo-17389139.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17389139/pexels-photo-17389139.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17389139/pexels-photo-17389139.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17389139/pexels-photo-17389139.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17389139/pexels-photo-17389139.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17389139/pexels-photo-17389139.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of 4k wallpaper, aesthetic wallpaper, architectural building"},{type:"Photo",id:8098981,width:3024,height:4032,url:"https://www.pexels.com/photo/mainsail-of-a-sailboat-under-blue-sky-8098981/",photographer:"Martin Alargent",photographer_url:"https://www.pexels.com/@martin-alargent-1165956",photographer_id:1165956,avg_color:"#5C7C93",src:{original:"https://images.pexels.com/photos/8098981/pexels-photo-8098981.jpeg",large2x:"https://images.pexels.com/photos/8098981/pexels-photo-8098981.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/8098981/pexels-photo-8098981.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/8098981/pexels-photo-8098981.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/8098981/pexels-photo-8098981.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/8098981/pexels-photo-8098981.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/8098981/pexels-photo-8098981.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/8098981/pexels-photo-8098981.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Mainsail of a Sailboat Under Blue Sky"},{type:"Photo",id:14944868,width:2330,height:2911,url:"https://www.pexels.com/photo/nature-animal-dog-pet-14944868/",photographer:"Imad Djaout",photographer_url:"https://www.pexels.com/@imad-djaout-404400464",photographer_id:404400464,avg_color:"#4B5D23",src:{original:"https://images.pexels.com/photos/14944868/pexels-photo-14944868.jpeg",large2x:"https://images.pexels.com/photos/14944868/pexels-photo-14944868.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/14944868/pexels-photo-14944868.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/14944868/pexels-photo-14944868.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/14944868/pexels-photo-14944868.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/14944868/pexels-photo-14944868.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/14944868/pexels-photo-14944868.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/14944868/pexels-photo-14944868.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of animal, animal de compagnie, breed"},{type:"Photo",id:17077788,width:2376,height:3648,url:"https://www.pexels.com/photo/city-landmark-street-building-17077788/",photographer:"Consuelo Borroni",photographer_url:"https://www.pexels.com/@consuelo-borroni-384723245",photographer_id:384723245,avg_color:"#818E94",src:{original:"https://images.pexels.com/photos/17077788/pexels-photo-17077788.jpeg",large2x:"https://images.pexels.com/photos/17077788/pexels-photo-17077788.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17077788/pexels-photo-17077788.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17077788/pexels-photo-17077788.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17077788/pexels-photo-17077788.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17077788/pexels-photo-17077788.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17077788/pexels-photo-17077788.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17077788/pexels-photo-17077788.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Free stock photo of administration, architecture, bedrock"},{type:"Photo",id:220201,width:2200,height:1464,url:"https://www.pexels.com/photo/planet-earth-220201/",photographer:"Pixabay",photographer_url:"https://www.pexels.com/@pixabay",photographer_id:2659,avg_color:"#23323F",src:{original:"https://images.pexels.com/photos/220201/pexels-photo-220201.jpeg",large2x:"https://images.pexels.com/photos/220201/pexels-photo-220201.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/220201/pexels-photo-220201.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/220201/pexels-photo-220201.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/220201/pexels-photo-220201.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/220201/pexels-photo-220201.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/220201/pexels-photo-220201.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/220201/pexels-photo-220201.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Planet Earth"},{type:"Photo",id:87009,width:2400,height:2400,url:"https://www.pexels.com/photo/blue-and-white-planet-display-87009/",photographer:"Pixabay",photographer_url:"https://www.pexels.com/@pixabay",photographer_id:2659,avg_color:"#191917",src:{original:"https://images.pexels.com/photos/87009/earth-soil-creep-moon-lunar-surface-87009.jpeg",large2x:"https://images.pexels.com/photos/87009/earth-soil-creep-moon-lunar-surface-87009.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/87009/earth-soil-creep-moon-lunar-surface-87009.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/87009/earth-soil-creep-moon-lunar-surface-87009.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/87009/earth-soil-creep-moon-lunar-surface-87009.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/87009/earth-soil-creep-moon-lunar-surface-87009.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/87009/earth-soil-creep-moon-lunar-surface-87009.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/87009/earth-soil-creep-moon-lunar-surface-87009.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Blue and White Planet Display"},{type:"Photo",id:2072600,width:5760,height:3840,url:"https://www.pexels.com/photo/low-angle-photography-of-coconut-trees-under-a-starry-sky-2072600/",photographer:"Elina Sazonova",photographer_url:"https://www.pexels.com/@elina-sazonova",photographer_id:912559,avg_color:"#2E3C3D",src:{original:"https://images.pexels.com/photos/2072600/pexels-photo-2072600.jpeg",large2x:"https://images.pexels.com/photos/2072600/pexels-photo-2072600.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/2072600/pexels-photo-2072600.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/2072600/pexels-photo-2072600.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/2072600/pexels-photo-2072600.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/2072600/pexels-photo-2072600.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/2072600/pexels-photo-2072600.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/2072600/pexels-photo-2072600.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Low Angle Photography of Coconut Trees Under A Starry Sky"},{type:"Photo",id:39561,width:4096,height:4096,url:"https://www.pexels.com/photo/purple-and-brown-colored-planet-39561/",photographer:"Pixabay",photographer_url:"https://www.pexels.com/@pixabay",photographer_id:2659,avg_color:"#53363D",src:{original:"https://images.pexels.com/photos/39561/solar-flare-sun-eruption-energy-39561.jpeg",large2x:"https://images.pexels.com/photos/39561/solar-flare-sun-eruption-energy-39561.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/39561/solar-flare-sun-eruption-energy-39561.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/39561/solar-flare-sun-eruption-energy-39561.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/39561/solar-flare-sun-eruption-energy-39561.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/39561/solar-flare-sun-eruption-energy-39561.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/39561/solar-flare-sun-eruption-energy-39561.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/39561/solar-flare-sun-eruption-energy-39561.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Purple and Brown Colored Planet"},{type:"Photo",id:17811,width:3456,height:5184,url:"https://www.pexels.com/photo/black-and-green-toucan-on-tree-branch-17811/",photographer:"Carlos Spitzer",photographer_url:"https://www.pexels.com/@lestrade84",photographer_id:1557,avg_color:"#657040",src:{original:"https://images.pexels.com/photos/17811/pexels-photo.jpg",large2x:"https://images.pexels.com/photos/17811/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/17811/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/17811/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/17811/pexels-photo.jpg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/17811/pexels-photo.jpg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/17811/pexels-photo.jpg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/17811/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Black and Green Toucan on Tree Branch"},{type:"Photo",id:1216482,width:5184,height:3456,url:"https://www.pexels.com/photo/two-brown-hen-and-one-red-rooster-1216482/",photographer:"samer daboul",photographer_url:"https://www.pexels.com/@samerdaboul",photographer_id:170881,avg_color:"#A48162",src:{original:"https://images.pexels.com/photos/1216482/pexels-photo-1216482.jpeg",large2x:"https://images.pexels.com/photos/1216482/pexels-photo-1216482.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1216482/pexels-photo-1216482.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1216482/pexels-photo-1216482.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1216482/pexels-photo-1216482.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1216482/pexels-photo-1216482.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1216482/pexels-photo-1216482.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1216482/pexels-photo-1216482.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Two Brown Hen and One Red Rooster"},{type:"Photo",id:1321524,width:2057,height:3086,url:"https://www.pexels.com/photo/butterflies-perched-on-flower-1321524/",photographer:"Jimmy Chan",photographer_url:"https://www.pexels.com/@jimbear",photographer_id:329300,avg_color:"#829D2E",src:{original:"https://images.pexels.com/photos/1321524/pexels-photo-1321524.jpeg",large2x:"https://images.pexels.com/photos/1321524/pexels-photo-1321524.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940",large:"https://images.pexels.com/photos/1321524/pexels-photo-1321524.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",medium:"https://images.pexels.com/photos/1321524/pexels-photo-1321524.jpeg?auto=compress&cs=tinysrgb&h=350",small:"https://images.pexels.com/photos/1321524/pexels-photo-1321524.jpeg?auto=compress&cs=tinysrgb&h=130",portrait:"https://images.pexels.com/photos/1321524/pexels-photo-1321524.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=1200&w=800",landscape:"https://images.pexels.com/photos/1321524/pexels-photo-1321524.jpeg?auto=compress&cs=tinysrgb&fit=crop&h=627&w=1200",tiny:"https://images.pexels.com/photos/1321524/pexels-photo-1321524.jpeg?auto=compress&cs=tinysrgb&dpr=1&fit=crop&h=200&w=280"},liked:!1,alt:"Butterflies Perched on Flower"}],aq={name:"GalleryPage",components:{Gallery:xv},data(){return{isOverlay:!1,isNatural:!0}},computed:{level(){return this.$route.query.level},size(){return this.$route.query.size},count(){return parseInt(this.$route.query.count)},isSafe(){return this.level==="safe"},links(){return(this.level==="safe"?rq:oq).slice(0,this.count)}},async mounted(){await gv()}},iq={class:"bg-white m-10"},lq={class:"flex"},cq={class:"text-6xl font-normal leading-normal mt-0 mb-2 text-pink-800"},pq={class:"text-green-500"};function uq(s,e,t,n,o,r){const a=xv;return il(),al("div",iq,[Zt("div",lq,[Zt("h1",cq,[Iv(" Gallery "),Zt("span",pq,or(r.links.length),1)]),Zt("button",{class:ru(["ml-4 my-8 px-4 border border-gray-400 rounded shadow",{"bg-blue-500 text-white":o.isOverlay,"bg-white text-blue-500":!o.isOverlay}]),onClick:e[0]||(e[0]=i=>o.isOverlay=!o.isOverlay)}," Overlay ",2),Zt("button",{class:ru(["ml-4 my-8 px-4 border border-gray-400 rounded shadow",{"bg-blue-500 text-white":o.isNatural,"bg-white text-blue-500":!o.isNatural}]),onClick:e[1]||(e[1]=i=>o.isNatural=!o.isNatural)}," Naturalize ",2)]),au(a,{links:r.links,"is-hidden":!r.isSafe&&!o.isOverlay||o.isOverlay&&r.isSafe,size:r.size,"is-natural":o.isNatural},null,8,["links","is-hidden","size","is-natural"])])}const yq=u0(aq,[["render",uq]]);export{yq as default};
